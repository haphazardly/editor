export const commands = [
   {
      label: "_record",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Record a demo incrementally.",
      type: "identifier",
   },
   {
      label: "adsp_debug",
      value: "0",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "ai_debug_dyninteractions",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Debug the NPC dynamic interaction system.",
      type: "number",
   },
   {
      label: "ai_debug_los",
      value: "0",
      flags: ["sv", "cheat"],
      detail:
         "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid.",
      type: "number",
   },
   {
      label: "ai_debug_off_nav",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "ai_debug_shoot_positions",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "ai_disabled",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "ai_show_current_nav",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "alias",
      value: "cmd",
      flags: ["release"],
      detail: "Alias a command.",
      type: "keyword",
   },
   {
      label: "ammo_338mag_max",
      value: "30",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_357sig_max",
      value: "52",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_357sig_min_max",
      value: "12",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_357sig_p250_max",
      value: "26",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_357sig_small_max",
      value: "24",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_45acp_max",
      value: "100",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_50AE_max",
      value: "35",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_556mm_box_max",
      value: "200",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_556mm_max",
      value: "90",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_556mm_small_max",
      value: "40",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_57mm_max",
      value: "100",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_762mm_max",
      value: "90",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_9mm_max",
      value: "120",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_buckshot_max",
      value: "32",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_grenade_limit_breachcharge",
      value: "3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_grenade_limit_bumpmine",
      value: "3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_grenade_limit_default",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_grenade_limit_flashbang",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_grenade_limit_snowballs",
      value: "3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_grenade_limit_total",
      value: "4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_grenade_limit_tripwirefire",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_item_limit_adrenaline",
      value: "5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ammo_item_limit_healthshot",
      value: "4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "anim_resource_validate_on_load",
      value: "true",
      flags: ["release"],
      detail: "Validates the animation group channel list against the animations on load for every animation",
      type: "boolean",
   },
   {
      label: "animated_material_attributes",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "animevents_dump",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "List all the currently registered anim events.",
      type: "identifier",
   },
   {
      label: "animgraph_debug",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Debug animation graph",
      type: "boolean",
   },
   {
      label: "animgraph_debug_entindex",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "The entity to specifically debug",
      type: "number",
   },
   {
      label: "animgraph_footlock_ik_enable",
      value: "true",
      flags: ["cheat"],
      detail: "Enable IK.",
      type: "boolean",
   },
   {
      label: "animgraph_record_all",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Automatically start recording AnimGraphs when they get created, and save them to disk when they are destroyed",
      type: "boolean",
   },
   {
      label: "animgraph_slope_draw_raycasts",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "animgraph_slope_enable",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "animgraph_trace_static_only",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "autobuy",
      value: "cmd",
      flags: ["cl", "clientcmd_can_execute"],
      detail: "Attempt to purchase items with the order listed in cl_autobuy",
      type: "identifier",
   },
   {
      label: "axis",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Draw an axis  Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>",
      type: "identifier",
   },
   {
      label: "battery_saver",
      value: "false",
      flags: ["a"],
      detail: "OBSOLETE replaced by mobile_fps_* - Battery saver mode. 0=off, 1=on",
      type: "boolean",
   },
   {
      label: "benchframe",
      value: "cmd",
      flags: ["release"],
      detail: "Takes a snapshot of a particular frame in a time demo.",
      type: "identifier",
   },
   {
      label: "bind",
      value: "cmd",
      flags: ["release"],
      detail: "Bind a key.",
      type: "keyword",
   },
   {
      label: "binddefaults",
      value: "cmd",
      flags: ["release"],
      detail: "Bind all keys to their default values.",
      type: "identifier",
   },
   {
      label: "bindss",
      value: "cmd",
      flags: ["release"],
      detail: "Bind a key for a particular splitscreen player.",
      type: "identifier",
   },
   {
      label: "bot_add",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "ct> <type> <difficulty> <name> - Adds a bot matching the given criteria.",
      type: "identifier",
   },
   {
      label: "bot_add_ct",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria.",
      type: "identifier",
   },
   {
      label: "bot_add_t",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria.",
      type: "identifier",
   },
   {
      label: "bot_all_weapons",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Allows the bots to use all weapons",
      type: "identifier",
   },
   {
      label: "bot_allow_grenades",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may use grenades.",
      type: "boolean",
   },
   {
      label: "bot_allow_machine_guns",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may use the machine gun.",
      type: "boolean",
   },
   {
      label: "bot_allow_pistols",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may use pistols.",
      type: "boolean",
   },
   {
      label: "bot_allow_rifles",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may use rifles.",
      type: "boolean",
   },
   {
      label: "bot_allow_rogues",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals.",
      type: "boolean",
   },
   {
      label: "bot_allow_shotguns",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may use shotguns.",
      type: "boolean",
   },
   {
      label: "bot_allow_snipers",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may use sniper rifles.",
      type: "boolean",
   },
   {
      label: "bot_allow_sub_machine_guns",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots may use sub-machine guns.",
      type: "boolean",
   },
   {
      label: "bot_autodifficulty_threshold_high",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty",
      type: "number",
   },
   {
      label: "bot_autodifficulty_threshold_low",
      value: "-2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty",
      type: "number",
   },
   {
      label: "bot_chatter",
      value: "normal",
      flags: ["sv", "rep", "release"],
      detail: "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'.",
      type: "identifier",
   },
   {
      label: "bot_controllable",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "Determines whether bots can be controlled by players",
      type: "boolean",
   },
   {
      label: "bot_coop_force_throw_grenade_chance",
      value: "0.3",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "bot_coop_idle_max_vision_distance",
      value: "1400",
      flags: ["sv", "rep", "release"],
      detail: "Max distance bots can see targets (in coop) when they are idle, dormant, hiding or asleep.",
      type: "number",
   },
   {
      label: "bot_crouch",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "bot_debug",
      value: "0",
      flags: ["sv", "rep", "cheat"],
      detail: "For internal testing purposes.",
      type: "number",
   },
   {
      label: "bot_debug_target",
      value: "0",
      flags: ["sv", "rep", "cheat"],
      detail: "For internal testing purposes.",
      type: "number",
   },
   {
      label: "bot_defer_to_human_goals",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero and there is a human on the team, the bots will not do the scenario tasks.",
      type: "boolean",
   },
   {
      label: "bot_defer_to_human_items",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero and there is a human on the team, the bots will not get scenario items.",
      type: "boolean",
   },
   {
      label: "bot_difficulty",
      value: "2",
      flags: ["sv", "rep", "release"],
      detail: "Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert.",
      type: "number",
   },
   {
      label: "bot_dont_shoot",
      value: "false",
      flags: ["sv", "rep", "cheat", "release"],
      detail: "If nonzero, bots will not fire weapons (for debugging).",
      type: "boolean",
   },
   {
      label: "bot_freeze",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "bot_goto_mark",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Sends a bot to the marked nav area (useful for testing navigation meshes)",
      type: "identifier",
   },
   {
      label: "bot_goto_selected",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Sends a bot to the selected nav area (useful for testing navigation meshes)",
      type: "identifier",
   },
   {
      label: "bot_ignore_enemies",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "If nonzero, bots will ignore enemies (for debugging).",
      type: "boolean",
   },
   {
      label: "bot_ignore_players",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Bots will not see non-bot players.",
      type: "boolean",
   },
   {
      label: "bot_join_after_player",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "If nonzero, bots wait until a player joins before entering the game.",
      type: "boolean",
   },
   {
      label: "bot_join_team",
      value: "any",
      flags: ["sv", "rep", "release"],
      detail: "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'.",
      type: "identifier",
   },
   {
      label: "bot_kick",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria.",
      type: "identifier",
   },
   {
      label: "bot_kill",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria.",
      type: "identifier",
   },
   {
      label: "bot_knives_only",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Restricts the bots to only using knives",
      type: "identifier",
   },
   {
      label: "bot_loadout",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "bots are given these items at round start",
      type: "number",
   },
   {
      label: "bot_max_visible_smoke_length",
      value: "200",
      flags: ["sv", "rep", "release"],
      detail: "Bots will see players through smoke clouds up to this length.",
      type: "number",
   },
   {
      label: "bot_max_vision_distance_override",
      value: "-1",
      flags: ["sv", "rep", "release"],
      detail: "Max distance bots can see targets.",
      type: "number",
   },
   {
      label: "bot_mimic",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Bot uses usercmd of player by index.",
      type: "number",
   },
   {
      label: "bot_mimic_spec_buttons",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "+attack, +jump etc are used for spectator control instead of being passed on to spectated bot",
      type: "boolean",
   },
   {
      label: "bot_mimic_yaw_offset",
      value: "180",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "bot_pistols_only",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Restricts the bots to only using pistols",
      type: "identifier",
   },
   {
      label: "bot_place",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "bot_place - Places a bot from the map at where the local player is pointing.",
      type: "identifier",
   },
   {
      label: "bot_quota",
      value: "10",
      flags: ["sv", "rep", "release"],
      detail: "Determines the total number of bots in the game.",
      type: "number",
   },
   {
      label: "bot_quota_mode",
      value: "fill",
      flags: ["sv", "rep", "release"],
      detail:
         "Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota. If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota.",
      type: "identifier",
   },
   {
      label: "bot_randombuy",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "should bots ignore their prefered weapons and just buy weapons at random?",
      type: "boolean",
   },
   {
      label: "bot_show_battlefront",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Show areas where rushing players will initially meet.",
      type: "boolean",
   },
   {
      label: "bot_show_nav",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "For internal testing purposes.",
      type: "boolean",
   },
   {
      label: "bot_show_occupy_time",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Show when each nav area can first be reached by each team.",
      type: "boolean",
   },
   {
      label: "bot_snipers_only",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Restricts the bots to only using sniper rifles",
      type: "identifier",
   },
   {
      label: "bot_stop",
      value: "0",
      flags: ["sv", "rep", "cheat"],
      detail: "all> | <not_bomber> | <t> | <ct>",
      type: "number",
   },
   {
      label: "bot_traceview",
      value: "0",
      flags: ["sv", "rep", "cheat"],
      detail: "For internal testing purposes.",
      type: "number",
   },
   {
      label: "bot_zombie",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "If nonzero, bots will stay in idle mode and not attack.",
      type: "boolean",
   },
   {
      label: "box",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Draw a bbox  Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>",
      type: "identifier",
   },
   {
      label: "buddha",
      value: "false",
      flags: ["sv", "nf", "cheat"],
      detail: "Player takes damage but won't die",
      type: "boolean",
   },
   {
      label: "buddha_ignore_bots",
      value: "false",
      flags: ["sv", "nf", "cheat"],
      detail: "Bots always buddha 0",
      type: "boolean",
   },
   {
      label: "buddha_reset_hp",
      value: "1",
      flags: ["sv", "nf", "cheat"],
      detail: "HP to set when damaged below zero in Buddha Mode",
      type: "number",
   },
   {
      label: "bug_submitter_override",
      value: "0",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "buymenu",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "Show or hide main buy menu",
      type: "identifier",
   },
   {
      label: "buyrandom",
      value: "cmd",
      flags: ["sv"],
      detail: "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue.",
      type: "identifier",
   },
   {
      label: "c_maxdistance",
      value: "200",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_maxpitch",
      value: "90",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_maxyaw",
      value: "135",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_mindistance",
      value: "30",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_minpitch",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_minyaw",
      value: "-135",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_orthoheight",
      value: "100",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_orthowidth",
      value: "100",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_thirdpersonshoulder",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "c_thirdpersonshoulderaimdist",
      value: "120",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_thirdpersonshoulderdist",
      value: "40",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_thirdpersonshoulderheight",
      value: "5",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "c_thirdpersonshoulderoffset",
      value: "20",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "callvote",
      value: "cmd",
      flags: ["sv"],
      detail: "Start a vote on an issue.",
      type: "identifier",
   },
   {
      label: "cam_collision",
      value: "1",
      flags: ["cl", "a"],
      detail: "When in thirdperson and cam_collision is set to 1, an attempt is made to keep the camera from passing though walls.",
      type: "number",
   },
   {
      label: "cam_command",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Tells camera to change modes",
      type: "identifier",
   },
   {
      label: "cam_idealdelta",
      value: "4",
      flags: ["cl", "a"],
      detail: "Controls the speed when matching offset to ideal angles in thirdperson view",
      type: "number",
   },
   {
      label: "cam_idealdist",
      value: "150",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "cam_ideallag",
      value: "4",
      flags: ["cl", "a"],
      detail: "Amount of lag used when matching offset to ideal angles in thirdperson view",
      type: "number",
   },
   {
      label: "cam_idealpitch",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "cam_idealyaw",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "cam_showangles",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "When in thirdperson, print viewangles/idealangles/cameraoffsets to the console.",
      type: "boolean",
   },
   {
      label: "cam_snapto",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "camortho",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Switch to orthographic camera.",
      type: "identifier",
   },
   {
      label: "cancelselect",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cash_player_bomb_defused",
      value: "300",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_bomb_planted",
      value: "300",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_damage_hostage",
      value: "-30",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_get_killed",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_interact_with_hostage",
      value: "300",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_killed_enemy_default",
      value: "300",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_killed_enemy_factor",
      value: "1",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_killed_hostage",
      value: "-1000",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_killed_teammate",
      value: "-300",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_rescued_hostage",
      value: "1000",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_player_respawn_amount",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_bonus_shorthanded",
      value: "1000",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_elimination_bomb_map",
      value: "3250",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_elimination_hostage_map_ct",
      value: "3000",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_elimination_hostage_map_t",
      value: "3000",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_hostage_alive",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_hostage_interaction",
      value: "600",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_loser_bonus",
      value: "1400",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_loser_bonus_consecutive_rounds",
      value: "500",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_planted_bomb_but_defused",
      value: "800",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_rescued_hostage",
      value: "600",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_survive_guardian_wave",
      value: "1000",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_terrorist_win_bomb",
      value: "3500",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_win_by_defusing_bomb",
      value: "3500",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_win_by_hostage_rescue",
      value: "2900",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_win_by_time_running_out_bomb",
      value: "3250",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_win_by_time_running_out_hostage",
      value: "3250",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cash_team_winner_bonus_consecutive_rounds",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cast_aabb",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests box collision detection",
      type: "identifier",
   },
   {
      label: "cast_bullet",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests bullet cast",
      type: "identifier",
   },
   {
      label: "cast_capsule",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests capsule collision detection",
      type: "identifier",
   },
   {
      label: "cast_convex",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests convex hull collision detection",
      type: "identifier",
   },
   {
      label: "cast_cylinder",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests cylinder collision detection",
      type: "identifier",
   },
   {
      label: "cast_intervals",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests interval ray cast",
      type: "identifier",
   },
   {
      label: "cast_obb",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests cylinder collision detection",
      type: "identifier",
   },
   {
      label: "cast_physics",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests physics shape collision detection",
      type: "identifier",
   },
   {
      label: "cast_ray",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests ray cast",
      type: "identifier",
   },
   {
      label: "cast_sphere",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Tests sphere cast",
      type: "identifier",
   },
   {
      label: "cc_delay_time",
      value: "0.25",
      flags: ["cl", "a"],
      detail: "Close caption delay before showing caption.",
      type: "number",
   },
   {
      label: "cc_lang",
      value: "0",
      flags: ["cl", "a"],
      detail: "Current close caption language (emtpy = use game UI language)",
      type: "number",
   },
   {
      label: "cc_linger_time",
      value: "1",
      flags: ["cl", "a"],
      detail: "Close caption linger time.",
      type: "number",
   },
   {
      label: "cc_spectator_only",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cc_subtitles",
      value: "false",
      flags: ["cl", "a"],
      detail: "If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players).",
      type: "boolean",
   },
   {
      label: "cc_vr_caption_speed",
      value: "1",
      flags: ["cl", "a"],
      detail: "0 = slow, 1 = medium (default), 2 = fast",
      type: "number",
   },
   {
      label: "cc_vr_font_size",
      value: "1",
      flags: ["cl", "a"],
      detail: "0 = small, 1 = med (default), 2 = large",
      type: "number",
   },
   {
      label: "cc_vr_width",
      value: "1",
      flags: ["cl", "a"],
      detail: "0 = narrow, 1 = med (default), 2 = wide",
      type: "number",
   },
   {
      label: "changelevel",
      value: "cmd",
      flags: ["release"],
      detail: "changelevel <mapname> :Multiplayer change level.",
      type: "identifier",
   },
   {
      label: "cl_allow_animated_avatars",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "Whether or not to allow animated avatars",
      type: "boolean",
   },
   {
      label: "cl_auto_cursor_scale",
      value: "true",
      flags: ["a"],
      detail: "Automatic cursor size scaling.",
      type: "boolean",
   },
   {
      label: "cl_autobuy",
      value: "vesthelm vest m4a1 ak47 famas galilar mp7 nova defuser",
      flags: ["cl", "release"],
      detail: "The order in which autobuy will attempt to purchase items",
      type: "identifier",
   },
   {
      label: "cl_autohelp",
      value: "true",
      flags: ["cl", "a", "user"],
      detail: "Auto-help",
      type: "boolean",
   },
   {
      label: "cl_avatar_convert_png",
      value: "cmd",
      flags: ["cl", "cheat", "release"],
      detail: "Converts all rgb avatars in the avatars directory to png",
      type: "identifier",
   },
   {
      label: "cl_avatar_convert_rgb",
      value: "cmd",
      flags: ["cl", "cheat", "release"],
      detail: "Converts all png avatars in the avatars directory to rgb",
      type: "identifier",
   },
   {
      label: "cl_axis",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Draw an axis  Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>",
      type: "identifier",
   },
   {
      label: "cl_borrow_music_from_player_slot",
      value: "-1",
      flags: ["cl", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_box",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Draw a bbox  Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>",
      type: "identifier",
   },
   {
      label: "cl_buywheel_donate_key",
      value: "0",
      flags: ["cl", "a", "per_user", "release"],
      detail: "Set the key to use for donation in the buy menu. 0: Left Control; 1: Left Alt; 2: Left Shift.",
      type: "number",
   },
   {
      label: "cl_buywheel_nonumberpurchasing",
      value: "false",
      flags: ["cl", "a", "per_user", "release"],
      detail: "Set non-zero to prevent buy wheel from purchasing via number keys",
      type: "boolean",
   },
   {
      label: "cl_change_callback_limit",
      value: "0.2",
      flags: ["cl", "release"],
      detail: "change callback msec warning limit",
      type: "number",
   },
   {
      label: "cl_chatfilters",
      value: "63",
      flags: ["cl", "a"],
      detail: "Stores the chat filter settings",
      type: "number",
   },
   {
      label: "cl_checkdeclareclasses",
      value: "cmd",
      flags: ["cheat"],
      detail: "Check game code serializers",
      type: "identifier",
   },
   {
      label: "cl_clock_correction",
      value: "true",
      flags: ["cheat"],
      detail: "Enable/disable clock correction on the client.",
      type: "boolean",
   },
   {
      label: "cl_clock_correction_adjustment_max_amount",
      value: "200",
      flags: ["cheat"],
      detail:
         "Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset.",
      type: "number",
   },
   {
      label: "cl_clock_correction_adjustment_max_offset",
      value: "90",
      flags: ["cheat"],
      detail:
         "As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small.",
      type: "number",
   },
   {
      label: "cl_clock_correction_adjustment_min_offset",
      value: "10",
      flags: ["cheat"],
      detail: "If the clock offset is less than this amount (in milliseconds), then no clock correction is applied.",
      type: "number",
   },
   {
      label: "cl_clock_correction_force_server_tick",
      value: "999",
      flags: ["cheat"],
      detail: "Force clock correction to match the server tick + this offset (-999 disables it).",
      type: "number",
   },
   {
      label: "cl_clockdrift_max_ticks",
      value: "3",
      flags: ["cheat"],
      detail: "Maximum number of ticks the clock is allowed to drift before the client snaps its clock to the server's.",
      type: "number",
   },
   {
      label: "cl_clutch_mode",
      value: "false",
      flags: ["cl", "release"],
      detail: "Silence voice and other distracting sounds until the end of round or next death.",
      type: "boolean",
   },
   {
      label: "cl_color",
      value: "1",
      flags: ["cl", "a", "user"],
      detail: "Preferred teammate color",
      type: "number",
   },
   {
      label: "cl_connectionretrytime_p2p",
      value: "20",
      flags: ["release"],
      detail: "Number of seconds over which to spread retry attempts for P2P.",
      type: "number",
   },
   {
      label: "cl_cq_min_queue",
      value: "0",
      flags: ["cl", "user"],
      detail:
         "Allows client to disable (=-1), defer to server (=0), or request a certain min-command queue size for games that support the command queue (IsUsingCommandQueue()) for CUserCmds.",
      type: "number",
   },
   {
      label: "cl_crosshair_drawoutline",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "Draws a black outline around the crosshair for better visibility",
      type: "boolean",
   },
   {
      label: "cl_crosshair_dynamic_maxdist_splitratio",
      value: "0.35",
      flags: ["cl", "a", "per_user"],
      detail:
         "If using cl_crosshairstyle 2, this is the ratio used to determine how long the inner and outer xhair pips will be. [inner = cl_crosshairsize*(1-cl_crosshair_dynamic_maxdist_splitratio), outer = cl_crosshairsize*cl_crosshair_dynamic_maxdist_splitratio]  [0 - 1]",
      type: "number",
   },
   {
      label: "cl_crosshair_dynamic_splitalpha_innermod",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail:
         "If using cl_crosshairstyle 2, this is the alpha modification that will be used for the INNER crosshair pips once they've split. [0 - 1]",
      type: "number",
   },
   {
      label: "cl_crosshair_dynamic_splitalpha_outermod",
      value: "0.5",
      flags: ["cl", "a", "per_user"],
      detail:
         "If using cl_crosshairstyle 2, this is the alpha modification that will be used for the OUTER crosshair pips once they've split. [0.3 - 1]",
      type: "number",
   },
   {
      label: "cl_crosshair_dynamic_splitdist",
      value: "6",
      flags: ["cl", "a", "per_user"],
      detail: "If using cl_crosshairstyle 2, this is the distance that the crosshair pips will split into 2. (default is 7)",
      type: "number",
   },
   {
      label: "cl_crosshair_friendly_warning",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "0: off, 1: on",
      type: "number",
   },
   {
      label: "cl_crosshair_outlinethickness",
      value: "1.35827",
      flags: ["cl", "a", "per_user"],
      detail: "Set how thick you want your crosshair outline to draw (0-3)",
      type: "number",
   },
   {
      label: "cl_crosshair_recoil",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_crosshair_sniper_show_normal_inaccuracy",
      value: "false",
      flags: ["cl", "a", "per_user"],
      detail: "Include standing inaccuracy when determining sniper crosshair blur",
      type: "boolean",
   },
   {
      label: "cl_crosshair_sniper_width",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "If >1 sniper scope cross lines gain extra width (1 for single-pixel hairline)",
      type: "number",
   },
   {
      label: "cl_crosshair_t",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "T style crosshair",
      type: "boolean",
   },
   {
      label: "cl_crosshairalpha",
      value: "255",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_crosshaircolor",
      value: "5",
      flags: ["cl", "a", "per_user"],
      detail: "Set crosshair color as defined in game_options.consoles.txt",
      type: "number",
   },
   {
      label: "cl_crosshaircolor_b",
      value: "255",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_crosshaircolor_g",
      value: "0",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_crosshaircolor_r",
      value: "255",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_crosshairdot",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_crosshairgap",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_crosshairgap_useweaponvalue",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "If set to 1, the gap will update dynamically based on which weapon is currently equipped",
      type: "boolean",
   },
   {
      label: "cl_crosshairsize",
      value: "4.41819",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_crosshairstyle",
      value: "2",
      flags: ["cl", "a", "per_user"],
      detail:
         "0 = DEFAULT (DISABLED), 1 = DEFAULT STATIC (DISABLED), 2 = DEFAULT (accurate recoil/spread feedback with a fixed inner part), 3 = ACCURATE DYNAMIC (DISABLED) (accurate recoil/spread feedback), 4 = DEFAULT STATIC, 5 = LEGACY (fake recoil - inaccurate feedback)",
      type: "number",
   },
   {
      label: "cl_crosshairthickness",
      value: "0.898255",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_crosshairusealpha",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_cursor_scale",
      value: "1",
      flags: ["a"],
      detail: "Cursor size scaling factor.",
      type: "number",
   },
   {
      label: "cl_dangerzone_approaching_sound_radius",
      value: "700",
      flags: ["cl", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_dangerzone_moving_sound_volume",
      value: "0.5",
      flags: ["cl", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_dangerzone_sound_volume",
      value: "0.2",
      flags: ["cl", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_deathcam_audio_mix_phase1_fade_amount",
      value: "0.15",
      flags: ["cl", "release"],
      detail: "Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied.",
      type: "number",
   },
   {
      label: "cl_deathcam_audio_mix_phase1_fade_time",
      value: "2",
      flags: ["cl", "release"],
      detail: "Sets the amount of time we fade out over.",
      type: "number",
   },
   {
      label: "cl_deathcam_audio_mix_phase2_fade_amount",
      value: "0.5",
      flags: ["cl", "release"],
      detail: "Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied.",
      type: "number",
   },
   {
      label: "cl_deathcam_audio_mix_phase2_fade_time",
      value: "0.4",
      flags: ["cl", "release"],
      detail: "Sets the amount of time we fade out over.",
      type: "number",
   },
   {
      label: "cl_deathcampanel_position_dynamic",
      value: "1",
      flags: ["cl", "a"],
      detail: "Turn on/off deathcam's kill panel dynamic Y movement",
      type: "number",
   },
   {
      label: "cl_debounce_zoom",
      value: "true",
      flags: ["cl", "a", "user", "per_user"],
      detail: "Whether or not to disable holding secondary fire to cycle zoom levels",
      type: "boolean",
   },
   {
      label: "cl_debug_overlays_broadcast",
      value: "false",
      flags: ["release"],
      detail: "Render debug overlays from server.",
      type: "boolean",
   },
   {
      label: "cl_debugoverlay_cycle_domain",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Toggles visibility of the debug overlay system.",
      type: "identifier",
   },
   {
      label: "cl_debugoverlay_cycle_state",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Toggles visibility of the debug overlay system.",
      type: "identifier",
   },
   {
      label: "cl_debugoverlay_hide_imgui",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Hides the overlay.",
      type: "identifier",
   },
   {
      label: "cl_debugoverlay_toggle",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Toggles visibility of the debug overlay system.",
      type: "identifier",
   },
   {
      label: "cl_disable_deathcam_audio_mix_fade_out",
      value: "false",
      flags: ["cl", "release"],
      detail: "When set to true, disables audio being silenced while the death cam fades out.",
      type: "boolean",
   },
   {
      label: "cl_disable_ragdolls",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_disable_round_end_report",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_display_game_events",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_dm_buyrandomweapons",
      value: "true",
      flags: ["cl", "a", "release"],
      detail:
         "Player will automatically receive a random weapon on spawn in deathmatch if this is set to 1 (otherwise, they will receive the last weapon)",
      type: "boolean",
   },
   {
      label: "cl_draw_only_deathnotices",
      value: "false",
      flags: ["cl", "release"],
      detail: "For drawing only the crosshair and death notices (used for moviemaking)",
      type: "boolean",
   },
   {
      label: "cl_drawcross",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Draws a cross at the given location  Arguments: x y z",
      type: "identifier",
   },
   {
      label: "cl_drawhud",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Enable the rendering of the hud",
      type: "boolean",
   },
   {
      label: "cl_drawhud_force_deathnotices",
      value: "0",
      flags: ["cl", "release"],
      detail: "0: default; 1: draw deathnotices even if hud disabled; -1: force no deathnotices",
      type: "number",
   },
   {
      label: "cl_drawhud_force_radar",
      value: "0",
      flags: ["cl", "release"],
      detail: "0: default; 1: draw radar even if hud disabled; -1: force no radar",
      type: "number",
   },
   {
      label: "cl_drawhud_force_teamid_overhead",
      value: "0",
      flags: ["cl", "release"],
      detail: "0: default; 1: draw teamid even if hud disabled; -1: force no teamid",
      type: "number",
   },
   {
      label: "cl_drawhud_specvote",
      value: "true",
      flags: ["cl", "release"],
      detail: "1: default; 0: disables vote UI for spectators",
      type: "boolean",
   },
   {
      label: "cl_drawline",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Draws line between two 3D Points.  Green if no collision  Red is collides with something  Arguments: x1 y1 z1 x2 y2 z2",
      type: "identifier",
   },
   {
      label: "cl_dumpentity",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Dumps info about an entity",
      type: "identifier",
   },
   {
      label: "cl_ent_absbox",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_actornames",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
      type: "identifier",
   },
   {
      label: "cl_ent_animgraph_debug",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays debug draws about the given entity(ies) animgraph  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_animgraph_record",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Toggles recording of animgraph replay of the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_attachments",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_bbox",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_call",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
      type: "identifier",
   },
   {
      label: "cl_ent_clear_debug_overlays",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Clears all debug overlays",
      type: "identifier",
   },
   {
      label: "cl_ent_find",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Find and list all entities with classnames or targetnames that contain the specified substrings. Format: find_ent <substring>",
      type: "identifier",
   },
   {
      label: "cl_ent_find_index",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Display data for entity matching specified index. Format: find_ent_index <index>",
      type: "identifier",
   },
   {
      label: "cl_ent_grab",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "grabs the object in front of the player. Options: -loose -multiple -toggle",
      type: "identifier",
   },
   {
      label: "cl_ent_hierarchy",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Prints the entity hierarchy tree rooted at the specified ent(s)",
      type: "identifier",
   },
   {
      label: "cl_ent_hitbox",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the hitboxes for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_joints",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the joint names + axes an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_messages",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_name",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Displays the entity name",
      type: "identifier",
   },
   {
      label: "cl_ent_picker",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.  Arguments: full - enables all debug information",
      type: "identifier",
   },
   {
      label: "cl_ent_pivot",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_pivot_size",
      value: "20",
      flags: ["cl", "a", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_ent_remove",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Removes the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_remove_all",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Removes all entities of the specified type  Arguments:    {entity_name} / {class_name}",
      type: "identifier",
   },
   {
      label: "cl_ent_scale",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Scales entities. Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      type: "identifier",
   },
   {
      label: "cl_ent_scenehierarchy",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
      type: "identifier",
   },
   {
      label: "cl_ent_script_dump",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Dumps the names and values of this entity's script scope to the console  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_select",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Select or deselects the given entities(s) for later manipulation  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_setang",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Set entity angles",
      type: "identifier",
   },
   {
      label: "cl_ent_setname",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Sets the targetname of the given entity(s)  Arguments:    <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      type: "identifier",
   },
   {
      label: "cl_ent_setpos",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Move entity to position",
      type: "identifier",
   },
   {
      label: "cl_ent_show_contexts",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Show entity contexts in ent_text display",
      type: "boolean",
   },
   {
      label: "cl_ent_show_damage",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
      type: "identifier",
   },
   {
      label: "cl_ent_showonlyattachment",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_ent_showonlyhitbox",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_ent_skeleton",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_text",
      value: "cmd",
      flags: ["cl", "cheat", "vconsole_fuzzy"],
      detail:
         "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_text256",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_text_clear",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_text_filter",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Set which ent_text filters you want:",
      type: "identifier",
   },
   {
      label: "cl_ent_text_flags_active",
      value: "-1",
      flags: ["cl", "a", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_ent_text_no_name_really_i_mean_it",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_ent_text_radius",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)  2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      type: "identifier",
   },
   {
      label: "cl_ent_text_sticky_add",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_text_sticky_clear",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_text_sticky_dump",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_text_sticky_remove",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_ungrab",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "un-grabs all objects",
      type: "identifier",
   },
   {
      label: "cl_ent_vcollide_wireframe",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_ent_viewoffset",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the eye position for the given entity(ies) in red.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cl_error_report_time",
      value: "0",
      flags: ["cl", "release"],
      detail: "Minimum time in seconds that must elapse before printing prediction error summary. 0 to disable.",
      type: "number",
   },
   {
      label: "cl_extrapolate",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Enable/disable extrapolation if interpolation history runs out.",
      type: "boolean",
   },
   {
      label: "cl_extrapolate_amount",
      value: "0.25",
      flags: ["cl", "cheat"],
      detail: "Set how many seconds the client will extrapolate entities for.",
      type: "number",
   },
   {
      label: "cl_eye_occlusion_debug",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_fixedcrosshairgap",
      value: "3",
      flags: ["cl", "a", "per_user"],
      detail: "For crosshair style 1: How big to make the gap between the pips in the fixed crosshair",
      type: "number",
   },
   {
      label: "cl_flushentitypacket",
      value: "0",
      flags: ["cheat"],
      detail: "For debugging. Force the engine to flush an entity packet.",
      type: "number",
   },
   {
      label: "cl_fullupdate",
      value: "cmd",
      flags: ["cheat"],
      detail: "Force uncompressed update",
      type: "identifier",
   },
   {
      label: "cl_glow_brightness",
      value: "1",
      flags: ["cl", "cheat"],
      detail: "Brightness of player halos",
      type: "number",
   },
   {
      label: "cl_glow_item_far_b",
      value: "1",
      flags: ["cl", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_glow_item_far_g",
      value: "0.4",
      flags: ["cl", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_glow_item_far_r",
      value: "0.3",
      flags: ["cl", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_hide_avatar_images",
      value: "0",
      flags: ["cl", "a"],
      detail: "Hide avatar images for other players.   0 - Off.  1 - Block All  2 - Block all but friends",
      type: "number",
   },
   {
      label: "cl_http_log_enable",
      value: "false",
      flags: ["cl", "norecord", "release", "clientcmd_can_execute"],
      detail: "Allows sending HTTP log from client main menu.",
      type: "boolean",
   },
   {
      label: "cl_hud_color",
      value: "11",
      flags: ["cl", "a", "release"],
      detail:
         "0 = team color, 1 = white, 2 = bright white, 3 = light blue, 4 = blue, 5 = purple, 6 = red, 7 = orange, 8 = yellow, 9 = green, 10 = aqua, 11 = pink.",
      type: "number",
   },
   {
      label: "cl_hud_radar_scale",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_ignorepackets",
      value: "false",
      flags: ["cheat"],
      detail: "Force client to ignore packets (for debugging).",
      type: "boolean",
   },
   {
      label: "cl_imgui_set_selection",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Sets ImGui selection",
      type: "identifier",
   },
   {
      label: "cl_imgui_set_status_text",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Sets ImGui header status text",
      type: "identifier",
   },
   {
      label: "cl_import_csgo_config",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_interp_hermite",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Set to zero do disable hermite interpolation.",
      type: "boolean",
   },
   {
      label: "cl_interpolate_report",
      value: "false",
      flags: ["cl", "a"],
      detail: "Enable to show interpolation profile timing",
      type: "boolean",
   },
   {
      label: "cl_inventory_debug_tooltip",
      value: "false",
      flags: ["cl", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_inventory_radial_immediate_select",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail:
         "In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit.",
      type: "boolean",
   },
   {
      label: "cl_inventory_radial_tap_to_cycle",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail:
         "In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit.",
      type: "boolean",
   },
   {
      label: "cl_inventory_saved_filter2",
      value: "all",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_inventory_saved_sort2",
      value: "inv_sort_age",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_invites_only_friends",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "If turned on, will ignore in-game invites from recent teammates or other non-friends",
      type: "boolean",
   },
   {
      label: "cl_invites_only_mainmenu",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "If turned on, will ignore all invites when user is playing a match",
      type: "boolean",
   },
   {
      label: "cl_itemimages_dynamically_generated",
      value: "2",
      flags: ["cl", "a", "release"],
      detail: "2: use render-targets, fallback to cache and disk; 1: no render targets, but use cache and fallback to disk; 0: disk assets only",
      type: "number",
   },
   {
      label: "cl_jiggle_bone_debug",
      value: "false",
      flags: ["cheat"],
      detail: "Display physics-based 'jiggle bone' debugging information",
      type: "boolean",
   },
   {
      label: "cl_jiggle_bone_debug_pitch_constraints",
      value: "false",
      flags: ["cheat"],
      detail: "Display physics-based 'jiggle bone' debugging information",
      type: "boolean",
   },
   {
      label: "cl_jiggle_bone_debug_yaw_constraints",
      value: "false",
      flags: ["cheat"],
      detail: "Display physics-based 'jiggle bone' debugging information",
      type: "boolean",
   },
   {
      label: "cl_jiggle_bone_invert",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_join_advertise",
      value: "1",
      flags: ["cl", "a"],
      detail: "Advertise joinable game in progress to Steam friends, otherwise need a Steam invite (2: all servers, 1: official servers, 0: none)",
      type: "number",
   },
   {
      label: "cl_lagcompensation",
      value: "true",
      flags: ["cl", "user"],
      detail: "Perform server side lag compensation of weapon firing events.",
      type: "boolean",
   },
   {
      label: "cl_latch_report",
      value: "false",
      flags: ["cl", "a"],
      detail: "Enable to output stats about latching",
      type: "boolean",
   },
   {
      label: "cl_leveloverview",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_lightquery_debug",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_loadout_saved_sort",
      value: "inv_sort_age",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_lock_camera",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_mouselook",
      value: "true",
      flags: ["cl", "a", "user", "per_user", "disconnected"],
      detail: "Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server.",
      type: "boolean",
   },
   {
      label: "cl_mute_all_but_friends_and_party",
      value: "0",
      flags: ["cl", "a"],
      detail:
         "Only allow communication from friends and matchmaking party members. Set to 1 to apply the in non-competitive game modes. Set to 2 will apply the setting in all modes.",
      type: "number",
   },
   {
      label: "cl_mute_enemy_team",
      value: "false",
      flags: ["cl", "a"],
      detail: "Block all communication from players on the enemy team.",
      type: "boolean",
   },
   {
      label: "cl_new_user_phase",
      value: "-1",
      flags: ["cl", "a", "release"],
      detail: "0: Not Started, 1: Needs Training, 2: Training Complete, -1: Disabled",
      type: "number",
   },
   {
      label: "cl_obs_interp_enable",
      value: "true",
      flags: ["cl", "a"],
      detail: "Enables interpolation between observer targets",
      type: "boolean",
   },
   {
      label: "cl_obs_interp_pos_rate",
      value: "0.27",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_observed_bot_crosshair",
      value: "0",
      flags: ["cl", "a", "release"],
      detail:
         "Control the crosshair shown when observing a bot. 0: Show player crosshair. 1: Show player crosshair only when bot can be taken over, otherwise show default.. 2: Always show default crosshair for bots.",
      type: "number",
   },
   {
      label: "cl_paintkit_override",
      value: "0",
      flags: ["cl", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_particle_retire_cost",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_particle_simulate",
      value: "true",
      flags: ["cheat"],
      detail: "Enables/Disables Particle Simulation",
      type: "boolean",
   },
   {
      label: "cl_pclass",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Dump entity by prediction classname.",
      type: "number",
   },
   {
      label: "cl_pdump",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "Dump info about this entity to screen.",
      type: "number",
   },
   {
      label: "cl_phys_debug_callback_entities",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Print all entities that get touch callbacks. Each entity is printed only once.",
      type: "boolean",
   },
   {
      label: "cl_phys_enabled",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Enable all physics simulation",
      type: "boolean",
   },
   {
      label: "cl_phys_sleep_enable",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Enable sleeping for dynamic physics bodies.",
      type: "boolean",
   },
   {
      label: "cl_phys_stop_at_collision",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_ping_fade_deadzone",
      value: "60",
      flags: ["cl", "a", "release"],
      detail: "Distance from the crosshair over which the ping is completely invisible",
      type: "number",
   },
   {
      label: "cl_ping_fade_distance",
      value: "300",
      flags: ["cl", "a", "release"],
      detail: "Distance from the crosshair over which the ping fades",
      type: "number",
   },
   {
      label: "cl_pitchdown",
      value: "89",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_pitchup",
      value: "89",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_player_ping_mute",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "If 1, player pinging will make a sound, if 0, pings will be silent",
      type: "number",
   },
   {
      label: "cl_player_proximity_debug",
      value: "false",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_player_ragdolls_collide",
      value: "false",
      flags: ["cl", "cheat", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_playerspray_auto_apply",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "Automatically apply graffiti when graffiti menu closes",
      type: "boolean",
   },
   {
      label: "cl_playerspraydisable",
      value: "false",
      flags: ["cl", "a"],
      detail: "Disable player sprays.",
      type: "boolean",
   },
   {
      label: "cl_predict",
      value: "true",
      flags: ["cl", "user", "cheat"],
      detail: "Perform client side prediction.",
      type: "boolean",
   },
   {
      label: "cl_predictweapons",
      value: "true",
      flags: ["cl", "user"],
      detail: "Perform client side prediction of weapon effects.",
      type: "boolean",
   },
   {
      label: "cl_promoted_settings_acknowledged",
      value: "1",
      flags: ["cl, a"],
      detail: "Acknowledges that the user has seen promoted settings, preventing them from being repeatedly highlighted or indicated as new.",
      type: "number",
   },
   {
      label: "cl_prop_debug",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
      type: "identifier",
   },
   {
      label: "cl_querycache_stats",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Display status of the query cache (client only)",
      type: "identifier",
   },
   {
      label: "cl_quickinventory_filename",
      value: "radial_quickinventory.txt",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_quickinventory_lastinv",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_quickinventory_line_update_speed",
      value: "65",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_radar_always_centered",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "If set to 0, the radar is maximally used. Otherwise the player is always centered, even at map extents.",
      type: "boolean",
   },
   {
      label: "cl_radar_icon_scale_min",
      value: "0.6",
      flags: ["cl", "a", "release"],
      detail: "Sets the minimum icon scale. Valid values are 0.4 to 1.25.",
      type: "number",
   },
   {
      label: "cl_radar_rotate",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "1",
      type: "boolean",
   },
   {
      label: "cl_radar_scale",
      value: "0.7",
      flags: ["cl", "a", "release"],
      detail: "Sets the radar scale. Valid values are 0.25 to 1.0.",
      type: "number",
   },
   {
      label: "cl_radar_square_with_scoreboard",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "If set, the radar will toggle to square when the scoreboard is visible.",
      type: "boolean",
   },
   {
      label: "cl_radial_radio_tab",
      value: "0",
      flags: ["cl", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_radial_radio_tab_0_text_1",
      value: "#Chatwheel_requestspend",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_0_text_2",
      value: "#Chatwheel_requestweapon",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_0_text_3",
      value: "#Chatwheel_bplan",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_0_text_4",
      value: "#Chatwheel_followingyou",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_0_text_5",
      value: "#Chatwheel_midplan",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_0_text_6",
      value: "#Chatwheel_followme",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_0_text_7",
      value: "#Chatwheel_aplan",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_0_text_8",
      value: "#Chatwheel_requestecoround",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_1",
      value: "#Chatwheel_enemyspotted",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_2",
      value: "#Chatwheel_needbackup",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_3",
      value: "#Chatwheel_bplan",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_4",
      value: "#Chatwheel_bombcarrierspotted",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_5",
      value: "#Chatwheel_multipleenemieshere",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_6",
      value: "#Chatwheel_sniperspotted",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_7",
      value: "#Chatwheel_aplan",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_1_text_8",
      value: "#Chatwheel_inposition",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_1",
      value: "#Chatwheel_affirmative",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_2",
      value: "#Chatwheel_negative",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_3",
      value: "#Chatwheel_compliment",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_4",
      value: "#Chatwheel_thanks",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_5",
      value: "#Chatwheel_cheer",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_6",
      value: "#Chatwheel_peptalk",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_7",
      value: "#Chatwheel_sorry",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tab_2_text_8",
      value: "#Chatwheel_sectorclear",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_radial_radio_tap_to_ping",
      value: "true",
      flags: ["cl", "a", "release"],
      detail:
         "When tapping the radial radio button, leave a ping if nothing is selected within the time in seconds set in cl_radial_menu_tap_duration",
      type: "boolean",
   },
   {
      label: "cl_radial_radio_version_reset",
      value: "12",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_radialmenu_deadzone_size",
      value: "0.4",
      flags: ["cl", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_radialmenu_deadzone_size_joystick",
      value: "0.17",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_ragdoll_limit",
      value: "20",
      flags: ["cl", "a"],
      detail: "Maximum number of ragdolls to show (-1 disables limit)",
      type: "number",
   },
   {
      label: "cl_ragdoll_lru_debug",
      value: "false",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_ragdoll_workaround_threshold",
      value: "4",
      flags: ["cl", "release"],
      detail:
         "Mainly cosmetic, client-only effect: when client doesn't know the last position of another player that spawns a ragdoll, the ragdoll creation is simplified and ragdoll is created in the right place. If you increase this significantly, ragdoll positions on your client may be dramatically wrong, but it won't affect other clients",
      type: "number",
   },
   {
      label: "cl_rebuy",
      value: "Armor PrimaryWeapon Flashbang SmokeGrenade Defuser HEGrenade Flashbang SecondaryWeapon Molotov IncGrenade Decoy Taser",
      flags: ["cl", "release"],
      detail: "The order in which rebuy will attempt to repurchase items",
      type: "identifier",
   },
   {
      label: "cl_redemption_reset_timestamp",
      value: "1695896463",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_removedecals",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Remove the decals from the entity under the crosshair.",
      type: "identifier",
   },
   {
      label: "cl_resend",
      value: "0.5",
      flags: ["release"],
      detail: "Delay in seconds before the client will resend the 'connect' attempt",
      type: "number",
   },
   {
      label: "cl_rr_reloadresponsesystems",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Reload all response system scripts.",
      type: "identifier",
   },
   {
      label: "cl_sanitize_muted_players",
      value: "true",
      flags: ["cl", "release"],
      detail: "Hide names and avatars of muted players.",
      type: "boolean",
   },
   {
      label: "cl_sanitize_player_names",
      value: "false",
      flags: ["cl", "a"],
      detail: "Replace names of other players with something non-offensive.",
      type: "boolean",
   },
   {
      label: "cl_save_animgraph_recording",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Saves all active animgraph recordings to disk",
      type: "identifier",
   },
   {
      label: "cl_scoreboard_mouse_enable_binding",
      value: "+attack2",
      flags: ["cl", "a"],
      detail: "Name of the binding to enable mouse selection in the scoreboard",
      type: "identifier",
   },
   {
      label: "cl_scoreboard_survivors_always_on",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_script_add_debug_filter",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Add a filter to the game debug overlay",
      type: "identifier",
   },
   {
      label: "cl_script_add_watch",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Add a watch to the game debug overlay",
      type: "identifier",
   },
   {
      label: "cl_script_add_watch_pattern",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Add a watch to the game debug overlay",
      type: "identifier",
   },
   {
      label: "cl_script_attach_debugger",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Connect the vscript VM to the script debugger",
      type: "identifier",
   },
   {
      label: "cl_script_clear_watches",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Clear all watches from the game debug overlay",
      type: "identifier",
   },
   {
      label: "cl_script_debug",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Toggle the in-game script debug features",
      type: "identifier",
   },
   {
      label: "cl_script_dump_all",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Dump the state of the VM to the console",
      type: "identifier",
   },
   {
      label: "cl_script_find",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Find a key in the VM",
      type: "identifier",
   },
   {
      label: "cl_script_help",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Output help for script functions",
      type: "identifier",
   },
   {
      label: "cl_script_reload",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Reload scripts",
      type: "identifier",
   },
   {
      label: "cl_script_reload_code",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Execute a vscript file, replacing existing functions with the functions in the run script",
      type: "identifier",
   },
   {
      label: "cl_script_reload_entity_code",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
      type: "identifier",
   },
   {
      label: "cl_script_remove_debug_filter",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Remove a filter from the game debug overlay",
      type: "identifier",
   },
   {
      label: "cl_script_remove_watch",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Remove a watch from the game debug overlay",
      type: "identifier",
   },
   {
      label: "cl_script_remove_watch_pattern",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Remove a watch from the game debug overlay",
      type: "identifier",
   },
   {
      label: "cl_script_resurrect_unreachable",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Use the garbage collector to track down reference cycles",
      type: "identifier",
   },
   {
      label: "cl_script_trace_disable",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Turn off a particular trace output by file or function name",
      type: "identifier",
   },
   {
      label: "cl_script_trace_disable_all",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Turn off all trace output",
      type: "identifier",
   },
   {
      label: "cl_script_trace_disable_key",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Turn off a particular trace output by table/instance",
      type: "identifier",
   },
   {
      label: "cl_script_trace_enable",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Turn on a particular trace output by file or function name",
      type: "identifier",
   },
   {
      label: "cl_script_trace_enable_all",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Turn on all trace output",
      type: "identifier",
   },
   {
      label: "cl_script_trace_enable_key",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Turn on a particular trace output by table/instance",
      type: "identifier",
   },
   {
      label: "cl_server_graphic1_enable",
      value: "true",
      flags: ["cl", "release"],
      detail: "When enabled, 360x60 (<16kb) image file will be displayed to on-server spectators.",
      type: "boolean",
   },
   {
      label: "cl_server_graphic2_enable",
      value: "true",
      flags: ["cl", "release"],
      detail: "When enabled, 220x45 (<16kb) image file will be displayed to on-server spectators.",
      type: "boolean",
   },
   {
      label: "cl_show_clan_in_death_notice",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "Is set, the clan name will show next to player names in the death notices.",
      type: "boolean",
   },
   {
      label: "cl_show_equipped_character_for_player_avatars",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_show_observer_crosshair",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "Show the crosshair of the player being observed. 0: off 1: friends and party 2: everyone",
      type: "number",
   },
   {
      label: "cl_showents",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Dump entity list to console.",
      type: "identifier",
   },
   {
      label: "cl_showerror",
      value: "0",
      flags: ["cl", "release"],
      detail:
         "Show prediction errors, 2 for above plus detailed field deltas, 3 to filter out serverside known prediction errors, -entindex for specific entity.",
      type: "number",
   },
   {
      label: "cl_showfps",
      value: "0",
      flags: ["cl", "release"],
      detail: "Draw fps meter at top of screen (1 = fps, 2 = smooth fps, 3 = server MS, 4 = Show FPS and Log to file )",
      type: "number",
   },
   {
      label: "cl_showloadout",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "Toggles display of current loadout.",
      type: "boolean",
   },
   {
      label: "cl_showmem",
      value: "0",
      flags: ["cl", "release"],
      detail: "Draw approximate memory use at top of screen",
      type: "number",
   },
   {
      label: "cl_showpos",
      value: "0",
      flags: ["cl", "cheat", "release"],
      detail: "Draw current position at top of screen",
      type: "number",
   },
   {
      label: "cl_silencer_mode",
      value: "0",
      flags: ["cl", "a", "user", "per_user"],
      detail: "0: cannot detach; 1: press secondary fire to detach",
      type: "number",
   },
   {
      label: "cl_sim_grenade_trajectory",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Draw trajectory of the deployed grenade if thrown from this position. Takes an optional parameter for how long the drawn trajectory will last.",
      type: "identifier",
   },
   {
      label: "cl_skel_constraints_enable",
      value: "true",
      flags: ["rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_skeleton_instance_smear_boneflags",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent.",
      type: "boolean",
   },
   {
      label: "cl_smoke_player_particle_effect",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_snd_new_visualize",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Displays soundevent name played at it's 3d position",
      type: "boolean",
   },
   {
      label: "cl_sniper_auto_rezoom",
      value: "true",
      flags: ["cl", "a", "user", "per_user"],
      detail: "Auto-rezoom snipers after a shot",
      type: "boolean",
   },
   {
      label: "cl_sniper_delay_unscope",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_sos_test_get_opvar",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_sos_test_set_opvar",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "cl_soundscape_flush",
      value: "cmd",
      flags: ["cl", "cheat", "server_can_execute"],
      detail: "Flushes the client side soundscapes",
      type: "identifier",
   },
   {
      label: "cl_spec_show_bindings",
      value: "true",
      flags: ["cl", "release", "clientcmd_can_execute"],
      detail: "Toggle the visibility of the spectator bindings.",
      type: "boolean",
   },
   {
      label: "cl_spec_stats",
      value: "true",
      flags: ["cl", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_spec_swapplayersides",
      value: "false",
      flags: ["cl", "release"],
      detail: "Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.",
      type: "boolean",
   },
   {
      label: "cl_spec_use_tournament_content_standards",
      value: "false",
      flags: ["cl", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_spewserializers",
      value: "cmd",
      flags: ["cheat"],
      detail: "Spew serializers",
      type: "identifier",
   },
   {
      label: "cl_teamid_overhead_colors_show",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "Show team overhead id in teammate color",
      type: "boolean",
   },
   {
      label: "cl_teamid_overhead_maxdist",
      value: "6000",
      flags: ["cl", "cheat", "per_user"],
      detail: "max distance at which the overhead team id icons will show",
      type: "number",
   },
   {
      label: "cl_teamid_overhead_maxdist_spec",
      value: "4000",
      flags: ["cl", "cheat", "per_user"],
      detail: "max distance at which the overhead team id icons will show when a spectator",
      type: "number",
   },
   {
      label: "cl_teamid_overhead_mode",
      value: "2",
      flags: ["cl", "a", "release"],
      detail: "Always show team id over teammates. 1 = pips; 2 = pips, name, and equipment",
      type: "number",
   },
   {
      label: "cl_teammate_colors_show",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "In competitive, 1 = show teammates as separate colors in the radar, scoreboard, etc., 2 = show colors and letters",
      type: "number",
   },
   {
      label: "cl_test_list_entities",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "test-list entities",
      type: "identifier",
   },
   {
      label: "cl_timeout",
      value: "30",
      flags: ["a"],
      detail: "After this many seconds without receiving a packet from the server, the client will disconnect itself",
      type: "number",
   },
   {
      label: "cl_track_aim_head_log_closest",
      value: "false",
      flags: ["cl", "release"],
      detail: "Log when closest distance to head was reached and what it was",
      type: "boolean",
   },
   {
      label: "cl_track_aim_head_threshold",
      value: "0",
      flags: ["cl", "release"],
      detail: "Notify render device when rendering a frame with enemy head within threshold distance",
      type: "number",
   },
   {
      label: "cl_track_render_eye_angles",
      value: "false",
      flags: ["cl", "release"],
      detail: "Spew render eye angles",
      type: "boolean",
   },
   {
      label: "cl_use_opens_buy_menu",
      value: "true",
      flags: ["cl", "a", "user", "per_user"],
      detail: "Pressing the +use key will open the buy menu if in a buy zone (just as if you pressed the 'buy' key).",
      type: "boolean",
   },
   {
      label: "cl_usercmd_maxcount",
      value: "4",
      flags: ["release"],
      detail: "max number of CUserCmds to send in one packet",
      type: "number",
   },
   {
      label: "cl_versus_intro",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_wallbang_heavy_threshold",
      value: "22",
      flags: ["cl", "cheat", "release"],
      detail: "The Threshold where to switch from Light to Heavy Wallbang tracer",
      type: "number",
   },
   {
      label: "cl_weapon_clip_thinwalls",
      value: "true",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_weapon_clip_thinwalls_debug",
      value: "false",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_weapon_clip_thinwalls_lock",
      value: "false",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cl_weapon_debug_show_accuracy",
      value: "0",
      flags: ["cl", "cheat", "release"],
      detail: "Draws a circle representing the effective range with every shot.",
      type: "number",
   },
   {
      label: "cl_weapon_debug_show_accuracy_duration",
      value: "10",
      flags: ["cl", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "cl_wpn_sway_scale",
      value: "1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "clear",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Clear console output.",
      type: "identifier",
   },
   {
      label: "clear_bombs",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "clearall",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Clear console output from all views.",
      type: "identifier",
   },
   {
      label: "cli_ent_attachments",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the interpolated attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cli_ent_hitbox",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cli_ent_pivot",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the interpolated pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cli_ent_skeleton",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "cli_ent_vcollide_wireframe",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "clientport",
      value: "0",
      flags: ["release"],
      detail:
         "If non-zero, client binds port to specific address.  Usually you should leave this blank to use a different random system-assigned port for each connection.",
      type: "number",
   },
   {
      label: "closecaption",
      value: "false",
      flags: ["cl", "a", "user"],
      detail: "Enable close captioning.",
      type: "boolean",
   },
   {
      label: "clutch_mode_toggle",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Toggle clutch mode convar",
      type: "identifier",
   },
   {
      label: "collect_entity_model_name",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Collect model names of the entities you're pointing at",
      type: "identifier",
   },
   {
      label: "commentary",
      value: "false",
      flags: ["sv", "a"],
      detail: "Desired commentary mode state.",
      type: "boolean",
   },
   {
      label: "commentary_finishnode",
      value: "cmd",
      flags: ["sv"],
      detail: "",
      type: "identifier",
   },
   {
      label: "con_enable",
      value: "false",
      flags: ["a"],
      detail: "Allows the console to be activated.",
      type: "boolean",
   },
   {
      label: "condump",
      value: "cmd",
      flags: ["release"],
      detail: "dump the text currently in the console to condumpXX.log",
      type: "identifier",
   },
   {
      label: "connect",
      value: "cmd",
      flags: ["release"],
      detail: "Connect to a remote server.",
      type: "identifier",
   },
   {
      label: "connect_hltv",
      value: "cmd",
      flags: ["release"],
      detail: "Connect to a remote HLTV server.",
      type: "identifier",
   },
   {
      label: "consoletool",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Open a VConsole subtool.",
      type: "identifier",
   },
   {
      label: "contributionscore_assist",
      value: "1",
      flags: ["sv", "release"],
      detail: "amount of contribution score added for an assist",
      type: "number",
   },
   {
      label: "contributionscore_bomb_defuse_major",
      value: "3",
      flags: ["sv", "release"],
      detail: "amount of contribution score for defusing a bomb while at least one enemy remains alive",
      type: "number",
   },
   {
      label: "contributionscore_bomb_defuse_minor",
      value: "1",
      flags: ["sv", "release"],
      detail: "amount of contribution score for defusing a bomb after eliminating enemy team",
      type: "number",
   },
   {
      label: "contributionscore_bomb_exploded",
      value: "1",
      flags: ["sv", "release"],
      detail: "amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round",
      type: "number",
   },
   {
      label: "contributionscore_bomb_planted",
      value: "2",
      flags: ["sv", "release"],
      detail: "amount of contribution score for planting a bomb",
      type: "number",
   },
   {
      label: "contributionscore_cash_bundle",
      value: "0",
      flags: ["sv", "release"],
      detail: "amount of contribution score for picking up a cash bundle",
      type: "number",
   },
   {
      label: "contributionscore_crate_break",
      value: "0",
      flags: ["sv", "release"],
      detail: "amount of contribution score for breaking an item crate",
      type: "number",
   },
   {
      label: "contributionscore_hostage_kill",
      value: "-2",
      flags: ["sv", "release"],
      detail: "amount of contribution score for killing a hostage, normally negative",
      type: "number",
   },
   {
      label: "contributionscore_hostage_rescue_major",
      value: "3",
      flags: ["sv", "release"],
      detail: "amount of contribution score added to rescuer per hostage rescued",
      type: "number",
   },
   {
      label: "contributionscore_hostage_rescue_minor",
      value: "1",
      flags: ["sv", "release"],
      detail: "amount of contribution score added to all alive CTs per hostage rescued",
      type: "number",
   },
   {
      label: "contributionscore_kill",
      value: "2",
      flags: ["sv", "release"],
      detail: "amount of contribution score added for a kill",
      type: "number",
   },
   {
      label: "contributionscore_kill_factor",
      value: "0",
      flags: ["sv", "release"],
      detail: "percentage of victim's contribution score to award to their killer as a bonus",
      type: "number",
   },
   {
      label: "contributionscore_objective_kill",
      value: "3",
      flags: ["sv", "release"],
      detail: "amount of contribution score added for an objective related kill",
      type: "number",
   },
   {
      label: "contributionscore_suicide",
      value: "-2",
      flags: ["sv", "release"],
      detail: "amount of contribution score for a suicide, normally negative",
      type: "number",
   },
   {
      label: "contributionscore_team_kill",
      value: "-2",
      flags: ["sv", "release"],
      detail: "amount of contribution score for a team kill, normally negative",
      type: "number",
   },
   {
      label: "cq_netgraph",
      value: "0",
      flags: ["cl", "user"],
      detail: "Display command queue statistics on the hud",
      type: "number",
   },
   {
      label: "crash",
      value: "cmd",
      flags: ["cheat"],
      detail:
         "Crash the client. Optional parameter -- type of crash:  0: read from NULL  1: write to NULL  2: force an Assert  3: infinite loop  4: stack buffer overrun  5: multiple asserts across multiple threads",
      type: "identifier",
   },
   {
      label: "crash_error",
      value: "cmd",
      flags: ["cheat"],
      detail: "Cause the engine to crash by Plat_FatalError on main thread (Debug!!)",
      type: "identifier",
   },
   {
      label: "crash_error_job",
      value: "cmd",
      flags: ["cheat"],
      detail: "Cause the engine to crash by Plat_FatalError on job thread (Debug!!)",
      type: "identifier",
   },
   {
      label: "crash_error_thread",
      value: "cmd",
      flags: ["cheat"],
      detail: "Cause the engine to crash by Plat_FatalError on non-main thread (Debug!!)",
      type: "identifier",
   },
   {
      label: "crash_job",
      value: "cmd",
      flags: ["cheat"],
      detail: "Cause the engine to crash in a job thread (Debug!!)",
      type: "identifier",
   },
   {
      label: "crash_thread",
      value: "cmd",
      flags: ["cheat"],
      detail: "Cause the engine to crash in a brand new non-main thread (Debug!!)",
      type: "identifier",
   },
   {
      label: "create_flashlight",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "CreatePredictionError",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Create a prediction error",
      type: "identifier",
   },
   {
      label: "crosshair",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cs_enable_player_physics_box",
      value: "false",
      flags: ["sv", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "cs_hostage_near_rescue_music_distance",
      value: "2000",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "cs_logtouchexpansion",
      value: "-2",
      flags: ["sv", "cheat"],
      detail: "cs_logtouchexpansion <ent index or -1 for all>. Log player touch expansion component.",
      type: "number",
   },
   {
      label: "cs_minimap_create_output_size",
      value: "512",
      flags: ["cl", "cheat"],
      detail: "Size of minimap texture generated with cs_minimap_create (512 default)",
      type: "number",
   },
   {
      label: "cs_quit_prompt",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Quit the game",
      type: "identifier",
   },
   {
      label: "cs_ShowStateTransitions",
      value: "-2",
      flags: ["sv", "cheat"],
      detail: "cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.",
      type: "number",
   },
   {
      label: "CS_WarnFriendlyDamageInterval",
      value: "3",
      flags: ["sv", "cheat"],
      detail: "Defines how frequently the server notifies clients that a player damaged a friend",
      type: "number",
   },
   {
      label: "csgo_download_match",
      value: "cmd",
      flags: ["cl", "norecord", "clientcmd_can_execute"],
      detail: "Downloads a match via serial code and starts playback",
      type: "identifier",
   },
   {
      label: "csgo_fatdemo_enable",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "csgo_fatdemo_output",
      value: "test.fatdem",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "csgo_map_preview_scale",
      value: "2.09",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "csgo_use_fullsort_for_opaque",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "fullsort the opaque pass when there wasn't a depth prepass",
      type: "boolean",
   },
   {
      label: "csgo_video_settings_restore_previous",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "csgo_video_settings_restore_previous",
      type: "identifier",
   },
   {
      label: "csm_bias_override_0",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_bias_override_1",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_bias_override_2",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_bias_override_3",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_cascade0_override_dist",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_cascade1_override_dist",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_cascade2_override_dist",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_cascade3_override_dist",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_cascade_viewdir_shadow_bias_scale",
      value: "2",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_res_override_0",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_res_override_1",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_res_override_2",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_res_override_3",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_slope_scale_db_override",
      value: "3",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_split_log_scalar",
      value: "0.85",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_viewdir_shadow_bias",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_viewmodel_farz",
      value: "30",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_viewmodel_max_shadow_dist",
      value: "21",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "csm_viewmodel_max_visible_dist",
      value: "1000",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "custom_bot_difficulty",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Bot difficulty for offline play.",
      type: "number",
   },
   {
      label: "cv_bot_ai_bt_debug_target",
      value: "-1",
      flags: ["sv", "rep", "cheat"],
      detail: "Draw the behavior tree of the given bot.",
      type: "number",
   },
   {
      label: "cv_bot_ai_bt_hiding_spot_show",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "Draw hiding spots.",
      type: "boolean",
   },
   {
      label: "cv_bot_ai_bt_moveto_show_next_hiding_spot",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "Draw the hiding spot the bot will check next.",
      type: "boolean",
   },
   {
      label: "cvarlist",
      value: "cmd",
      flags: ["release"],
      detail: "Show the list of convars/concommands.",
      type: "identifier",
   },
   {
      label: "cyclevar",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Cycle through specified convar values.",
      type: "identifier",
   },
   {
      label: "debug_entity_outline_highlight",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "debug_purchase_defidx",
      value: "cmd",
      flags: ["cl", "release", "clientcmd_can_execute"],
      detail: "Purchase an item by defindex",
      type: "identifier",
   },
   {
      label: "debug_takedamage_summaries",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "debug_visibility_monitor",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "debugoverlay_cycle_domain",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggles visibility of the debug overlay system.",
      type: "identifier",
   },
   {
      label: "debugoverlay_cycle_state",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggles visibility of the debug overlay system.",
      type: "identifier",
   },
   {
      label: "debugoverlay_draw_current",
      value: "false",
      flags: ["cheat"],
      detail: "Tell debugoverlay to not draw any entries that have aged out by the time of rendering. Useful if sim runs more often than rendering.",
      type: "boolean",
   },
   {
      label: "debugoverlay_force_respect_ttl",
      value: "false",
      flags: ["cheat"],
      detail: "Force respect TTL even when clearing scopes",
      type: "boolean",
   },
   {
      label: "debugoverlay_hide_imgui",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Hides the overlay.",
      type: "identifier",
   },
   {
      label: "debugoverlay_ignore_source",
      value: "false",
      flags: ["cheat"],
      detail: "Draw everything normal and ignore the source for rendering",
      type: "boolean",
   },
   {
      label: "debugoverlay_show_text_outline",
      value: "false",
      flags: ["cheat"],
      detail: "Toggle display of box around text",
      type: "boolean",
   },
   {
      label: "debugoverlay_toggle",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggles visibility of the debug overlay system.",
      type: "identifier",
   },
   {
      label: "default_fov",
      value: "90",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "demo_flush",
      value: "false",
      flags: ["a"],
      detail: "Flush writing the demo file every network update",
      type: "boolean",
   },
   {
      label: "demo_goto",
      value: "cmd",
      flags: ["release"],
      detail: "Skips to location in demo.",
      type: "identifier",
   },
   {
      label: "demo_gotomark",
      value: "cmd",
      flags: ["release"],
      detail: "Skips the current demo playback to the marked tick",
      type: "identifier",
   },
   {
      label: "demo_gototick",
      value: "cmd",
      flags: ["release"],
      detail: "Skips to a tick in demo.",
      type: "identifier",
   },
   {
      label: "demo_info",
      value: "cmd",
      flags: ["release"],
      detail: "Print information about currently playing demo.",
      type: "identifier",
   },
   {
      label: "demo_marktick",
      value: "cmd",
      flags: ["release"],
      detail: "Marks the current demo playback tick for later use",
      type: "identifier",
   },
   {
      label: "demo_pause",
      value: "cmd",
      flags: ["release"],
      detail: "Pauses demo playback.",
      type: "identifier",
   },
   {
      label: "demo_quitafterplayback",
      value: "false",
      flags: ["release"],
      detail: "Quits game after demo playback.",
      type: "boolean",
   },
   {
      label: "demo_recordcommands",
      value: "true",
      flags: ["cheat"],
      detail: "Record commands typed at console into .dem files.",
      type: "boolean",
   },
   {
      label: "demo_resume",
      value: "cmd",
      flags: ["release"],
      detail: "Resumes demo playback.",
      type: "identifier",
   },
   {
      label: "demo_timescale",
      value: "cmd",
      flags: ["release"],
      detail: "Sets demo replay speed.",
      type: "identifier",
   },
   {
      label: "demo_togglepause",
      value: "cmd",
      flags: ["release"],
      detail: "Toggles demo playback.",
      type: "identifier",
   },
   {
      label: "demolist",
      value: "cmd",
      flags: ["release"],
      detail: "Print demo sequence list.",
      type: "identifier",
   },
   {
      label: "demoui",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Show/hide demo playback ui",
      type: "identifier",
   },
   {
      label: "dev_add_onground_on_spawn",
      value: "false",
      flags: ["sv", "release"],
      detail:
         "Should we mess with the ground flag when we spawn? (I don't think we should). If we don't hit the assert in CCSPlayer_MovementServices::ProcessMovement, we should remove this by Dec 2022.",
      type: "boolean",
   },
   {
      label: "developer",
      value: "0",
      flags: ["release"],
      detail: "Set developer message level.",
      type: "number",
   },
   {
      label: "differences",
      value: "cmd",
      flags: ["release"],
      detail: "Show all convars which are not at their default values (optional restricted to specific flags).",
      type: "identifier",
   },
   {
      label: "disable_dynamic_prop_loading",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "If non-zero when a map loads, dynamic props won't be loaded",
      type: "boolean",
   },
   {
      label: "disconnect",
      value: "cmd",
      flags: ["release"],
      detail: "Disconnect from server",
      type: "identifier",
   },
   {
      label: "display_game_events",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "dlight_debug",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Creates a dlight in front of the player",
      type: "identifier",
   },
   {
      label: "dm_togglerandomweapons",
      value: "cmd",
      flags: ["cl", "server_can_execute", "clientcmd_can_execute"],
      detail: "Turns random weapons in deathmatch on/off",
      type: "identifier",
   },
   {
      label: "dota_enable_spatial_audio",
      value: "false",
      flags: ["release"],
      detail: "Flag to enable spatial audio in Dota 2.",
      type: "boolean",
   },
   {
      label: "dota_spatial_audio_mix",
      value: "1",
      flags: ["release"],
      detail: "Mix value to blend spatial and non-spatial audio in Dota 2.",
      type: "number",
   },
   {
      label: "drawcross",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Draws a cross at the given location  Arguments: x y z",
      type: "identifier",
   },
   {
      label: "drawline",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Draws line between two 3D Points.  Green if no collision  Red is collides with something  Arguments: x1 y1 z1 x2 y2 z2",
      type: "identifier",
   },
   {
      label: "dsp_dist_max",
      value: "1440",
      flags: ["cheat", "demo"],
      detail: "",
      type: "number",
   },
   {
      label: "dsp_dist_min",
      value: "0",
      flags: ["cheat", "demo"],
      detail: "",
      type: "number",
   },
   {
      label: "dsp_off",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "dsp_volume",
      value: "0.8",
      flags: ["a", "demo"],
      detail: "",
      type: "number",
   },
   {
      label: "dump_entity_report",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "List all client-side entities in the scene",
      type: "identifier",
   },
   {
      label: "dump_panorama_css_properties",
      value: "cmd",
      flags: ["release"],
      detail: "Prints out all valid panorama CSS properties and their documentation",
      type: "identifier",
   },
   {
      label: "dump_panorama_events",
      value: "cmd",
      flags: ["release"],
      detail: "print panorama event types and their documentation",
      type: "identifier",
   },
   {
      label: "dumpparticlelist",
      value: "cmd",
      flags: ["release"],
      detail: "Print out information on existing particle systems",
      type: "identifier",
   },
   {
      label: "echo",
      value: "cmd",
      flags: ["server_can_execute"],
      detail: "Echo text to console.",
      type: "keyword",
   },
   {
      label: "echoln",
      value: "cmd",
      flags: ["release"],
      detail: "Echo the command arguments on the console",
      type: "identifier",
   },
   {
      label: "enable_boneflex",
      value: "true",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "endmatch_votenextmap",
      value: "cmd",
      flags: ["cl", "clientcmd_can_execute"],
      detail: "Votes for the next map at the end of the match",
      type: "identifier",
   },
   {
      label: "endround",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "End the current round.",
      type: "identifier",
   },
   {
      label: "engine_low_latency_sleep_after_client_tick",
      value: "false",
      flags: ["release"],
      detail: "When r_low_latency is enabled, this moves the low latency sleep on tick frames to happen after client simulation.",
      type: "boolean",
   },
   {
      label: "engine_no_focus_sleep",
      value: "20",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "english",
      value: "true",
      flags: ["cl", "user"],
      detail: "If set to 1, running the english language set of assets.",
      type: "boolean",
   },
   {
      label: "ent_absbox",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_actornames",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
      type: "identifier",
   },
   {
      label: "ent_actornames_font",
      value: "Consolas",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "ent_actornames font name",
      type: "identifier",
   },
   {
      label: "ent_actornames_fontsize",
      value: "24",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "ent_actornames font size",
      type: "number",
   },
   {
      label: "ent_animgraph_debug",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays debug draws about the given entity(ies) animgraph  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_animgraph_record",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Toggles recording of animgraph replay of the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_animgraph_setvar",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Sets a variable on the animgraph of the given entity(s)  Arguments:   <varname>=<value> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      type: "identifier",
   },
   {
      label: "ent_attachments",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_autoaim",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the entity's autoaim radius.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_bbox",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_call",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
      type: "identifier",
   },
   {
      label: "ent_clear_debug_overlays",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Clears all debug overlays",
      type: "identifier",
   },
   {
      label: "ent_create",
      value: "cmd",
      flags: ["sv", "cheat", "vconsole_fuzzy"],
      detail: "Creates an entity of the given designer or subclass name where the player is looking.",
      type: "identifier",
   },
   {
      label: "ent_find",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Find and list all entities with classnames or targetnames that contain the specified substrings. Format: find_ent <substring>",
      type: "identifier",
   },
   {
      label: "ent_find_index",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Display data for entity matching specified index. Format: find_ent_index <index>",
      type: "identifier",
   },
   {
      label: "ent_fire",
      value: "cmd",
      flags: ["sv", "cheat", "vconsole_fuzzy"],
      detail: "Usage:    ent_fire <target> [action] [value] [delay]",
      type: "identifier",
   },
   {
      label: "ent_fire_output",
      value: "cmd",
      flags: ["sv", "cheat", "vconsole_fuzzy"],
      detail: "Usage:    ent_fire_output <target> [output name] [value] [delay]",
      type: "identifier",
   },
   {
      label: "ent_grab",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "grabs the object in front of the player. Options: -loose -multiple -toggle",
      type: "identifier",
   },
   {
      label: "ent_hierarchy",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Prints the entity hierarchy tree rooted at the specified ent(s)",
      type: "identifier",
   },
   {
      label: "ent_hitbox",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the hitboxes for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_info",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Usage:    ent_info <class name>",
      type: "identifier",
   },
   {
      label: "ent_joints",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the joint names + axes an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_kill",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Kills the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_messages",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_messages_draw",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Visualizes all entity input/output activity.",
      type: "boolean",
   },
   {
      label: "ent_name",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Displays the entity name",
      type: "identifier",
   },
   {
      label: "ent_orient",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.  Format: ent_orient <entity name> <optional: allangles>",
      type: "identifier",
   },
   {
      label: "ent_picker",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.  Arguments: full - enables all debug information",
      type: "identifier",
   },
   {
      label: "ent_pivot",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_pivot_size",
      value: "20",
      flags: ["sv", "a", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "ent_rbox",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail:
         "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_remove",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Removes the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_remove_all",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Removes all entities of the specified type  Arguments:    {entity_name} / {class_name}",
      type: "identifier",
   },
   {
      label: "ent_rotate",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Rotates an entity by a specified # of degrees",
      type: "identifier",
   },
   {
      label: "ent_scale",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Scales entities. Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      type: "identifier",
   },
   {
      label: "ent_scenehierarchy",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
      type: "identifier",
   },
   {
      label: "ent_script_dump",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Dumps the names and values of this entity's script scope to the console  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_select",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Select or deselects the given entities(s) for later manipulation  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_setang",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Set entity angles",
      type: "identifier",
   },
   {
      label: "ent_setname",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Sets the targetname of the given entity(s)  Arguments:    <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      type: "identifier",
   },
   {
      label: "ent_setpos",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Move entity to position",
      type: "identifier",
   },
   {
      label: "ent_show_contexts",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Show entity contexts in ent_text display",
      type: "boolean",
   },
   {
      label: "ent_show_damage",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
      type: "identifier",
   },
   {
      label: "ent_show_response_criteria",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Print, to the console, an entity's current criteria set used to select responses.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_showonlyattachment",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "ent_skeleton",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_skeleton_duration",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Duration of ent_skeleton display",
      type: "number",
   },
   {
      label: "ent_teleport",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Teleport the specified entity to where the player is looking.  Format: ent_teleport <entity name>",
      type: "identifier",
   },
   {
      label: "ent_text",
      value: "cmd",
      flags: ["sv", "cheat", "vconsole_fuzzy"],
      detail:
         "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_text256",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_text_clear",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_text_filter",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Set which ent_text filters you want:",
      type: "identifier",
   },
   {
      label: "ent_text_flags_active",
      value: "-1",
      flags: ["sv", "a", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "ent_text_no_name_really_i_mean_it",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "ent_text_radius",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)  2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      type: "identifier",
   },
   {
      label: "ent_text_sticky_add",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_text_sticky_clear",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_text_sticky_dump",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_text_sticky_remove",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_ungrab",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "un-grabs all objects",
      type: "identifier",
   },
   {
      label: "ent_vcollide_wireframe",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "ent_viewoffset",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the eye position for the given entity(ies) in red.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "entity_log_load_unserialize",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Output unserialization of entities on map load. 0 - off, 1 - client/server, 2 - server, 3 - client",
      type: "number",
   },
   {
      label: "escape",
      value: "cmd",
      flags: ["release", "clientcmd_can_execute"],
      detail: "Escape key pressed.",
      type: "identifier",
   },
   {
      label: "exec",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Execute a cfg file",
      type: "identifier",
   },
   {
      label: "exec_async",
      value: "cmd",
      flags: ["cheat", "norecord"],
      detail: "Execute a cfg file over time",
      type: "identifier",
   },
   {
      label: "execifexists",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Execute a cfg file if file exists",
      type: "identifier",
   },
   {
      label: "execute_command_every_frame",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "explode",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Kills the player with explosive damage",
      type: "identifier",
   },
   {
      label: "explodevector",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>",
      type: "identifier",
   },
   {
      label: "fadein",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.",
      type: "identifier",
   },
   {
      label: "fadeout",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.",
      type: "identifier",
   },
   {
      label: "ff_damage_bullet_penetration",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If friendly fire is off, this will scale the penetration power and damage a bullet does when penetrating another friendly player",
      type: "number",
   },
   {
      label: "ff_damage_decoy_explosion",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Enables or disables team damage from decoy detonation",
      type: "boolean",
   },
   {
      label: "ff_damage_reduction_bullets",
      value: "0.33",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How much to reduce damage done to teammates when shot.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      type: "number",
   },
   {
      label: "ff_damage_reduction_grenade",
      value: "0.85",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "How much to reduce damage done to teammates by a thrown grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      type: "number",
   },
   {
      label: "ff_damage_reduction_grenade_self",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "How much to damage a player does to himself with his own grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      type: "number",
   },
   {
      label: "ff_damage_reduction_other",
      value: "0.4",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "How much to reduce damage done to teammates by things other than bullets and grenades.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)",
      type: "number",
   },
   {
      label: "find",
      value: "cmd",
      flags: ["release"],
      detail: "Find concommands with the specified string in their name/help text.",
      type: "identifier",
   },
   {
      label: "findflags",
      value: "cmd",
      flags: ["release"],
      detail: "Find concommands by flags.",
      type: "identifier",
   },
   {
      label: "firetarget",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "firstperson",
      value: "cmd",
      flags: ["cl", "release", "execute_per_tick"],
      detail: "Switch to firstperson camera.",
      type: "identifier",
   },
   {
      label: "fish_debug",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Show debug info for fish",
      type: "boolean",
   },
   {
      label: "fish_dormant",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "Turns off interactive fish behavior. Fish become immobile and unresponsive.",
      type: "boolean",
   },
   {
      label: "fog_color",
      value: "-1.000000 -1.000000 -1.000000",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_colorskybox",
      value: "-1.000000 -1.000000 -1.000000",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_enable",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Enable fog",
      type: "boolean",
   },
   {
      label: "fog_enableskybox",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "fog_end",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_endskybox",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_hdrcolorscale",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_hdrcolorscaleskybox",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_maxdensity",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_maxdensityskybox",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_override",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Overrides the map's fog settings (-1 populates fog_ vars with map's values)",
      type: "number",
   },
   {
      label: "fog_override_color",
      value: "cmd",
      flags: ["cheat"],
      detail: "Sets the fog color override",
      type: "identifier",
   },
   {
      label: "fog_override_enable",
      value: "false",
      flags: ["cheat"],
      detail: "Use fog_override convars instead of world fog data",
      type: "boolean",
   },
   {
      label: "fog_override_end",
      value: "3500",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_override_exponent",
      value: "2",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_override_max_density",
      value: "0.4",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_override_start",
      value: "1000",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_start",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fog_startskybox",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "fov_cs_debug",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Sets the view fov if cheats are on.",
      type: "number",
   },
   {
      label: "fov_desired",
      value: "75",
      flags: ["cl", "a", "user"],
      detail: "Sets the base field-of-view.",
      type: "number",
   },
   {
      label: "fps_max",
      value: "400",
      flags: ["a", "release"],
      detail: "Frame rate limiter.  0=no limit.  Does not apply to dedicated server.",
      type: "number",
   },
   {
      label: "fps_max_tools",
      value: "120",
      flags: ["a"],
      detail:
         "Additional frame rate limit while in tools mode and a window other than the game window has focus. Note that fps_max still applies, this only allows the maximum frame rate for tools mode to be lower. 0=no tools specific limit.",
      type: "number",
   },
   {
      label: "fps_max_ui",
      value: "120",
      flags: ["a"],
      detail: "Frame rate limiter while the game UI is displayed.  0=no limit.  Does not apply to dedicated server.",
      type: "number",
   },
   {
      label: "fs_report_sync_opens",
      value: "0",
      flags: ["release"],
      detail: "0:Off, 1:Always, 2:Not during load",
      type: "number",
   },
   {
      label: "fs_spew_readfieldlist",
      value: "cmd",
      flags: ["cheat"],
      detail: "index <threshold bytes>: spew changes to ent index, optionally only spewing if update is > than threshold bytes",
      type: "identifier",
   },
   {
      label: "func_break_max_pieces",
      value: "15",
      flags: ["sv", "a", "rep"],
      detail: "",
      type: "number",
   },
   {
      label: "g_debug_angularsensor",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "g_debug_constraint_sounds",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Enable debug printing about constraint sounds.",
      type: "boolean",
   },
   {
      label: "g_debug_ragdoll_visualize",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "game_alias",
      value: "cmd",
      flags: ["release"],
      detail: "Set the configuration of game type and mode based on game alias like 'deathmatch'.",
      type: "identifier",
   },
   {
      label: "game_mode",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The current game mode (based on game type). See GameModes.txt.",
      type: "number",
   },
   {
      label: "game_type",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The current game type. See GameModes.txt.",
      type: "number",
   },
   {
      label: "gameinstructor_dump_open_lessons",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Gives a list of all currently open lessons.",
      type: "identifier",
   },
   {
      label: "gameinstructor_dump_run_lesson_counts",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Gives a list of lessons that been completed or shown",
      type: "identifier",
   },
   {
      label: "gameinstructor_enable",
      value: "false",
      flags: ["cl", "release"],
      detail: "Display in game lessons that teach new players.",
      type: "boolean",
   },
   {
      label: "gameinstructor_find_errors",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Set to 1 and the game instructor will run EVERY scripted command to uncover errors.",
      type: "boolean",
   },
   {
      label: "gameinstructor_verbose",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions.",
      type: "number",
   },
   {
      label: "gameinstructor_verbose_lesson",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Display more verbose information for lessons have this name.",
      type: "number",
   },
   {
      label: "gameui_hide",
      value: "cmd",
      flags: ["release"],
      detail: "Hides the game UI",
      type: "identifier",
   },
   {
      label: "getpos",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "dump position and angles to the console",
      type: "identifier",
   },
   {
      label: "getpos_exact",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "dump origin and angles to the console",
      type: "identifier",
   },
   {
      label: "give",
      value: "cmd",
      flags: ["sv", "vconsole_fuzzy"],
      detail: "Give item to player.  Arguments: <item_name>",
      type: "identifier",
   },
   {
      label: "givecurrentammo",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Give a supply of ammo for current weapon..",
      type: "identifier",
   },
   {
      label: "gl_clear_gray",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Clear the back buffer to gray every frame.",
      type: "boolean",
   },
   {
      label: "gl_clear_randomcolor",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Clear the back buffer to random colors every frame. Helps spot open seams in geometry.",
      type: "boolean",
   },
   {
      label: "global_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).",
      type: "identifier",
   },
   {
      label: "glow_outline_width",
      value: "6",
      flags: ["cl", "cheat"],
      detail: "Width of glow outline effect in screen space.",
      type: "number",
   },
   {
      label: "glow_use_tolerance",
      value: "0.85",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "god",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggle by default, or 0 to disable and 1 to enable. Player becomes invulnerable.",
      type: "identifier",
   },
   {
      label: "gotv_theater_container",
      value: "0",
      flags: ["cl", "release"],
      detail: "Enables GOTV theater mode for the specified container, setting it to 'live' will play top live matches",
      type: "number",
   },
   {
      label: "grep",
      value: "cmd",
      flags: ["release"],
      detail: "grep line for pattern, print out matching lines only",
      type: "identifier",
   },
   {
      label: "healthshot_allow_use_at_full",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "healthshot_health",
      value: "50",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "healthshot_healthboost_damage_multiplier",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "healthshot_healthboost_speed_multiplier",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "healthshot_healthboost_time",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "help",
      value: "cmd",
      flags: ["release"],
      detail: "Find help about a convar/concommand.",
      type: "identifier",
   },
   {
      label: "hideconsole",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Hide the console.",
      type: "identifier",
   },
   {
      label: "hidehud",
      value: "0",
      flags: ["cl", "cheat"],
      detail:
         "bitmask: 1=weapon selection, 2=flashlight, 4=all, 8=health, 16=player dead, 32=needssuit, 64=misc, 128=chat, 256=crosshair, 512=vehicle crosshair, 1024=in vehicle",
      type: "number",
   },
   {
      label: "host_framerate",
      value: "0",
      flags: ["release"],
      detail: "Set to lock per-frame time elapse.",
      type: "number",
   },
   {
      label: "host_timescale",
      value: "1",
      flags: ["rep", "cheat"],
      detail: "Prescale the clock by this amount.",
      type: "number",
   },
   {
      label: "host_timescale_dec",
      value: "cmd",
      flags: ["cheat"],
      detail: "Decrement the timescale by one step",
      type: "identifier",
   },
   {
      label: "host_timescale_inc",
      value: "cmd",
      flags: ["cheat"],
      detail: "Increment the timescale by one step",
      type: "identifier",
   },
   {
      label: "host_writeconfig",
      value: "cmd",
      flags: ["release"],
      detail: "Saves out the user config values.",
      type: "identifier",
   },
   {
      label: "hostage_debug",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Show hostage AI debug information",
      type: "number",
   },
   {
      label: "hostage_is_silent",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "When set, the hostage won't play any code driven response rules lines",
      type: "boolean",
   },
   {
      label: "hostfile",
      value: "host.txt",
      flags: ["sv", "release"],
      detail: "The HOST file to load.",
      type: "identifier",
   },
   {
      label: "hostip",
      value: "0",
      flags: ["release"],
      detail: "Host game server ip",
      type: "number",
   },
   {
      label: "hostname",
      value: "",
      flags: ["release"],
      detail: "Hostname for server.",
      type: "number",
   },
   {
      label: "hostname_in_client_status",
      value: "false",
      flags: ["release"],
      detail: "Show server hostname in client status.",
      type: "boolean",
   },
   {
      label: "hostport",
      value: "27015",
      flags: ["release"],
      detail: "Host game server port",
      type: "number",
   },
   {
      label: "hud_fastswitch",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "hud_scaling",
      value: "1",
      flags: ["cl", "a"],
      detail: "Scales hud elements",
      type: "number",
   },
   {
      label: "hud_showtargetid",
      value: "true",
      flags: ["cl", "a", "per_user"],
      detail: "Enables display of target names",
      type: "boolean",
   },
   {
      label: "hurtme",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Hurts the player.  Arguments: <health to lose>",
      type: "identifier",
   },
   {
      label: "ik_debug_chain_to_filter_by",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "ik_enable",
      value: "true",
      flags: ["cheat"],
      detail: "Enable IK.",
      type: "boolean",
   },
   {
      label: "ik_hinge_debug_bone_index",
      value: "-1",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "imgui_set_selection",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Sets ImGui selection",
      type: "identifier",
   },
   {
      label: "imgui_set_status_text",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Sets ImGui header status text",
      type: "identifier",
   },
   {
      label: "impulse",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Triggers impulse command",
      type: "identifier",
   },
   {
      label: "incrementvar",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Increment specified convar value.",
      type: "identifier",
   },
   {
      label: "inferno_child_spawn_interval_multiplier",
      value: "0.1",
      flags: ["sv", "cheat"],
      detail: "Amount spawn interval increases for each child",
      type: "number",
   },
   {
      label: "inferno_child_spawn_max_depth",
      value: "4",
      flags: ["sv", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "inferno_damage",
      value: "40",
      flags: ["sv", "cheat"],
      detail: "Damage per second",
      type: "number",
   },
   {
      label: "inferno_debug",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "inferno_dlight_spacing",
      value: "7200",
      flags: ["cl", "cheat"],
      detail: "Inferno dlights are at least this far apart",
      type: "number",
   },
   {
      label: "inferno_flame_lifetime",
      value: "7",
      flags: ["sv", "rep", "release"],
      detail: "Average lifetime of each flame in seconds",
      type: "number",
   },
   {
      label: "inferno_flame_spacing",
      value: "42",
      flags: ["sv", "cheat"],
      detail: "Minimum distance between separate flame spawns",
      type: "number",
   },
   {
      label: "inferno_forward_reduction_factor",
      value: "0.9",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "inferno_friendly_fire_duration",
      value: "6",
      flags: ["sv", "cheat"],
      detail: "For this long, FF is credited back to the thrower.",
      type: "number",
   },
   {
      label: "inferno_initial_spawn_interval",
      value: "0.02",
      flags: ["sv", "cheat"],
      detail: "Time between spawning flames for first fire",
      type: "number",
   },
   {
      label: "inferno_max_child_spawn_interval",
      value: "0.5",
      flags: ["sv", "cheat"],
      detail: "Largest time interval for child flame spawning",
      type: "number",
   },
   {
      label: "inferno_max_flames",
      value: "16",
      flags: ["sv", "rep", "release"],
      detail: "Maximum number of flames that can be created",
      type: "number",
   },
   {
      label: "inferno_max_range",
      value: "150",
      flags: ["sv", "rep", "release"],
      detail: "Maximum distance flames can spread from their initial ignition point",
      type: "number",
   },
   {
      label: "inferno_per_flame_spawn_duration",
      value: "3",
      flags: ["sv", "cheat"],
      detail: "Duration each new flame will attempt to spawn new flames",
      type: "number",
   },
   {
      label: "inferno_scorch_decals",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "inferno_smoke_volume_density",
      value: "0.1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "inferno_spawn_angle",
      value: "45",
      flags: ["sv", "cheat"],
      detail: "Angular change from parent",
      type: "number",
   },
   {
      label: "inferno_surface_offset",
      value: "20",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "inferno_velocity_decay_factor",
      value: "0.2",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "inferno_velocity_factor",
      value: "0.003",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "inferno_velocity_normal_factor",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "input_button_code_is_scan_code",
      value: "true",
      flags: ["a"],
      detail: "Bind keys based on keyboard position instead of key name",
      type: "boolean",
   },
   {
      label: "input_filter_relative_analog_inputs",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "input_forceuser",
      value: "-1",
      flags: ["cheat"],
      detail: "Force user input to this split screen player.",
      type: "number",
   },
   {
      label: "install_dlc_workshoptools_cvar",
      value: "-1",
      flags: ["cl", "release"],
      detail: "DLC Install Status",
      type: "number",
   },
   {
      label: "invnext",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "invnextselect",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "invprev",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "invprevselect",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ip",
      value: "0",
      flags: ["release"],
      detail: "Overrides IP for multihomed hosts",
      type: "number",
   },
   {
      label: "iv_debugbone",
      value: "0",
      flags: ["release"],
      detail: "Debug bone name for interpolation spew of CAnimationState.",
      type: "number",
   },
   {
      label: "joy_advanced",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_advaxisr",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_advaxisu",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_advaxisv",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_advaxisx",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_advaxisy",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_advaxisz",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_axisbutton_threshold",
      value: "0.3",
      flags: ["a"],
      detail: "Analog axis range before a button press is registered.",
      type: "number",
   },
   {
      label: "joy_axisr_deadzone",
      value: "0.15",
      flags: ["a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_axisr_relative",
      value: "false",
      flags: ["a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_axisu_deadzone",
      value: "0.15",
      flags: ["a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_axisu_relative",
      value: "false",
      flags: ["a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_axisv_deadzone",
      value: "0.15",
      flags: ["a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_axisv_relative",
      value: "false",
      flags: ["a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_axisx_deadzone",
      value: "0.15",
      flags: ["a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_axisx_relative",
      value: "false",
      flags: ["a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_axisy_deadzone",
      value: "0.15",
      flags: ["a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_axisy_relative",
      value: "false",
      flags: ["a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_axisz_deadzone",
      value: "0.15",
      flags: ["a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_axisz_relative",
      value: "false",
      flags: ["a", "per_user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_circle_correct_mode",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_circle_correct_mode_vehicle",
      value: "2",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_display_input",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "joy_forward_sensitivity",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_movement_stick",
      value: "false",
      flags: ["cl", "a", "per_user"],
      detail: "Which stick controls movement (0 is left stick)",
      type: "boolean",
   },
   {
      label: "joy_name",
      value: "joystick",
      flags: ["cl", "a"],
      detail: "",
      type: "identifier",
   },
   {
      label: "joy_pitch_sensitivity",
      value: "3",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_pitchsensitivity",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_response_look",
      value: "0",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_response_move",
      value: "9",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_side_sensitivity",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_sidesensitivity",
      value: "1",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_wingmanwarrior_centerhack",
      value: "false",
      flags: ["a"],
      detail: "Wingman warrior centering hack.",
      type: "boolean",
   },
   {
      label: "joy_wingmanwarrior_turnhack",
      value: "false",
      flags: ["a"],
      detail: "Wingman warrior hack related to turn axes.",
      type: "boolean",
   },
   {
      label: "joy_yaw_sensitivity",
      value: "3",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joy_yawsensitivity",
      value: "-1",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "joystick",
      value: "false",
      flags: ["cl", "a"],
      detail: "True if the joystick is enabled, false otherwise.",
      type: "boolean",
   },
   {
      label: "key_findbinding",
      value: "cmd",
      flags: ["release"],
      detail: "Find key bound to specified command string.",
      type: "identifier",
   },
   {
      label: "key_listboundkeys",
      value: "cmd",
      flags: ["release"],
      detail: "List bound keys with bindings.",
      type: "identifier",
   },
   {
      label: "kick",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Kick a player by name.",
      type: "identifier",
   },
   {
      label: "kickid",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Kick a player by userid or uniqueid, with a message.",
      type: "identifier",
   },
   {
      label: "kickid_hltv",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Kick a player by userid or uniqueid, with a message.",
      type: "identifier",
   },
   {
      label: "kill",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Kills the player with generic damage",
      type: "identifier",
   },
   {
      label: "killvector",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>",
      type: "identifier",
   },
   {
      label: "labelled_debug_helper_arc_segments",
      value: "20",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "labelled_debug_helper_enabled",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "labelled_debug_helper_scale",
      value: "1",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "labelled_debug_helper_show_position",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "labelled_debug_helper_show_text",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "labelled_debug_helper_skeleton_show_bone_names",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "lastinv",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "launch_warmup_map",
      value: "cmd",
      flags: ["cl", "norecord", "clientcmd_can_execute"],
      detail: "Launches warmup map",
      type: "identifier",
   },
   {
      label: "lb_barnlight_shadowmap_scale",
      value: "1",
      flags: ["release"],
      detail: "Scale for computed barnlight shadowmap size",
      type: "number",
   },
   {
      label: "lb_shadow_map_culling",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "lb_show_light_fog_clipmap_cb_cost",
      value: "false",
      flags: ["cheat"],
      detail: "Show cost of lights in fog clipmap constant buffer. yellow = 1 cost, red = 6 cost",
      type: "boolean",
   },
   {
      label: "lightquery_debug_direct_lighting",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "lightquery_debug_indirect_lighting",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "listdemo",
      value: "cmd",
      flags: ["release"],
      detail: "List demo file contents.",
      type: "identifier",
   },
   {
      label: "listissues",
      value: "cmd",
      flags: ["sv"],
      detail: "List all the issues that can be voted on.",
      type: "identifier",
   },
   {
      label: "lobby_default_privacy_bits2",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "Lobby default permissions (0: private, 1: public)",
      type: "number",
   },
   {
      label: "lockMoveControllerRet",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "log",
      value: "cmd",
      flags: ["release"],
      detail: "off >.",
      type: "identifier",
   },
   {
      label: "log_color",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Set the color of a logging channel.",
      type: "identifier",
   },
   {
      label: "log_dumpchannels",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Dumps information about all logging channels.",
      type: "identifier",
   },
   {
      label: "log_flags",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Set the flags on a logging channel.",
      type: "identifier",
   },
   {
      label: "log_level",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Set the spew level of a logging channel.",
      type: "identifier",
   },
   {
      label: "log_verbosity",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Set the verbosity of a logging channel.",
      type: "identifier",
   },
   {
      label: "logaddress_add_http",
      value: "cmd",
      flags: ["sv", "nolog", "release"],
      detail: "Set URI of a listener to receive logs via http post. Wrap URI in double quotes.",
      type: "identifier",
   },
   {
      label: "logaddress_add_http_delayed",
      value: "cmd",
      flags: ["sv", "nolog", "release"],
      detail: "Set a delay and URI of a listener to receive logs via http post. Wrap URI in double quotes.",
      type: "identifier",
   },
   {
      label: "logaddress_delall_http",
      value: "cmd",
      flags: ["sv", "nolog", "release"],
      detail: "Remove all http listeners from the dispatch list.",
      type: "identifier",
   },
   {
      label: "logaddress_list_http",
      value: "cmd",
      flags: ["sv", "nolog", "release"],
      detail: "List all URIs currently receiving server logs",
      type: "identifier",
   },
   {
      label: "logaddress_token_secret",
      value: "0",
      flags: ["sv", "release"],
      detail: "Set a secret string that will be hashed when using logaddress with explicit token hash.",
      type: "number",
   },
   {
      label: "logic_npc_counter_debug",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "+lookatweapon",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-lookatweapon",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "m_pitch",
      value: "0.022",
      flags: ["cl", "a", "per_user"],
      detail: "Mouse pitch factor.",
      type: "number",
   },
   {
      label: "m_yaw",
      value: "0.022",
      flags: ["cl", "a", "per_user"],
      detail: "Mouse yaw factor.",
      type: "number",
   },
   {
      label: "map",
      value: "cmd",
      flags: ["release", "vconsole_fuzzy", "vconsole_set_focus"],
      detail: "map <mapname> :Load a new map.",
      type: "identifier",
   },
   {
      label: "map_enable_background_maps",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Enables/disables portrait background maps",
      type: "identifier",
   },
   {
      label: "map_setbombradius",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Sets the bomb radius for the map.",
      type: "identifier",
   },
   {
      label: "map_showbombradius",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Shows bomb radius from the center of each bomb site and planted bomb.",
      type: "identifier",
   },
   {
      label: "mapgroup",
      value: "cmd",
      flags: ["sv", "norecord", "release"],
      detail: "Specify a map group",
      type: "identifier",
   },
   {
      label: "mapoverview_allow_client_draw",
      value: "false",
      flags: ["cl", "release"],
      detail: "Allow a client to draw on the map overview",
      type: "boolean",
   },
   {
      label: "mapoverview_icon_scale",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "Sets the icon scale multiplier for the overview map. Valid values are 0.5 to 3.0.",
      type: "number",
   },
   {
      label: "maps",
      value: "cmd",
      flags: ["release"],
      detail: "Displays list of maps.",
      type: "identifier",
   },
   {
      label: "markup_group_ent_bbox",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group",
      type: "identifier",
   },
   {
      label: "markup_group_ent_text",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group",
      type: "identifier",
   },
   {
      label: "markup_group_spew",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Spew all current markup groups and their members",
      type: "identifier",
   },
   {
      label: "mat_colcorrection_forceentitiesclientside",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Forces color correction entities to be updated on the client",
      type: "boolean",
   },
   {
      label: "mat_disable_normal_mapping",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mat_fullbright",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_lpv_luxels",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mat_luxels",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mat_max_lighting_complexity",
      value: "8",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_overdraw",
      value: "0",
      flags: ["cheat"],
      detail: "Visualize overdraw",
      type: "number",
   },
   {
      label: "mat_overdraw_color",
      value: "0.075000 0.150000 0.300000",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_shading_complexity",
      value: "false",
      flags: ["cheat"],
      detail: "Visualize shading complexity",
      type: "boolean",
   },
   {
      label: "mat_shading_complexity_color",
      value: "1.000000 0.500000 0.250000",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_shading_complexity_max_instruction_count",
      value: "1024",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_shading_complexity_max_register_count",
      value: "128",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_show_distance_field",
      value: "0",
      flags: ["cheat"],
      detail: "0=Off, 1=Visualize trace from camera, 2=Visualize occlusion",
      type: "number",
   },
   {
      label: "mat_tonemap_bloom_scale",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_bloom_start_value",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_accelerate_exposure_down",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_average_lum_min",
      value: "-1",
      flags: ["cheat"],
      detail: "Override. Old default was 3.0",
      type: "number",
   },
   {
      label: "mat_tonemap_force_log_lum_max",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_log_lum_min",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_max",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_min",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_percent_bright_pixels",
      value: "-1",
      flags: ["cheat"],
      detail: "Override. Old value was 1.0",
      type: "number",
   },
   {
      label: "mat_tonemap_force_percent_target",
      value: "-1",
      flags: ["cheat"],
      detail: "Override. Old default was 45.",
      type: "number",
   },
   {
      label: "mat_tonemap_force_rate",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_scale",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_force_use_alpha",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_tonemap_uncap_exposure",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mat_wireframe",
      value: "0",
      flags: ["cheat"],
      detail: "0=Off, 1=Surface Wireframe, 2=Transparent Wireframe",
      type: "number",
   },
   {
      label: "menuselect",
      value: "cmd",
      flags: ["cl", "clientcmd_can_execute"],
      detail: "menuselect",
      type: "identifier",
   },
   {
      label: "mesh_calculate_curvature_smooth_invert",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mesh_calculate_curvature_smooth_pass_count",
      value: "3",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "mesh_calculate_curvature_smooth_weight",
      value: "1",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "minimap_create",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Does a bunch of work to create a minimap",
      type: "identifier",
   },
   {
      label: "mm_csgo_community_search_players_min",
      value: "3",
      flags: ["a", "release"],
      detail: "When performing CSGO community matchmaking look for servers with at least so many human players",
      type: "number",
   },
   {
      label: "mm_dedicated_force_servers",
      value: "0",
      flags: ["release"],
      detail:
         "privateip1:port,publicip2:port|privateip2:port` if your server is behind NAT. If the server is behind NAT, you can specify `0.0.0.0|privateip:port` and if server port is in the list of `mm_server_search_lan_ports` its public address should be automatically detected.",
      type: "number",
   },
   {
      label: "mm_dedicated_search_maxping",
      value: "150",
      flags: ["a"],
      detail: "Longest preferred ping to dedicated servers for games",
      type: "number",
   },
   {
      label: "mm_queue_show_stats",
      value: "cmd",
      flags: ["cl", "clientcmd_can_execute"],
      detail: "Display global server stats",
      type: "identifier",
   },
   {
      label: "mm_server_search_lan_ports",
      value: "27015,27016,27017,27018,27019,27020",
      flags: ["a", "release"],
      detail: "Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs.",
      type: "identifier",
   },
   {
      label: "mm_session_search_qos_timeout",
      value: "15",
      flags: ["release"],
      detail: "",
      type: "number",
   },
   {
      label: "mm_session_sys_kick_ban_duration",
      value: "180",
      flags: ["release"],
      detail: "",
      type: "number",
   },
   {
      label: "mm_session_sys_pkey",
      value: "0",
      flags: ["release"],
      detail: "",
      type: "number",
   },
   {
      label: "mobile_fps_increase_during_charging",
      value: "false",
      flags: ["a"],
      detail: "MOBILE_FPS_CONTROL: If true we increase framerate limit while charging",
      type: "boolean",
   },
   {
      label: "mobile_fps_increase_during_touch",
      value: "true",
      flags: ["a"],
      detail: "MOBILE_FPS_CONTROL: If true we increase framerate limit during touch",
      type: "boolean",
   },
   {
      label: "mobile_fps_limit",
      value: "30",
      flags: ["a"],
      detail: "MOBILE_FPS_CONTROL: Mobile FPS limit - 15, 30, 60",
      type: "number",
   },
   {
      label: "model_default_preview_sequence_name",
      value: "0",
      flags: ["sv", "cl", "a", "rep"],
      detail: "",
      type: "number",
   },
   {
      label: "molotov_throw_detonate_time",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "motdfile",
      value: "motd.txt",
      flags: ["sv", "release"],
      detail: "The MOTD file to load.",
      type: "identifier",
   },
   {
      label: "mouse_inverty",
      value: "false",
      flags: ["cl", "a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mp_afterroundmoney",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "amount of money awared to every player after each round",
      type: "number",
   },
   {
      label: "mp_anyone_can_pickup_c4",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If set, everyone can pick up the c4, not just Ts.",
      type: "boolean",
   },
   {
      label: "mp_autokick",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "Kick idle/team-killing/team-damaging players",
      type: "boolean",
   },
   {
      label: "mp_autoteambalance",
      value: "true",
      flags: ["sv", "nf", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mp_backup_restore_list_files",
      value: "cmd",
      flags: ["sv", "release"],
      detail:
         "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed",
      type: "identifier",
   },
   {
      label: "mp_backup_restore_load_autopause",
      value: "true",
      flags: ["sv", "release"],
      detail: "Whether to automatically pause the match after restoring round data from backup",
      type: "boolean",
   },
   {
      label: "mp_backup_restore_load_file",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Loads player cash, KDA, scores and team scores; resets to the next round after the backup",
      type: "identifier",
   },
   {
      label: "mp_backup_round_auto",
      value: "true",
      flags: ["sv", "release"],
      detail: "If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk",
      type: "boolean",
   },
   {
      label: "mp_backup_round_file",
      value: "backup",
      flags: ["sv", "release"],
      detail: "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt",
      type: "identifier",
   },
   {
      label: "mp_backup_round_file_last",
      value: "0",
      flags: ["sv", "release"],
      detail: "Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.",
      type: "number",
   },
   {
      label: "mp_backup_round_file_pattern",
      value: "%prefix%_round%round%.txt",
      flags: ["sv", "release"],
      detail:
         "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'",
      type: "identifier",
   },
   {
      label: "mp_bot_ai_bt",
      value: "0",
      flags: ["sv", "release"],
      detail: "Use the specified behavior tree file to drive the bot behavior.",
      type: "number",
   },
   {
      label: "mp_bot_ai_bt_clear_cache",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Clears the cache for behavior tree files.",
      type: "identifier",
   },
   {
      label: "mp_buy_allow_grenades",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether players can purchase grenades from the buy menu or not.",
      type: "boolean",
   },
   {
      label: "mp_buy_allow_guns",
      value: "255",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether players can purchase guns: pistols (1), SMGs (2), rifles (4), shotguns (8), sniper rifles (16), heavy MGs (32).",
      type: "number",
   },
   {
      label: "mp_buy_anywhere",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.",
      type: "number",
   },
   {
      label: "mp_buy_during_immunity",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.",
      type: "number",
   },
   {
      label: "mp_buytime",
      value: "20",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How many seconds after round start players can buy items for.",
      type: "number",
   },
   {
      label: "mp_c4_cannot_be_defused",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If set, the planted c4 cannot be defused.",
      type: "boolean",
   },
   {
      label: "mp_c4timer",
      value: "40",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "how long from when the C4 is armed until it blows",
      type: "number",
   },
   {
      label: "mp_competitive_endofmatch_extra_time",
      value: "15",
      flags: ["sv", "release"],
      detail: "After a competitive match finishes rematch voting extra time is given for rankings.",
      type: "number",
   },
   {
      label: "mp_consecutive_loss_aversion",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail:
         "How loss streak is affected with round win: 0 = win fully resets loss bonus, 1 = first win steps down loss bonus, 2 = first win holds loss bonus and step down starting with second win",
      type: "number",
   },
   {
      label: "mp_consecutive_loss_max",
      value: "4",
      flags: ["sv", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "mp_coop_force_join_ct",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If set, real players will auto join CT on join.",
      type: "boolean",
   },
   {
      label: "mp_coopmission_bot_difficulty_offset",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "The difficulty offset modifier for bots during coop missions.",
      type: "number",
   },
   {
      label: "mp_coopmission_mission_number",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Which mission the map should run after it loads.",
      type: "number",
   },
   {
      label: "mp_coopterrorhunt_kill_add_time",
      value: "10",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The number of seconds added to the clock when players get a kill.",
      type: "number",
   },
   {
      label: "mp_coopterrorhunt_num_enemies",
      value: "20",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The number of enemies CTs have to hunt and kill.",
      type: "number",
   },
   {
      label: "mp_ct_default_grenades",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "The default grenades that the CTs will spawn with.  To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'",
      type: "number",
   },
   {
      label: "mp_ct_default_melee",
      value: "weapon_knife",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "The default melee weapon that the CTs will spawn with.  Even if this is blank, a knife will be given. To give a taser, it should look like this: 'weapon_knife weapon_taser'.  Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!",
      type: "identifier",
   },
   {
      label: "mp_ct_default_primary",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The default primary (rifle) weapon that the CTs will spawn with",
      type: "number",
   },
   {
      label: "mp_ct_default_secondary",
      value: "weapon_hkp2000",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The default secondary (pistol) weapon that the CTs will spawn with",
      type: "identifier",
   },
   {
      label: "mp_damage_headshot_only",
      value: "false",
      flags: ["sv", "rep", "release"],
      detail: "Determines whether non-headshot hits do any damage.",
      type: "boolean",
   },
   {
      label: "mp_damage_scale_ct_body",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)",
      type: "number",
   },
   {
      label: "mp_damage_scale_ct_head",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail:
         "Scales the damage a CT player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied.",
      type: "number",
   },
   {
      label: "mp_damage_scale_t_body",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)",
      type: "number",
   },
   {
      label: "mp_damage_scale_t_head",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail:
         "Scales the damage a T player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied.",
      type: "number",
   },
   {
      label: "mp_damage_vampiric_amount",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "If Set to non-0, will determine the fraction of damage dealt that will be given to attacker.",
      type: "number",
   },
   {
      label: "mp_death_drop_breachcharge",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Drop breachcharge on player death",
      type: "boolean",
   },
   {
      label: "mp_death_drop_c4",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether c4 is droppable",
      type: "boolean",
   },
   {
      label: "mp_death_drop_defuser",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Drop defuser on player death",
      type: "boolean",
   },
   {
      label: "mp_death_drop_grenade",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades",
      type: "number",
   },
   {
      label: "mp_death_drop_gun",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Which gun to drop on player death: 0=none, 1=best, 2=current or best",
      type: "number",
   },
   {
      label: "mp_death_drop_healthshot",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Drop healthshot on player death",
      type: "boolean",
   },
   {
      label: "mp_death_drop_taser",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Drop taser on player death",
      type: "boolean",
   },
   {
      label: "mp_deathcam_skippable",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "Determines whether a player can early-out of the deathcam.",
      type: "boolean",
   },
   {
      label: "mp_default_team_winner_no_objective",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "If the map doesn't define an objective (bomb, hostage, etc), the value of this convar will declare the winner when the time runs out in the round.",
      type: "number",
   },
   {
      label: "mp_defuser_allocation",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone",
      type: "number",
   },
   {
      label: "mp_disable_autokick",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Prevents a userid from being auto-kicked",
      type: "identifier",
   },
   {
      label: "mp_disconnect_kills_bots",
      value: "false",
      flags: ["sv", "release"],
      detail: "When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players.",
      type: "boolean",
   },
   {
      label: "mp_disconnect_kills_players",
      value: "true",
      flags: ["sv", "release"],
      detail: "When a player disconnects, kill them first (triggering item drops, stats, etc.)",
      type: "boolean",
   },
   {
      label: "mp_display_kill_assists",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether to display and score player assists",
      type: "boolean",
   },
   {
      label: "mp_dm_bonus_length_max",
      value: "30",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Maximum time the bonus time will last (in seconds)",
      type: "number",
   },
   {
      label: "mp_dm_bonus_length_min",
      value: "30",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Minimum time the bonus time will last (in seconds)",
      type: "number",
   },
   {
      label: "mp_dm_bonus_percent",
      value: "50",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period.",
      type: "number",
   },
   {
      label: "mp_dm_bonusweapon_dogtags",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Additional dogtags to drop when making a kill with the bonus weapon",
      type: "number",
   },
   {
      label: "mp_dm_dogtag_score",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Points to award for picking up a dogtag in deathmatch.",
      type: "number",
   },
   {
      label: "mp_dm_healthshot_killcount",
      value: "3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Grant healthshots in deathmatch after n kills",
      type: "number",
   },
   {
      label: "mp_dm_kill_base_score",
      value: "10",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of base points to award for a kill in deathmatch.  Cheaper weapons award 1 or 2 additional points.",
      type: "number",
   },
   {
      label: "mp_dm_teammode",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "In deathmatch, enables team DM visuals & scoring (0: personal, 1: team mode, 2: use team contribution score)",
      type: "number",
   },
   {
      label: "mp_dm_teammode_bonus_score",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Team deathmatch victory points to award for kill with bonus weapon",
      type: "number",
   },
   {
      label: "mp_dm_teammode_dogtag_score",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Team deathmatch victory points to award for collecting enemy dogtags",
      type: "number",
   },
   {
      label: "mp_dm_teammode_kill_score",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Team deathmatch victory points to award for enemy kill",
      type: "number",
   },
   {
      label: "mp_dm_time_between_bonus_max",
      value: "40",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Maximum time a bonus time will start after the round start or after the last bonus (in seconds)",
      type: "number",
   },
   {
      label: "mp_dm_time_between_bonus_min",
      value: "30",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Minimum time a bonus time will start after the round start or after the last bonus (in seconds)",
      type: "number",
   },
   {
      label: "mp_dogtag_despawn_on_killer_death",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "Whether dogtags should despawn when their killer dies",
      type: "boolean",
   },
   {
      label: "mp_dogtag_despawn_time",
      value: "120",
      flags: ["sv", "rep", "release"],
      detail: "How many seconds dogtags should stay around before despawning automatically (0 = infinite)",
      type: "number",
   },
   {
      label: "mp_dogtag_pickup_rule",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "Who is eligible to pick up a dogtag (0 = killer only, 1 = killer's team, 2 = victim's team, 3 = killer & victim's team, 4 = anyone)",
      type: "number",
   },
   {
      label: "mp_drop_grenade_enable",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Allows players to drop grenades.",
      type: "boolean",
   },
   {
      label: "mp_drop_knife_enable",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Allows players to drop knives.",
      type: "boolean",
   },
   {
      label: "mp_economy_reset_rounds",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Reset all player money every N rounds (0 for never)",
      type: "number",
   },
   {
      label: "mp_endmatch_votenextleveltime",
      value: "20",
      flags: ["sv", "release"],
      detail: "If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end.",
      type: "number",
   },
   {
      label: "mp_endmatch_votenextmap",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether or not players vote for the next map at the end of the match when the final scoreboard comes up",
      type: "boolean",
   },
   {
      label: "mp_endmatch_votenextmap_keepcurrent",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "If set, keeps the current map in the list of voting options.  If not set, the current map will not appear in the list of voting options.",
      type: "boolean",
   },
   {
      label: "mp_endmatch_votenextmap_wargames_modes",
      value: "0",
      flags: ["sv", "release"],
      detail: "Modes available for endmatch voting during War Games. Separate names with spaces.",
      type: "number",
   },
   {
      label: "mp_endmatch_votenextmap_wargames_nummaps",
      value: "3",
      flags: ["sv", "release"],
      detail: "Maximum number of maps to include in endmatch voting during War Games",
      type: "number",
   },
   {
      label: "mp_endmatch_votenextmap_wargames_nummodes",
      value: "1",
      flags: ["sv", "release"],
      detail: "Maximum number of other War Games to include in endmatch voting during War Games",
      type: "number",
   },
   {
      label: "mp_endwarmup_player_count",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of players required to be connected to end warmup early. 0 to require maximum players for mode.",
      type: "number",
   },
   {
      label: "mp_equipment_reset_rounds",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Reset all player equipment every N rounds (0 for never)",
      type: "number",
   },
   {
      label: "mp_fists_replace_melee",
      value: "true",
      flags: ["sv", "release"],
      detail: "If enabled then when melee weapon is dropped player will have fists, when melee weapon is picked up then fists are unavailable",
      type: "boolean",
   },
   {
      label: "mp_footsteps_serverside",
      value: "true",
      flags: ["sv", "release"],
      detail: "Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server.",
      type: "boolean",
   },
   {
      label: "mp_force_pick_time",
      value: "15",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The amount of time a player has on the team screen to make a selection before being auto-teamed",
      type: "number",
   },
   {
      label: "mp_forcecamera",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Restricts spectator modes for dead players",
      type: "number",
   },
   {
      label: "mp_fraglimit",
      value: "0",
      flags: ["sv", "nf", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "mp_free_armor",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines whether kevlar (1+) and/or helmet (2+) are given automatically.",
      type: "number",
   },
   {
      label: "mp_freezetime",
      value: "15",
      flags: ["sv", "nf", "rep", "release"],
      detail: "how many seconds to keep players frozen when the round starts",
      type: "number",
   },
   {
      label: "mp_friendlyfire",
      value: "true",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Allows team members to injure other members of their team",
      type: "boolean",
   },
   {
      label: "mp_give_player_c4",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether this map should spawn a c4 bomb for a player or not.",
      type: "boolean",
   },
   {
      label: "mp_global_damage_per_second",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "If above 0, deal non-lethal damage to players over time.",
      type: "number",
   },
   {
      label: "mp_guardian_ai_bt_difficulty_adjust_wave_interval",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "Adjust the guardian bots' difficulty every nth guardian wave when using behavior trees.",
      type: "number",
   },
   {
      label: "mp_guardian_ai_bt_difficulty_cap_beginning_round",
      value: "2",
      flags: ["sv", "rep", "release"],
      detail: "Starting this round a difficulty cap will be applied to the bots.",
      type: "number",
   },
   {
      label: "mp_guardian_ai_bt_difficulty_initial_value",
      value: "2",
      flags: ["sv", "rep", "release"],
      detail: "Starting difficulty level for the gardian bots.",
      type: "number",
   },
   {
      label: "mp_guardian_ai_bt_difficulty_max_next_level_bots",
      value: "3",
      flags: ["sv", "rep", "release"],
      detail: "How many bots to increase difficulty per wave - this many easier bots will get harder.",
      type: "number",
   },
   {
      label: "mp_guardian_bomb_plant_custom_x_mark_location",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "x,y,z to display an X for the bomb plant in guardian missions with custom bomb plant boundaries.",
      type: "number",
   },
   {
      label: "mp_guardian_bot_money_per_wave",
      value: "800",
      flags: ["sv", "rep", "release"],
      detail:
         "The amount of money bots get time each wave the players complete.  This # is absolute and not additive, the money is set to (this)x(wave#) for each bot on each wave.",
      type: "number",
   },
   {
      label: "mp_guardian_force_collect_hostages_timeout",
      value: "50",
      flags: ["sv", "release"],
      detail: "Force bots to collect hostages after this amount of time if no enemy has been seen.",
      type: "number",
   },
   {
      label: "mp_guardian_give_random_grenades_to_bots",
      value: "true",
      flags: ["sv", "release"],
      detail: "If set guardian bots will be given grenades at the beginning of the wave.",
      type: "boolean",
   },
   {
      label: "mp_guardian_loc_string_hud",
      value: "#guardian_mission_type_kills",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Loc string token to use on hud for this mission, otherwise default to kills with weapon.",
      type: "identifier",
   },
   {
      label: "mp_guardian_loc_weapon",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Override to weapon dialog var applied to UI",
      type: "number",
   },
   {
      label: "mp_guardian_player_dist_max",
      value: "2000",
      flags: ["sv", "rep", "release"],
      detail: "The maximum distance a player is allowed to get from the bombsite before they're killed.",
      type: "number",
   },
   {
      label: "mp_guardian_player_dist_min",
      value: "1300",
      flags: ["sv", "rep", "release"],
      detail: "The distance at which we start to warn a player when they are too far from the guarded bombsite.",
      type: "number",
   },
   {
      label: "mp_guardian_special_kills_needed",
      value: "10",
      flags: ["sv", "rep", "release"],
      detail: "The number of kills needed with a specific weapon.",
      type: "number",
   },
   {
      label: "mp_guardian_special_weapon_needed",
      value: "awp",
      flags: ["sv", "rep", "release"],
      detail: "The weapon that needs to be used to increment the kills needed to complete the mission.",
      type: "identifier",
   },
   {
      label: "mp_guardian_target_site",
      value: "-1",
      flags: ["sv", "release"],
      detail: "If set to the index of a bombsite, will cause random spawns to be only created near that site.",
      type: "number",
   },
   {
      label: "mp_halftime",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines whether the match switches sides in a halftime event.",
      type: "boolean",
   },
   {
      label: "mp_halftime_duration",
      value: "15",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Target number of seconds that halftime lasts; shortened if team intros are active",
      type: "number",
   },
   {
      label: "mp_halftime_pausematch",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Set to 1 to pause match after halftime countdown elapses. Match must be resumed by vote or admin.",
      type: "number",
   },
   {
      label: "mp_halftime_pausetimer",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer.",
      type: "number",
   },
   {
      label: "mp_heavyassaultsuit_aimpunch",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How much EXTRA aim punch will happen when a player wearing the assault suit gets when shot",
      type: "boolean",
   },
   {
      label: "mp_heavyassaultsuit_cooldown",
      value: "5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines cooldown of purchase.",
      type: "number",
   },
   {
      label: "mp_heavyassaultsuit_deploy_timescale",
      value: "0.8",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How fast a player wearing the heavy assault suit will draw their weapon (1.0 = normal speed, 0.5 = half speed)",
      type: "number",
   },
   {
      label: "mp_heavyassaultsuit_speed",
      value: "130",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The max speed of a player when they are wearing the heavy assault suit",
      type: "number",
   },
   {
      label: "mp_heavybot_damage_reduction_scale",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How much damage should scale when the player wearing the heavy assault suit is shot (1.0 = no change, 0.5 = half damage)",
      type: "number",
   },
   {
      label: "mp_hostages_max",
      value: "2",
      flags: ["sv", "rep", "release"],
      detail: "Maximum number of hostages to spawn.",
      type: "number",
   },
   {
      label: "mp_hostages_rescuetime",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Additional time added to round time if a hostage is reached by a CT.",
      type: "number",
   },
   {
      label: "mp_hostages_run_speed_modifier",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "Default is 1.0, slow down hostages by setting this to < 1.0.",
      type: "number",
   },
   {
      label: "mp_hostages_spawn_farthest",
      value: "false",
      flags: ["sv", "rep", "release"],
      detail: "When enabled will consistently force the farthest hostages to spawn.",
      type: "boolean",
   },
   {
      label: "mp_hostages_spawn_force_positions",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "Comma separated list of zero based indices to force spawn positions, e.g. '0,2' or '1,6'",
      type: "number",
   },
   {
      label: "mp_hostages_spawn_force_positions_xyz",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "Comma separated list of xyz locations to force spawn positions, e.g. 'x1 y1 z1,x2 y2 z2'",
      type: "number",
   },
   {
      label: "mp_hostages_spawn_same_every_round",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "0 = spawn hostages randomly every round, 1 = same spawns for entire match.",
      type: "boolean",
   },
   {
      label: "mp_hostages_takedamage",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether or not hostages can be hurt.",
      type: "boolean",
   },
   {
      label: "mp_humanteam",
      value: "any",
      flags: ["sv", "rep", "release"],
      detail: "Restricts human players to a single team {any, CT, T}",
      type: "identifier",
   },
   {
      label: "mp_ignore_round_win_conditions",
      value: "false",
      flags: ["sv", "rep", "release"],
      detail: "Ignore conditions which would end the current round",
      type: "boolean",
   },
   {
      label: "mp_items_prohibited",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Set this convar to a comma-delimited list of definition indices of weapons that should be prohibited from use.",
      type: "number",
   },
   {
      label: "mp_join_grace_time",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of seconds after round start to allow a player to join a game",
      type: "number",
   },
   {
      label: "mp_limitteams",
      value: "2",
      flags: ["sv", "nf", "rep", "release"],
      detail: "Max # of players 1 team can have over another (0 disables check)",
      type: "number",
   },
   {
      label: "mp_logdetail",
      value: "0",
      flags: ["sv", "release"],
      detail: "Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)",
      type: "number",
   },
   {
      label: "mp_logdetail_items",
      value: "false",
      flags: ["sv", "release"],
      detail: "Logs a line any time a player acquires or loses an item.",
      type: "boolean",
   },
   {
      label: "mp_logdistance_2d",
      value: "250",
      flags: ["sv", "release"],
      detail: "Enables distance logging every so many units",
      type: "number",
   },
   {
      label: "mp_logdistance_sec",
      value: "15",
      flags: ["sv", "release"],
      detail: "Enables distance logging every so many seconds",
      type: "number",
   },
   {
      label: "mp_logloadouts",
      value: "true",
      flags: ["sv", "release"],
      detail: "Enables distance logging with full loadouts",
      type: "boolean",
   },
   {
      label: "mp_logmoney",
      value: "false",
      flags: ["sv", "release"],
      detail: "Enables money logging.  Values are: 0=off, 1=on",
      type: "boolean",
   },
   {
      label: "mp_match_can_clinch",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?",
      type: "boolean",
   },
   {
      label: "mp_match_end_changelevel",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "At the end of the match, perform a changelevel even if next map is the same",
      type: "boolean",
   },
   {
      label: "mp_match_end_restart",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "At the end of the match, perform a restart instead of loading a new map",
      type: "boolean",
   },
   {
      label: "mp_match_restart_delay",
      value: "25",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Time (in seconds) until a match restarts.",
      type: "number",
   },
   {
      label: "mp_max_armor",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines the highest level of armor allowed to be purchased. (0) None, (1) Kevlar, (2) Helmet",
      type: "number",
   },
   {
      label: "mp_maxmoney",
      value: "16000",
      flags: ["sv", "cl", "rep", "release"],
      detail: "maximum amount of money allowed in a player's account",
      type: "number",
   },
   {
      label: "mp_maxrounds",
      value: "24",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "max number of rounds to play before server changes maps",
      type: "number",
   },
   {
      label: "mp_min_halftime_duration",
      value: "8.5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Minimum number of seconds that halftime lasts even if team intros are active",
      type: "number",
   },
   {
      label: "mp_only_cts_rescue_hostages",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mp_overtime_enable",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If a match ends in a tie, use overtime rules to determine winner",
      type: "boolean",
   },
   {
      label: "mp_overtime_halftime_pausetimer",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the timer.",
      type: "number",
   },
   {
      label: "mp_overtime_limit",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "When overtime is enabled, only so many overtimes can be played",
      type: "number",
   },
   {
      label: "mp_overtime_maxrounds",
      value: "6",
      flags: ["sv", "cl", "rep", "release"],
      detail: "When overtime is enabled play additional rounds to determine winner",
      type: "number",
   },
   {
      label: "mp_overtime_startmoney",
      value: "10000",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Money assigned to all players at start of every overtime half",
      type: "number",
   },
   {
      label: "mp_pause_match",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Pause the match in the next freeze time",
      type: "identifier",
   },
   {
      label: "mp_plant_c4_anywhere",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "mp_playercashawards",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Players can earn money by performing in-game actions",
      type: "boolean",
   },
   {
      label: "mp_playerid",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names",
      type: "number",
   },
   {
      label: "mp_playerid_delay",
      value: "0.4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of seconds to delay showing information in the status bar",
      type: "number",
   },
   {
      label: "mp_playerid_hold",
      value: "0.1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of seconds to keep showing old information in the status bar",
      type: "number",
   },
   {
      label: "mp_randomspawn",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs.",
      type: "number",
   },
   {
      label: "mp_randomspawn_dist",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If using mp_randomspawn, determines whether to test distance when selecting this spot.",
      type: "number",
   },
   {
      label: "mp_randomspawn_los",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If using mp_randomspawn, determines whether to test Line of Sight when spawning.",
      type: "boolean",
   },
   {
      label: "mp_require_gun_use_to_acquire",
      value: "false",
      flags: ["sv", "release"],
      detail: "Whether guns must be +used to acquire or default is touch-to-pickup",
      type: "boolean",
   },
   {
      label: "mp_respawn_immunitytime",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How many seconds after respawn immunity lasts. Set to negative value to disable warmup immunity.",
      type: "number",
   },
   {
      label: "mp_respawn_on_death_ct",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "When set to 1, counter-terrorists will respawn after dying.",
      type: "boolean",
   },
   {
      label: "mp_respawn_on_death_t",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "When set to 1, terrorists will respawn after dying.",
      type: "boolean",
   },
   {
      label: "mp_respawnwavetime_ct",
      value: "10",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Time between respawn waves for CTs.",
      type: "number",
   },
   {
      label: "mp_respawnwavetime_t",
      value: "10",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Time between respawn waves for Terrorists.",
      type: "number",
   },
   {
      label: "mp_restartgame",
      value: "0",
      flags: ["sv", "release"],
      detail: "If non-zero, game will restart in the specified number of seconds",
      type: "number",
   },
   {
      label: "mp_retake_ct_count",
      value: "4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of CT's when playing retakes.",
      type: "number",
   },
   {
      label: "mp_retake_ct_loadout_bonus_card",
      value: "#GameUI_Retake_Card_TheAWPortunity,1,1,rifle4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "CT bonus card for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_ct_loadout_bonus_card_availability",
      value: "1,2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "CT bonus card availability pattern for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_ct_loadout_default_pistol_round",
      value: "3;#GameUI_Retake_Card_4v3,0,0,secondary0|1;#GameUI_Retake_Card_FlashOut,0,0,secondary0,grenade2;#GameUI_Retake_Card_HideAndPeek,0,0,secondary0,grenade4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "CT Loadouts for default pistol round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_ct_loadout_enemy_card",
      value: "#GameUI_Retake_Card_BehindEnemyLines,1,1,rifle1,grenade2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "CT enemy card for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_ct_loadout_full_buy_round",
      value: "2;#GameUI_Retake_Card_LightEmUp,1,1,rifle1,grenade2|2;#GameUI_Retake_Card_Kobe,1,1,rifle1,grenade3|1;#GameUI_Retake_Card_1g,1,1,rifle1,grenade0|1;#GameUI_Retake_Card_DisappearingAct,1,1,rifle1,grenade4|1;#GameUI_Retake_Card_EyesOnTarget,1,1,rifle3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "CT Loadouts for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_ct_loadout_light_buy_round",
      value: "2;#GameUI_Retake_Card_UmpInSmoke,1,1,smg2,grenade4|2;#GameUI_Retake_Card_FunNGun,1,1,smg0,grenade3|2;#GameUI_Retake_Card_Sharpshooter,1,1,rifle2,grenade2|2;#GameUI_Retake_Card_BurstBullpup,1,1,rifle0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "CT Loadouts for force buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_ct_loadout_upgraded_pistol_round",
      value: "2;#GameUI_Retake_Card_TakeFive,0,0,secondary3|2;#GameUI_Retake_Card_BlindFire,0,0,secondary2,grenade2|2;#GameUI_Retake_Card_OnlyTakesOne,0,0,secondary4|2;#GameUI_Retake_Card_SneakyBeakyLike,0,0,secondary2,grenade4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "CT Loadouts for upgraded pistol round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_max_consecutive_rounds_same_target_site",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Limit the number of consecutive rounds targeting the same site.",
      type: "number",
   },
   {
      label: "mp_retake_t_count",
      value: "3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of terrorists when playing retakes.",
      type: "number",
   },
   {
      label: "mp_retake_t_loadout_bonus_card",
      value: "#GameUI_Retake_Card_TheAWPortunity,1,1,rifle4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "T bonus card for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_t_loadout_bonus_card_availability",
      value: "1,1,2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "T bonus card availability pattern for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_t_loadout_default_pistol_round",
      value: "3;#GameUI_Retake_Card_4BadGuysLeft,0,0,secondary0|1;#GameUI_Retake_Card_LookAway,0,0,secondary0,grenade2;#GameUI_Retake_Card_WhenThereIsSmoke,0,0,secondary0,grenade4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "T Loadouts for default pistol round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_t_loadout_enemy_card",
      value: "#GameUI_Retake_Card_FindersKeepers,1,1,rifle1,grenade2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "T enemy card for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_t_loadout_full_buy_round",
      value: "2;#GameUI_Retake_Card_OlReliable,1,1,rifle1,grenade2|1;#GameUI_Retake_Card_SmokeShow,1,1,rifle1,grenade4|1;#GameUI_Retake_Card_HotShot,1,1,rifle1,grenade0|1;#GameUI_Retake_Card_EyeSpy,1,1,rifle3,grenade3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "T Loadouts for full buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_t_loadout_light_buy_round",
      value: "2;#GameUI_Retake_Card_BackInAFlash,1,1,smg2,grenade2|2;#GameUI_Retake_Card_AllIn,1,1,rifle0|1;#GameUI_Retake_Card_BoomBox,1,1,smg0,grenade3,grenade4|1;#GameUI_Retake_Card_SetThemFree,1,1,rifle2,grenade2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "T Loadouts for force buy round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_retake_t_loadout_upgraded_pistol_round",
      value: "2;#GameUI_Retake_Card_BlindFire,0,0,secondary2,grenade2|2;#GameUI_Retake_Card_QueOta,0,0,secondary4|1;#GameUI_Retake_Card_SmokeScreen,0,0,secondary2,grenade4|1;#GameUI_Retake_Card_TecTecBoom,0,0,secondary3,grenade3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "T Loadouts for upgraded pistol round when playing bomb site retake.",
      type: "identifier",
   },
   {
      label: "mp_round_restart_delay",
      value: "7",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of seconds to delay before restarting a round after a win",
      type: "number",
   },
   {
      label: "mp_roundtime",
      value: "1.92",
      flags: ["sv", "nf", "rep", "release"],
      detail: "How many minutes each round takes.",
      type: "number",
   },
   {
      label: "mp_roundtime_defuse",
      value: "1.92",
      flags: ["sv", "nf", "rep", "release"],
      detail: "How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead.",
      type: "number",
   },
   {
      label: "mp_roundtime_deployment",
      value: "5",
      flags: ["sv", "release"],
      detail: "How many minutes deployment for coop mission takes.",
      type: "number",
   },
   {
      label: "mp_roundtime_hostage",
      value: "1.92",
      flags: ["sv", "nf", "rep", "release"],
      detail: "How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead.",
      type: "number",
   },
   {
      label: "mp_scrambleteams",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Scramble the teams and restart the game",
      type: "identifier",
   },
   {
      label: "mp_shield_speed_deployed",
      value: "170",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The max speed of a player when they have a shield deployed",
      type: "number",
   },
   {
      label: "mp_shield_speed_holstered",
      value: "200",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The max speed of a player when they have a shield holstered",
      type: "number",
   },
   {
      label: "mp_shorthanded_cash_bonus_ignore_kicked",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines whether kicked players are included in the assessment for short-handedness",
      type: "boolean",
   },
   {
      label: "mp_shorthanded_cash_bonus_round_delay",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "number of previous rounds that a team needs to have been shorthanded before they are eligible for the short-handed bonus",
      type: "number",
   },
   {
      label: "mp_solid_teammates",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads",
      type: "number",
   },
   {
      label: "mp_spawnprotectiontime",
      value: "5",
      flags: ["sv", "rep", "release"],
      detail: "Kick players who team-kill within this many seconds of a round restart.",
      type: "number",
   },
   {
      label: "mp_spec_swapplayersides",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.",
      type: "boolean",
   },
   {
      label: "mp_spectators_max",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How many spectators are allowed in a match.",
      type: "number",
   },
   {
      label: "mp_starting_losses",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "Determines what the initial loss streak is.",
      type: "number",
   },
   {
      label: "mp_startmoney",
      value: "800",
      flags: ["sv", "cl", "rep", "release"],
      detail: "amount of money each player gets when they reset",
      type: "number",
   },
   {
      label: "mp_suicide_penalty",
      value: "true",
      flags: ["sv", "release"],
      detail: "Punish players for suicides",
      type: "boolean",
   },
   {
      label: "mp_swapteams",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Swap the teams and restart the game",
      type: "identifier",
   },
   {
      label: "mp_t_default_grenades",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "The default grenades that the Ts will spawn with. To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'",
      type: "number",
   },
   {
      label: "mp_t_default_melee",
      value: "weapon_knife",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The default melee weapon that the Ts will spawn with",
      type: "identifier",
   },
   {
      label: "mp_t_default_primary",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The default primary (rifle) weapon that the Ts will spawn with",
      type: "number",
   },
   {
      label: "mp_t_default_secondary",
      value: "weapon_glock",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The default secondary (pistol) weapon that the Ts will spawn with",
      type: "identifier",
   },
   {
      label: "mp_tagging_scale",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "Scalar for player tagging modifier when hit. Lower values for greater tagging.",
      type: "number",
   },
   {
      label: "mp_taser_recharge_time",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines recharge time for taser. -1 = disabled.",
      type: "number",
   },
   {
      label: "mp_td_dmgtokick",
      value: "300",
      flags: ["sv", "rep", "release"],
      detail: "The damage threshhold players have to exceed in a match to get kicked.",
      type: "number",
   },
   {
      label: "mp_td_dmgtowarn",
      value: "200",
      flags: ["sv", "rep", "release"],
      detail: "The damage threshhold players have to exceed in a match to get warned that they are about to be kicked.",
      type: "number",
   },
   {
      label: "mp_td_spawndmgthreshold",
      value: "50",
      flags: ["sv", "rep", "release"],
      detail: "The damage threshold players have to exceed at the start of the round to be warned/kick.",
      type: "number",
   },
   {
      label: "mp_team_intro_time",
      value: "6.5",
      flags: ["sv", "nf", "rep", "release"],
      detail: "How many seconds for team intro",
      type: "number",
   },
   {
      label: "mp_team_timeout_max",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of timeouts each team gets per match.",
      type: "number",
   },
   {
      label: "mp_team_timeout_ot_add_each",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of timeouts to add for each team when match goes to 2nd and each next overtime.",
      type: "number",
   },
   {
      label: "mp_team_timeout_ot_add_once",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of timeouts to add for each team when regulation time ends and match goes to overtime.",
      type: "number",
   },
   {
      label: "mp_team_timeout_ot_max",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Max number of timeouts each team can have per OT after all OT timeouts got added.",
      type: "number",
   },
   {
      label: "mp_team_timeout_time",
      value: "60",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Duration of each timeout.",
      type: "number",
   },
   {
      label: "mp_teamcashawards",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Teams can earn money by performing in-game actions",
      type: "boolean",
   },
   {
      label: "mp_teamflag_1",
      value: "0",
      flags: ["sv", "release"],
      detail: "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard.",
      type: "number",
   },
   {
      label: "mp_teamflag_2",
      value: "0",
      flags: ["sv", "release"],
      detail: "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard.",
      type: "number",
   },
   {
      label: "mp_teamlogo_1",
      value: "0",
      flags: ["sv", "release"],
      detail: "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      type: "number",
   },
   {
      label: "mp_teamlogo_2",
      value: "0",
      flags: ["sv", "release"],
      detail: "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      type: "number",
   },
   {
      label: "mp_teammatchstat_1",
      value: "0",
      flags: ["sv", "release"],
      detail: "A non-empty string sets first team's match stat.",
      type: "number",
   },
   {
      label: "mp_teammatchstat_2",
      value: "0",
      flags: ["sv", "release"],
      detail: "A non-empty string sets second team's match stat.",
      type: "number",
   },
   {
      label: "mp_teammatchstat_cycletime",
      value: "45",
      flags: ["sv", "release"],
      detail: "Cycle match stats after so many seconds",
      type: "number",
   },
   {
      label: "mp_teammatchstat_holdtime",
      value: "5",
      flags: ["sv", "release"],
      detail: "Decide on a match stat and hold it additionally for at least so many seconds",
      type: "number",
   },
   {
      label: "mp_teammatchstat_txt",
      value: "0",
      flags: ["sv", "release"],
      detail: "A non-empty string sets the match stat description, e.g. 'Match 2 of 3'.",
      type: "number",
   },
   {
      label: "mp_teammates_are_enemies",
      value: "false",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "When set, your teammates act as enemies and all players are valid targets.",
      type: "boolean",
   },
   {
      label: "mp_teamname_1",
      value: "0",
      flags: ["sv", "release"],
      detail: "A non-empty string overrides the first team's name.",
      type: "number",
   },
   {
      label: "mp_teamname_2",
      value: "0",
      flags: ["sv", "release"],
      detail: "A non-empty string overrides the second team's name.",
      type: "number",
   },
   {
      label: "mp_teamprediction_pct",
      value: "0",
      flags: ["sv", "release"],
      detail: "A value between 1 and 99 will show predictions in favor of CT team.",
      type: "number",
   },
   {
      label: "mp_teamprediction_txt",
      value: "#SFUIHUD_Spectate_Predictions",
      flags: ["sv", "release"],
      detail: "A value between 1 and 99 will set predictions in favor of first team.",
      type: "identifier",
   },
   {
      label: "mp_teamscore_1",
      value: "0",
      flags: ["sv", "release"],
      detail: "A non-empty string for best-of-N maps won by the first team.",
      type: "number",
   },
   {
      label: "mp_teamscore_2",
      value: "0",
      flags: ["sv", "release"],
      detail: "A non-empty string for best-of-N maps won by the second team.",
      type: "number",
   },
   {
      label: "mp_teamscore_max",
      value: "0",
      flags: ["sv", "release"],
      detail: "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)",
      type: "number",
   },
   {
      label: "mp_technical_timeout_duration_s",
      value: "120",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How many seconds is a full technical timeout?",
      type: "number",
   },
   {
      label: "mp_technical_timeout_per_team",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How many technical timeouts are there per team?",
      type: "number",
   },
   {
      label: "mp_timelimit",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "game time per map in minutes",
      type: "number",
   },
   {
      label: "mp_tkpunish",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes}",
      type: "number",
   },
   {
      label: "mp_unpause_match",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Resume the match",
      type: "identifier",
   },
   {
      label: "mp_use_respawn_waves",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "When set to 1, and that player's team is set to respawn, they will respawn in waves. If set to 2, teams will respawn when the whole team is dead.",
      type: "number",
   },
   {
      label: "mp_verbose_changelevel_spew",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "mp_warmup_end",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "End warmup immediately.",
      type: "identifier",
   },
   {
      label: "mp_warmup_offline_enabled",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether or not to do a warmup period at the start of a match in an offline (bot) match.",
      type: "boolean",
   },
   {
      label: "mp_warmup_online_enabled",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Whether or not to do a warmup period at the start of an online match.",
      type: "boolean",
   },
   {
      label: "mp_warmup_pausetimer",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer.",
      type: "number",
   },
   {
      label: "mp_warmup_start",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Start warmup.",
      type: "identifier",
   },
   {
      label: "mp_warmuptime",
      value: "120",
      flags: ["sv", "cl", "rep", "release"],
      detail: "How long the warmup period lasts. Changing this value resets warmup.",
      type: "number",
   },
   {
      label: "mp_warmuptime_all_players_connected",
      value: "15",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Warmup time to use when all players have connected. 0 to disable.",
      type: "number",
   },
   {
      label: "mp_warmuptime_match_cancelled",
      value: "5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Warmup time to use when the match will be cancelled (eg. due to a live VAC ban).",
      type: "number",
   },
   {
      label: "mp_weapon_melee_touch_time_after_hit",
      value: "5",
      flags: ["sv", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "mp_weapon_next_owner_touch_time",
      value: "1.3",
      flags: ["sv", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "mp_weapon_prev_owner_touch_time",
      value: "1.5",
      flags: ["sv", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "mp_weapon_self_inflict_amount",
      value: "0",
      flags: ["sv", "rep", "release"],
      detail: "If Set to non-0, will hurt the attacker by the specified fraction of max damage if they miss.",
      type: "number",
   },
   {
      label: "mp_weapons_allow_heavy",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      type: "number",
   },
   {
      label: "mp_weapons_allow_heavyassaultsuit",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines whether heavyassaultsuit is permitted.",
      type: "boolean",
   },
   {
      label: "mp_weapons_allow_map_placed",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If this convar is set, when a match starts, the game will not delete weapons placed in the map.",
      type: "boolean",
   },
   {
      label: "mp_weapons_allow_pistols",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      type: "number",
   },
   {
      label: "mp_weapons_allow_rifles",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      type: "number",
   },
   {
      label: "mp_weapons_allow_smgs",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs.",
      type: "number",
   },
   {
      label: "mp_weapons_allow_typecount",
      value: "5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit).",
      type: "number",
   },
   {
      label: "mp_weapons_allow_zeus",
      value: "5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit).",
      type: "number",
   },
   {
      label: "mp_weapons_glow_on_ground",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If this convar is set, weapons on the ground will have a glow around them.",
      type: "boolean",
   },
   {
      label: "mp_weapons_max_gun_purchases_per_weapon_per_match",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Max number of times a player may purchase any weapon per match",
      type: "number",
   },
   {
      label: "mp_win_panel_display_time",
      value: "3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The amount of time to show the win panel between matches / halfs",
      type: "number",
   },
   {
      label: "multvar",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Multiply specified convar value.",
      type: "identifier",
   },
   {
      label: "name",
      value: "",
      flags: ["a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_add_to_selected_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Add current area to the selected set.",
      type: "identifier",
   },
   {
      label: "nav_add_to_selected_set_by_id",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Add specified area id to the selected set.",
      type: "identifier",
   },
   {
      label: "nav_avoid",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggles the 'avoid this area when possible' flag used by the AI system.",
      type: "identifier",
   },
   {
      label: "nav_avoid_obstacles",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_begin_deselecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Start continuously removing from the selected set.",
      type: "identifier",
   },
   {
      label: "nav_begin_drag_deselecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Start dragging a selection area.",
      type: "identifier",
   },
   {
      label: "nav_begin_drag_selecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Start dragging a selection area.",
      type: "identifier",
   },
   {
      label: "nav_begin_selecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Start continuously adding to the selected set.",
      type: "identifier",
   },
   {
      label: "nav_bfs_debug",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_check_connectivity",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site).",
      type: "identifier",
   },
   {
      label: "nav_clear_attribute",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Remove given nav attribute from all areas in the selected set.",
      type: "identifier",
   },
   {
      label: "nav_clear_attributes",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Clear all nav attributes of selected area.",
      type: "identifier",
   },
   {
      label: "nav_clear_selected_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Clear the selected set.",
      type: "identifier",
   },
   {
      label: "nav_corner_adjust_adjacent",
      value: "18",
      flags: ["cheat"],
      detail: "radius used to raise/lower corners in nearby areas when raising/lowering corners.",
      type: "number",
   },
   {
      label: "nav_curve_alt",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_curve_iter",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_curve_lock",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_curve_max_step",
      value: "10",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_curve_set",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_curve_step",
      value: "0.02",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_debug_blocked",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_delete",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Deletes the currently highlighted Area.",
      type: "identifier",
   },
   {
      label: "nav_delete_all_hull",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Deletes all areas with given hull category.",
      type: "identifier",
   },
   {
      label: "nav_delete_marked",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Deletes the currently marked Area (if any).",
      type: "identifier",
   },
   {
      label: "nav_disconnect",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas.",
      type: "identifier",
   },
   {
      label: "nav_draw_area_connections",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_filled",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_ground",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_hull_support",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_ids",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_inset_margin",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_draw_area_should_be_destroyed",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_split_by_nav_link_mgr",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_split_by_obstacle_mgr",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_area_ztest",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_attribute_dynamic",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Draw all nav areas with this dynamic attribute",
      type: "number",
   },
   {
      label: "nav_draw_attribute_game",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Draw all nav areas with this game attribute",
      type: "number",
   },
   {
      label: "nav_draw_blocked",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_blocked_connections",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_connected_area_radius",
      value: "1000",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_draw_dangerareas",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_externally_created",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_hidingspots",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_jump_links",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_limit",
      value: "300",
      flags: ["sv", "cheat"],
      detail: "The maximum number of areas to draw in edit mode",
      type: "number",
   },
   {
      label: "nav_draw_link_alignment",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_links",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_markup",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_markup_offset",
      value: "4",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_draw_mesh",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_mesh_grid",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Draw the mesh's spatial grid structure around the edit cursor position.",
      type: "boolean",
   },
   {
      label: "nav_draw_mesh_offset",
      value: "1",
      flags: ["sv", "cheat"],
      detail: "Vertical offset for drawing the mesh (useful for flat planes where the mesh is often a fixed offset from the physical ground",
      type: "number",
   },
   {
      label: "nav_draw_space_cells",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_space_fly",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_space_neighbors",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_space_portals",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_space_radius",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_draw_space_swim",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_draw_vertex_normal",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_edit",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.",
      type: "number",
   },
   {
      label: "nav_edit_validate",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Validate navmesh structures.",
      type: "boolean",
   },
   {
      label: "nav_end_deselecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Stop continuously removing from the selected set.",
      type: "identifier",
   },
   {
      label: "nav_end_drag_deselecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Stop dragging a selection area.",
      type: "identifier",
   },
   {
      label: "nav_end_drag_selecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Stop dragging a selection area.",
      type: "identifier",
   },
   {
      label: "nav_end_selecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Stop continuously adding to the selected set.",
      type: "identifier",
   },
   {
      label: "nav_gen_add_jumps",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_agent_radius_buffer",
      value: "0.75",
      flags: ["cheat"],
      detail: "Buffer to add to agent radius before passing to nav gen",
      type: "number",
   },
   {
      label: "nav_gen_clip_polys_to_clearance",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_clip_polys_to_clearance_debug",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_connect_allow_multiple",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_connect_angle",
      value: "0.75",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_connect_angle_ignore_z",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_connect_dist_a",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_connect_dist_b",
      value: "1.5",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_connect_dist_z_mult",
      value: "0.5",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_connect_overlap",
      value: "0.5",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_degen_limit",
      value: "0.001",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_false",
      value: "false",
      flags: ["cheat"],
      detail: "Always false",
      type: "boolean",
   },
   {
      label: "nav_gen_island_removal",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_island_removal_all_hulls",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_join_nonzup",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_jump_connection_min_overlap_ratio",
      value: "0.1",
      flags: ["cheat"],
      detail: "Minimum edge overlap required for jump connection consideration as a percentage of agent radius",
      type: "number",
   },
   {
      label: "nav_gen_markup_split_expand",
      value: "2",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_markup_split_tol_base",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_markup_split_tol_nonav",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_markup_split_tol_nonentity",
      value: "8",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_match_ground",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_max_bottleneck_width",
      value: "128",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_max_bottleneck_width_do_clip",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_max_edge_len",
      value: "512",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_max_edge_len_do_clip",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_max_edge_len_split_tol",
      value: "24",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_opt_to_quads",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_opt_to_quads_angle_limit",
      value: "8",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_opt_to_quads_num_steps",
      value: "6",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_opt_to_quads_planar_deviation_limit",
      value: "4",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_opt_to_quads_se_limit_end",
      value: "0.1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_opt_to_quads_se_limit_start",
      value: "0.000010",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_opt_to_quads_weld_limit_end",
      value: "0.01",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_opt_to_quads_weld_limit_start",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_remove_vertical_polys",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_split_boundary_polys",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_split_multi_connection_polys",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_gen_split_multi_connection_polys_tol",
      value: "0.01",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_gen_true",
      value: "true",
      flags: ["cheat"],
      detail: "Always true",
      type: "boolean",
   },
   {
      label: "nav_gen_vertical_limit",
      value: "88",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_genrt_debug",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_genrt_no_splice",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_genrt_no_split",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_genrt_step",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_lower_drag_volume_max",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Lower the top of the drag select volume.",
      type: "identifier",
   },
   {
      label: "nav_lower_drag_volume_min",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Lower the bottom of the drag select volume.",
      type: "identifier",
   },
   {
      label: "nav_mark",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.",
      type: "identifier",
   },
   {
      label: "nav_mark_attribute",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Set nav attribute for all areas in the selected set.",
      type: "identifier",
   },
   {
      label: "nav_max_view_distance",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)",
      type: "number",
   },
   {
      label: "nav_max_vis_delta_list_length",
      value: "64",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_obstacle_genrt",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_obstacle_validate",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_obstruction_draw",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_obstruction_draw_change",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_obstruction_draw_dist",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_obstruction_draw_island",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_obstruction_draw_island_hull",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_obstruction_draw_movefail_blocking",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_debug",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_debug_compute_with_open_goal",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_path_draw_areas",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_arrow",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_climb_segments",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_connected_areas",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_ground_segments",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_jump_segments",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_ladder_segments",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_link_segments",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_draw_tick",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_path_fixup_climb_up_segments",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_fixup_gap_segments",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_jump_process_debug",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_optimize",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_optimize_portals",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_optimizer_debug",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_path_record_draw_last_fail",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_path_record_enable",
      value: "1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_pathfind_debug_log",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_pathfind_draw",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_pathfind_draw_blocked",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_pathfind_draw_costs",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_pathfind_draw_fail",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_pathfind_draw_total_costs",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_pathfind_inadmissable_heuristic_factor",
      value: "1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_potentially_visible_dot_tolerance",
      value: "0.98",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_precise",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggles the 'dont avoid obstacles' flag used by the AI system.",
      type: "identifier",
   },
   {
      label: "nav_raise_drag_volume_max",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Raise the top of the drag select volume.",
      type: "identifier",
   },
   {
      label: "nav_raise_drag_volume_min",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Raise the bottom of the drag select volume.",
      type: "identifier",
   },
   {
      label: "nav_recall_selected_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Re-selects the stored selected set.",
      type: "identifier",
   },
   {
      label: "nav_remove_from_selected_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Remove current area from the selected set.",
      type: "identifier",
   },
   {
      label: "nav_select_allow_blocked",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "When selecting an area under nav_edit, allow area marked as blocked.",
      type: "boolean",
   },
   {
      label: "nav_select_area_id",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "Select nav area with matching ID.",
      type: "number",
   },
   {
      label: "nav_select_block_id",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "Select nav space block with matching ID.",
      type: "number",
   },
   {
      label: "nav_select_hull",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Restrict area selection to areas that can support a hull of the given category",
      type: "number",
   },
   {
      label: "nav_select_radius",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Adds all areas in a radius to the selection set",
      type: "identifier",
   },
   {
      label: "nav_select_with_attribute",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Selects areas with the given attribute.",
      type: "identifier",
   },
   {
      label: "nav_show_area_connections",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Show connections to selected area when true",
      type: "boolean",
   },
   {
      label: "nav_show_area_info_font",
      value: "Consolas",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "nav_show_area_info_font_size",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_show_area_info_font_voffset",
      value: "-11",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_show_area_verts",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Show area vertex positions",
      type: "boolean",
   },
   {
      label: "nav_show_area_water_info",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_show_potentially_visible",
      value: "0",
      flags: ["cheat"],
      detail: "Show areas that are potentially visible from the current nav area",
      type: "number",
   },
   {
      label: "nav_smooth_calc_z",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_smooth_constrain_results",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_smooth_constrain_results_relax",
      value: "0.006",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_constrain_spring",
      value: "2",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_constrain_spring_relax",
      value: "0.01",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_draw_accel",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_draw_boundary",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_draw_calc",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_smooth_draw_constraint_spline",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_smooth_draw_constraint_spring",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_draw_speed",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_enable",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_smooth_relax",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_smooth_relax_use_timesteps",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_smooth_separating_dist_override",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_const_override",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_factor_deriv",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_factor_dist",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_factor_speed",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_forward_dist_base",
      value: "50",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_forward_dist_time_limit",
      value: "1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_max_dist",
      value: "36",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_tension_max_override",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_timestep_factor_accel",
      value: "100",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_timestep_factor_speed",
      value: "100",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_timestep_max",
      value: "0.5",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_timestep_min",
      value: "0.1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_yaw_rotation_speed",
      value: "50",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_spring_yaw_threshold",
      value: "20",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_smooth_use_opt",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_space_select_dist",
      value: "200",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_split",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "To split an Area into two, align the split line using your cursor and invoke the split command.",
      type: "identifier",
   },
   {
      label: "nav_split_place_on_ground",
      value: "false",
      flags: ["cheat"],
      detail: "If true, nav areas will be placed flush with the ground when split.",
      type: "boolean",
   },
   {
      label: "nav_split_show_line",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Show the free split line.",
      type: "boolean",
   },
   {
      label: "nav_store_selected_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Stores the current selected set for later retrieval.",
      type: "identifier",
   },
   {
      label: "nav_test_bfs_lattice_dist_0",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_bfs_lattice_dist_1",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_bfs_lattice_dist_2",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_bfs_lattice_hex",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Demonstrates searching hexagonal lattice over nav mesh.",
      type: "boolean",
   },
   {
      label: "nav_test_bfs_lattice_mark",
      value: "2",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_bfs_lattice_simple",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_bfs_lattice_spacing_0",
      value: "24",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_bfs_lattice_spacing_1",
      value: "48",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_bfs_lattice_spacing_2",
      value: "96",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_bfs_simple",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_boundary_zone_circle",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_boundary_zone_force",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_boundary_zone_grid_dim",
      value: "90",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_boundary_zone_path",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_boundary_zone_rays",
      value: "100",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_boundary_zone_rays_margin",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_boundary_zone_rays_random",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_curve_opt",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_detour",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_find_nearest",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      type: "boolean",
   },
   {
      label: "nav_test_find_nearest_clear",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      type: "boolean",
   },
   {
      label: "nav_test_find_random_connected",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Demonstrates finding random points that are connected in the nav mesh to the start point.",
      type: "boolean",
   },
   {
      label: "nav_test_find_random_connected_dist_max",
      value: "1000",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_find_random_connected_dist_min",
      value: "100",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_find_z",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_force_npc_repath",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_genrt",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_genrt_place",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_level_hull",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Find entities that intrude into the nav mesh.  List those entities in console output, and display bounding boxes around them for a while.",
      type: "identifier",
   },
   {
      label: "nav_test_level_hull_move",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "nav_test_multi_connection",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_npc_area",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_npc_collision",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_npc_collision_range",
      value: "250",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_npc_collision_show_geometry",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_path",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Calculate and draw a path from player/camera position to the test position.",
      type: "boolean",
   },
   {
      label: "nav_test_path_expansion_search",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Extend nav_test_path by doing an expansion search on that path.  Convar value defines dist.",
      type: "number",
   },
   {
      label: "nav_test_path_lock_goal",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Lock the pathfinding goal to the current intersection point.",
      type: "boolean",
   },
   {
      label: "nav_test_path_lock_start",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Lock the pathfinding start to the current intersection point.",
      type: "boolean",
   },
   {
      label: "nav_test_path_move",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_path_opt",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Enable path optimization for nav_edit_path paths.",
      type: "boolean",
   },
   {
      label: "nav_test_path_opt_transitions",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_path_return",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Calculate a return path from cursor position to the path calculated by nav_test_path.",
      type: "boolean",
   },
   {
      label: "nav_test_path_space",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Should nav_test_path test 3d navigation?  1 = space to space, 2 = multi-modal space/ground",
      type: "number",
   },
   {
      label: "nav_test_path_space_fly",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Test flight paths",
      type: "boolean",
   },
   {
      label: "nav_test_path_space_swim",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Test swim paths",
      type: "boolean",
   },
   {
      label: "nav_test_ray_space",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_rays",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_smooth",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_smooth_extern_push",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_smooth_in_speed",
      value: "120",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_smooth_in_yaw",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_smooth_path_speed",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_smooth_separating_dist",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_smooth_spring_const",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_smooth_spring_tension_max",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_spline",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_split_obstacle",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_split_obstacle_dirty",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_split_obstacle_leave",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_test_split_obstacle_size",
      value: "30",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "nav_test_split_obstacle_update_pos",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "nav_toggle_deselecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Start or stop continuously removing from the selected set.",
      type: "identifier",
   },
   {
      label: "nav_toggle_in_selected_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Remove current area from the selected set.",
      type: "identifier",
   },
   {
      label: "nav_toggle_selected_set",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggles all areas into/out of the selected set.",
      type: "identifier",
   },
   {
      label: "nav_toggle_selecting",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Start or stop continuously adding to the selected set.",
      type: "identifier",
   },
   {
      label: "nav_unmark",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Clears the marked Area or Ladder.",
      type: "identifier",
   },
   {
      label: "nav_validate",
      value: "0",
      flags: ["cheat"],
      detail: "Level of validation for nav system.  Higher will be slower.",
      type: "number",
   },
   {
      label: "nav_volume_debug",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Draw or print debug information about nav volume queries.",
      type: "number",
   },
   {
      label: "navspace_create_water_smooth_connections",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "navspace_create_water_transition_connections",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "navspace_debug_pathfind",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "navspace_debug_stringpull",
      value: "1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "navspace_debug_trace",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "navspace_debug_transition_calc",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "navspace_draw_water_changes",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Draw changes in water volumes",
      type: "number",
   },
   {
      label: "navspace_path_use_water_level_locator",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "net_allow_multicast",
      value: "true",
      flags: ["a", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "net_client_steamdatagram_enable_override",
      value: "0",
      flags: ["cl", "release"],
      detail: "0: Use connect method requested by GC.  >0: Always use SDR if possible.  <0: Always use direct UDP if possible",
      type: "number",
   },
   {
      label: "net_fakelag",
      value: "cmd",
      flags: ["release"],
      detail: "Shorthand for 'net_option FakePacketLag_Recv'",
      type: "identifier",
   },
   {
      label: "net_listallmessages",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all registered net messages",
      type: "identifier",
   },
   {
      label: "net_maxroutable",
      value: "1200",
      flags: ["a", "user"],
      detail: "Requested max packet size before packets are 'split'.",
      type: "number",
   },
   {
      label: "net_messageinfo",
      value: "cmd",
      flags: ["cheat"],
      detail: "Display info about a message (by classname or id)",
      type: "identifier",
   },
   {
      label: "net_option",
      value: "cmd",
      flags: ["release"],
      detail: "Get or set SteamNetworkingSockets options such as fake packet lag and loss",
      type: "identifier",
   },
   {
      label: "net_public_adr",
      value: "0",
      flags: ["release"],
      detail: "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: ('x.x.x.x' )",
      type: "number",
   },
   {
      label: "net_showudp",
      value: "false",
      flags: ["release"],
      detail: "Dump UDP packets summary to console",
      type: "boolean",
   },
   {
      label: "net_showudp_remoteonly",
      value: "true",
      flags: ["release"],
      detail: "Dump non-loopback udp only",
      type: "boolean",
   },
   {
      label: "net_validatemessages",
      value: "cmd",
      flags: ["cheat"],
      detail: "Activates/deactivates net message validation",
      type: "identifier",
   },
   {
      label: "nextdemo",
      value: "cmd",
      flags: ["release"],
      detail: "Play next demo in sequence.",
      type: "identifier",
   },
   {
      label: "nextlevel",
      value: "0",
      flags: ["sv", "nf", "release"],
      detail: "If set to a valid map name, will trigger a changelevel to the specified map at the end of the round",
      type: "number",
   },
   {
      label: "nextmap_print_enabled",
      value: "false",
      flags: ["sv", "release"],
      detail: "When enabled prints next map to clients",
      type: "boolean",
   },
   {
      label: "nextmode",
      value: "0",
      flags: ["sv", "nf", "rep", "release"],
      detail: "Sets the game mode to be played when the next level loads",
      type: "number",
   },
   {
      label: "noclip",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable",
      type: "identifier",
   },
   {
      label: "noclip_fixup",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "notarget",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggle. Player becomes hidden to NPCs.",
      type: "identifier",
   },
   {
      label: "option_duck_method",
      value: "false",
      flags: ["cl", "a", "user", "per_user"],
      detail: "Input toggle control",
      type: "boolean",
   },
   {
      label: "option_speed_method",
      value: "false",
      flags: ["cl", "a", "user", "per_user"],
      detail: "Input toggle control",
      type: "boolean",
   },
   {
      label: "panorama_debugger_theme",
      value: "Light",
      flags: ["cl", "a"],
      detail: "",
      type: "identifier",
   },
   {
      label: "panorama_focus_world_panels",
      value: "false",
      flags: ["cl", "a"],
      detail: "when set request key focus when a world panel is enabled",
      type: "boolean",
   },
   {
      label: "particle_test_attach_attachment",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Attachment index for attachment mode",
      type: "number",
   },
   {
      label: "particle_test_attach_mode",
      value: "follow_attachment",
      flags: ["sv", "cheat"],
      detail: "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'",
      type: "identifier",
   },
   {
      label: "particle_test_create",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Creates the named particle system where the player is looking.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "particle_test_destroy",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Destroys all particle systems matching the specified name.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "particle_test_file",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "Name of the particle system to dynamically spawn",
      type: "number",
   },
   {
      label: "particle_test_start",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Dispatches the test particle system with the parameters specified in particle_test_file,  particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "particle_test_stop",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Stops all particle systems on the selected entities.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "particles_multiplier",
      value: "1",
      flags: ["cheat"],
      detail: "Multiply # of rendered particles by this for perf testing",
      type: "number",
   },
   {
      label: "password",
      value: "0",
      flags: ["a", "norecord", "server_cant_query"],
      detail: "Current server access password",
      type: "number",
   },
   {
      label: "pause",
      value: "cmd",
      flags: ["release"],
      detail: "Toggle the server pause state.",
      type: "identifier",
   },
   {
      label: "phys_debug_showdefaultmaterial",
      value: "false",
      flags: ["cheat"],
      detail: "If enabled, surfaces with default material are highlighted in physics debug geometry.",
      type: "boolean",
   },
   {
      label: "phys_dynamic_scaling",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "phys_expensive_shape_threshold",
      value: "6",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "phys_highlight_expensive_objects",
      value: "false",
      flags: ["cheat"],
      detail: "Highlight expensive physics objects",
      type: "boolean",
   },
   {
      label: "phys_highlight_expensive_objects_strength",
      value: "0.02",
      flags: ["cheat"],
      detail: "Highlight expensive physics objects strength",
      type: "number",
   },
   {
      label: "phys_joint_teleport",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Teleport joint anchors if connected to world",
      type: "boolean",
   },
   {
      label: "phys_length_damping_ratio",
      value: "2",
      flags: ["sv", "cheat"],
      detail: "Spring damping ratio for length constraint",
      type: "number",
   },
   {
      label: "phys_length_frequency",
      value: "5",
      flags: ["sv", "cheat"],
      detail: "Spring stiffness for length constraint",
      type: "number",
   },
   {
      label: "phys_mark_debug",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Mark object for debug",
      type: "identifier",
   },
   {
      label: "phys_shoot",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Shoots a phys object.",
      type: "identifier",
   },
   {
      label: "phys_use_block_solver",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Use block solving for constraint entities",
      type: "boolean",
   },
   {
      label: "phys_visualize_traces",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "pixelvis_debug",
      value: "cmd",
      flags: ["cheat"],
      detail: "Dump debug info",
      type: "identifier",
   },
   {
      label: "plant_bomb",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Plant a bomb where the player is looking.",
      type: "identifier",
   },
   {
      label: "play",
      value: "cmd",
      flags: ["server_can_execute"],
      detail: "Play a sound.",
      type: "identifier",
   },
   {
      label: "playdemo",
      value: "cmd",
      flags: ["release"],
      detail: "Play a recorded demo file (.dem ).",
      type: "identifier",
   },
   {
      label: "player0_using_joystick",
      value: "false",
      flags: ["a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "player_botdifflast_s",
      value: "2",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "player_competitive_maplist_2v2_10_0_C8D88986",
      value: "mg_de_overpass,mg_de_vertigo,mg_de_inferno,mg_de_nuke",
      flags: ["cl", "a"],
      detail: "",
      type: "identifier",
   },
   {
      label: "player_competitive_maplist_8_10_0_5069769",
      value: "mg_de_mirage,mg_de_overpass,mg_de_vertigo,mg_de_ancient,mg_de_inferno,mg_de_nuke,mg_de_anubis,mg_de_dust2,mg_cs_office",
      flags: ["cl", "a"],
      detail: "",
      type: "identifier",
   },
   {
      label: "player_debug_off_nav",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "player_debug_print_damage",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "When true, print amount and type of all damage received by player to console.",
      type: "boolean",
   },
   {
      label: "player_nevershow_communityservermessage",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "player_ping",
      value: "cmd",
      flags: ["sv"],
      detail: "Creates a ping notification where the player is looking.",
      type: "identifier",
   },
   {
      label: "player_ping_token_cooldown",
      value: "20",
      flags: ["sv", "cheat", "release"],
      detail: "Cooldown for how long it takes for a player's ping token to refresh allowing them to ping again (they get 5 tokens).",
      type: "number",
   },
   {
      label: "player_survival_list_10_0_303",
      value: "mg_dz_blacksite,mg_dz_sirocco,mg_dz_vineyard,mg_dz_ember",
      flags: ["cl", "a"],
      detail: "",
      type: "identifier",
   },
   {
      label: "player_teamplayedlast",
      value: "3",
      flags: ["cl", "a", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "player_use_radius",
      value: "80",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "player_wargames_list2_10_0_0",
      value: "0",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "playsoundscape",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Forces a soundscape to play",
      type: "identifier",
   },
   {
      label: "print_mapgroup",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Prints the current mapgroup and the contained maps",
      type: "identifier",
   },
   {
      label: "print_mapgroup_sv",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Prints the current mapgroup and the contained maps",
      type: "identifier",
   },
   {
      label: "prop_debug",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
      type: "identifier",
   },
   {
      label: "prop_debug_collision",
      value: "false",
      flags: ["sv", "cheat"],
      detail:
         "Highlights props based on their collision group: COLLISION_GROUP_PROPS(white), COLLISION_GROUP_INTERACTIVE_DEBRIS(green), COLLISION_GROUP_DEBRIS and will return to COLLISION_GROUP_INTERACTIVE_DEBRIS on sleeping(bright red), COLLISION_GROUP_DEBRIS permanently (dark red), COLLISION_GROUP_DEBRIS(blue), OTHER(grey)",
      type: "boolean",
   },
   {
      label: "prop_dynamic_create",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Creates a dynamic prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}",
      type: "identifier",
   },
   {
      label: "prop_physics_create",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Creates a physics prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}",
      type: "identifier",
   },
   {
      label: "pvs_debugentity",
      value: "-1",
      flags: ["sv", "release"],
      detail: "Verbose spew for this entity when doing IsInPVS computation.",
      type: "number",
   },
   {
      label: "pvs_flowtype",
      value: "0",
      flags: ["sv", "release"],
      detail: "Flow through spawn groups for vis (0 == default, 1 == always visible, 2 == never visible.",
      type: "number",
   },
   {
      label: "pwatchent",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "Entity to watch for prediction system changes.",
      type: "number",
   },
   {
      label: "pwatchvar",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Entity variable to watch in prediction system for changes.",
      type: "number",
   },
   {
      label: "quit",
      value: "cmd",
      flags: ["release", "vconsole_set_focus"],
      detail: "Quit the game",
      type: "identifier",
   },
   {
      label: "+quickbuyradial",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-quickbuyradial",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "+quickgrenaderadial",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-quickgrenaderadial",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "+quickinv",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-quickinv",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "r_AirboatViewDampenDamp",
      value: "1",
      flags: ["sv", "cl", "nf", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_AirboatViewDampenFreq",
      value: "7",
      flags: ["sv", "cl", "nf", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_AirboatViewZHeight",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_aoproxy_debug",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_aoproxy_show",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_cubemap_normalization",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_debug_reflection_rects",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_decal_debug",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_depth_prepass",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_depth_prepass_cull_threshold",
      value: "60",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_depth_prepass_reflections_large",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_depth_prepass_reflections_small",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_depth_prepass_skybox_alpha_tested",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_depth_prepass_small_cull_threshold",
      value: "10",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_depth_prepass_viewmodel",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_directional_lightmaps",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_effects_bloom",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_effects_bloom_when_smoked",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_enable_glows",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_enable_high_precision_lighting",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_enable_tonemapping",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_enable_translucent_screen_space",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_mboit",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_mboit_bias",
      value: "0.000005",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_mboit_debug",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_mboit_overestimation",
      value: "0.01",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_mboit_use_4_moments",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_mixed_resolution_color_slices",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_mixed_resolution_particles_minmax",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_mixed_resolution_particles_scale",
      value: "2",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_no_shader_resolve",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_override_global_time",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_postprocess_enable",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_readonly_depth_stencil_enable",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_reconstruct_normals",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_reconstruct_normals_method",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_reflection_min_far_plane",
      value: "5000",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_decals",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_render_decals_on_translucent",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_render_dither_scale",
      value: "1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_dynamic_objects",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_render_inferno_decals",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_render_opaque",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_render_overlays",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_render_post_bloom",
      value: "1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_post_bloom_strength",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_post_colorcorrection",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_post_film_grain",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_post_local_contrast",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_render_post_mirror_horizontal",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_post_mirror_vertical",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_render_translucent",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_shadows_debug",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_csgo_volume_mboit_optimization",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_water_effects",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_csgo_water_refraction",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_cubemap_debug_colors",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_debug_particle_shadows",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_debug_precipitation",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Show precipitation volumes",
      type: "boolean",
   },
   {
      label: "r_directlighting",
      value: "true",
      flags: ["cheat"],
      detail: "Set to use direct lighting",
      type: "boolean",
   },
   {
      label: "r_dof_override",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_dof_override_far_blurry",
      value: "2000",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_dof_override_far_crisp",
      value: "180",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_dof_override_near_blurry",
      value: "-100",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_dof_override_near_crisp",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_dof_override_tilt_to_ground",
      value: "0.5",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_dopixelvisibility",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_draw_first_tri_only",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_draw_instances",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_draw_particle_children_with_parents",
      value: "-1",
      flags: ["cheat"],
      detail: "Draw particle children with parents (-1=use gameinfo, 0=no, 1=yes)",
      type: "number",
   },
   {
      label: "r_drawblankworld",
      value: "false",
      flags: ["cheat"],
      detail: "Render blank instead of the game world",
      type: "boolean",
   },
   {
      label: "r_drawchickens",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Render chickens",
      type: "boolean",
   },
   {
      label: "r_drawcsplayers",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Render CS players",
      type: "boolean",
   },
   {
      label: "r_drawdecals",
      value: "true",
      flags: ["cheat"],
      detail: "Set to render decals",
      type: "boolean",
   },
   {
      label: "r_drawdevvisualizers",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Render dev visualizers",
      type: "boolean",
   },
   {
      label: "r_drawpanorama",
      value: "true",
      flags: ["cheat"],
      detail: "Enable the rendering of panorama UI",
      type: "boolean",
   },
   {
      label: "r_drawparticles",
      value: "true",
      flags: ["cheat"],
      detail: "Enable/disable particle rendering",
      type: "boolean",
   },
   {
      label: "r_drawropes",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_drawskybox",
      value: "true",
      flags: ["cheat"],
      detail: "Render the 2d skybox.",
      type: "boolean",
   },
   {
      label: "r_drawsprites",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_drawtracers",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_drawviewmodel",
      value: "true",
      flags: ["cl", "cheat"],
      detail: "Render view model",
      type: "boolean",
   },
   {
      label: "r_drawworld",
      value: "true",
      flags: ["cheat"],
      detail: "Render the world.",
      type: "boolean",
   },
   {
      label: "r_extra_render_frames",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_fallback_texture_lod_scale",
      value: "2",
      flags: ["cheat"],
      detail: "Scale factor for requested texture size (texture streaming) - used for geo that doesn't have a precomputed UV density measure",
      type: "number",
   },
   {
      label: "r_farz",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "Override the far clipping plane. -1 means to use the value in env_fog_controller.",
      type: "number",
   },
   {
      label: "r_flashlightambient",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightbacktraceoffset",
      value: "0.4",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightbrightness",
      value: "1",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightconstant",
      value: "0",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightfar",
      value: "1500",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightfov",
      value: "53",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightladderdist",
      value: "40",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightlinear",
      value: "100",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightlockposition",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_flashlightmuzzleflashfov",
      value: "120",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightnear",
      value: "4",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightnearoffsetscale",
      value: "1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightoffsetforward",
      value: "0",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightoffsetright",
      value: "5",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightoffsetup",
      value: "-5",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightquadratic",
      value: "0",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightshadowatten",
      value: "0.35",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlighttracedistcutoff",
      value: "128",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlighttracedistwatercutoff",
      value: "80",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_flashlightvisualizetrace",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_force_no_present",
      value: "false",
      flags: ["cheat"],
      detail: "Force the render device to not present frames.",
      type: "boolean",
   },
   {
      label: "r_force_zprepass",
      value: "-1",
      flags: ["cheat"],
      detail: "0: Force z prepass off. 1: Force on. -1: Don't force",
      type: "number",
   },
   {
      label: "r_freezeparticles",
      value: "false",
      flags: ["cheat"],
      detail: "Pause particle simulation",
      type: "boolean",
   },
   {
      label: "r_fullscreen_gamma",
      value: "2.2",
      flags: ["a"],
      detail: "Screen Gamma (only in fullscreen modes)",
      type: "number",
   },
   {
      label: "r_indirectlighting",
      value: "true",
      flags: ["cheat"],
      detail: "Set to use indirect lighting",
      type: "boolean",
   },
   {
      label: "r_JeepViewDampenDamp",
      value: "1",
      flags: ["sv", "cl", "nf", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_JeepViewDampenFreq",
      value: "7",
      flags: ["sv", "cl", "nf", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_JeepViewZHeight",
      value: "10",
      flags: ["sv", "cl", "nf", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_light_probe_volume_debug_colors",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_light_probe_volume_debug_grid",
      value: "false",
      flags: ["cheat"],
      detail: "Show LPV debug grid, 0: off, 1: closest only 2: closest and keep 3: all",
      type: "boolean",
   },
   {
      label: "r_light_probe_volume_debug_grid_albedo",
      value: "128 128 128",
      flags: ["cheat"],
      detail: "albedo for LPV debug grid",
      type: "number",
   },
   {
      label: "r_light_probe_volume_debug_grid_bbox",
      value: "true",
      flags: ["cheat"],
      detail: "Show LPV bounding box when debug grid is on, 0: off, 1: on",
      type: "boolean",
   },
   {
      label: "r_light_probe_volume_debug_grid_metalness",
      value: "0",
      flags: ["cheat"],
      detail: "metalness for LPV debug grid",
      type: "number",
   },
   {
      label: "r_light_probe_volume_debug_grid_prim",
      value: "0",
      flags: ["cheat"],
      detail: "0: spheres, 1: cubes",
      type: "number",
   },
   {
      label: "r_light_probe_volume_debug_grid_roughness",
      value: "0.5",
      flags: ["cheat"],
      detail: "roughness for LPV debug grid",
      type: "number",
   },
   {
      label: "r_light_probe_volume_debug_grid_samplesize",
      value: "4",
      flags: ["cheat"],
      detail: "sphere radius (world) for LPV debug grid",
      type: "number",
   },
   {
      label: "r_lightBinnerFarPlane",
      value: "4096",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_lightmap_set",
      value: "lightmaps",
      flags: ["cheat"],
      detail: "Lightmap set to use, only works on map load",
      type: "identifier",
   },
   {
      label: "r_mapextents",
      value: "16384",
      flags: ["cl", "cheat"],
      detail: "Set the max dimension for the map.  This determines the far clipping plane",
      type: "number",
   },
   {
      label: "r_morphing_enabled",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_muzzleflashbrightness",
      value: "0.4",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_muzzleflashlinear",
      value: "0.05",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_nearz",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "Override the near clipping plane. -1 means use the default.",
      type: "number",
   },
   {
      label: "r_particle_max_draw_distance",
      value: "1000000.000000",
      flags: ["cheat"],
      detail: "The maximum distance that particles will render",
      type: "number",
   },
   {
      label: "r_pixelvisibility_partial",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_pixelvisibility_spew",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_player_visibility_mode",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "r_refraction_clip_plane_adjust",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_render_world_node_bounds",
      value: "false",
      flags: ["cheat"],
      detail: "Render world node bounds",
      type: "boolean",
   },
   {
      label: "r_rendersun",
      value: "true",
      flags: ["cheat"],
      detail: "Render sun lighting",
      type: "boolean",
   },
   {
      label: "r_replay_post_effect",
      value: "-1",
      flags: ["cl", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "r_shadows",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_show_build_info",
      value: "true",
      flags: ["cl", "a", "release"],
      detail: "Build information. Leave this enabled when submitting bug screenshots and videos, please!",
      type: "boolean",
   },
   {
      label: "r_show_hipoly_draw_calls",
      value: "0",
      flags: ["cheat"],
      detail: "Transparent wireframe overlay for draw calls with triangle count higher than specified number",
      type: "number",
   },
   {
      label: "r_showdebugoverlays",
      value: "false",
      flags: ["cheat"],
      detail: "Set to render debug overlays",
      type: "boolean",
   },
   {
      label: "r_showdebugrendertarget",
      value: "false",
      flags: ["cheat"],
      detail: "Set the debug render target to show, 0 == disable",
      type: "boolean",
   },
   {
      label: "r_showsceneobjectbounds",
      value: "false",
      flags: ["cheat"],
      detail: "Show scenesystem object bounding boxes",
      type: "boolean",
   },
   {
      label: "r_showsunshadowdebugrendertargets",
      value: "false",
      flags: ["cheat"],
      detail: "Set to render sun shadow render targets",
      type: "boolean",
   },
   {
      label: "r_showsunshadowdebugsplitvis",
      value: "false",
      flags: ["cheat"],
      detail: "Set to render sun shadow split visibility debugger",
      type: "boolean",
   },
   {
      label: "r_size_cull_threshold_shadow",
      value: "0.2",
      flags: ["cheat"],
      detail: "Threshold of sun shadow map size percentage below which objects get culled",
      type: "number",
   },
   {
      label: "r_skinning_enabled",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "r_stereo_multiview_instancing",
      value: "false",
      flags: ["cheat"],
      detail: "Use multiview instancing for stereo rendering.",
      type: "boolean",
   },
   {
      label: "r_texture_lod_scale",
      value: "1",
      flags: ["cheat"],
      detail: "Scale factor for requested texture size (texture streaming)",
      type: "number",
   },
   {
      label: "r_translucent",
      value: "true",
      flags: ["cheat"],
      detail: "Enable rendering of translucent geometry",
      type: "boolean",
   },
   {
      label: "r_worldlod",
      value: "true",
      flags: ["cheat"],
      detail: "Set to enable world LOD",
      type: "boolean",
   },
   {
      label: "r_zprepass_normals",
      value: "false",
      flags: ["cheat"],
      detail: "0: Use normals reconstructed from depth. 1: Output correct normals in z prepass.",
      type: "boolean",
   },
   {
      label: "radarvisdistance",
      value: "1000",
      flags: ["sv", "cheat"],
      detail: "at this distance and beyond you need to be point right at someone to see them",
      type: "number",
   },
   {
      label: "radarvismaxdot",
      value: "0.996",
      flags: ["sv", "cheat"],
      detail: "how closely you have to point at someone to see them beyond max distance",
      type: "number",
   },
   {
      label: "radarvismethod",
      value: "1",
      flags: ["sv", "cheat"],
      detail: "0 for traditional method, 1 for more realistic method",
      type: "number",
   },
   {
      label: "radarvispow",
      value: "0.4",
      flags: ["sv", "cheat"],
      detail: "the degree to which you can point away from a target, and still see them on radar.",
      type: "number",
   },
   {
      label: "+radialradio",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-radialradio",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "+radialradio2",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-radialradio2",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "+radialradio3",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-radialradio3",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "radio",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Opens a radio menu",
      type: "identifier",
   },
   {
      label: "radio1",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Opens a radio menu",
      type: "identifier",
   },
   {
      label: "radio2",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Opens a radio menu",
      type: "identifier",
   },
   {
      label: "radio3",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Opens a radio menu",
      type: "identifier",
   },
   {
      label: "ragdoll_friction_scale",
      value: "0.6",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "ragdoll_gravity_scale",
      value: "1",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "ragdoll_lru_debug_removal",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "ragdoll_lru_min_age",
      value: "10",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "rangefinder",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Measures distance along a ray",
      type: "identifier",
   },
   {
      label: "rate",
      value: "786432",
      flags: ["a", "user"],
      detail: "Min bytes/sec the host can receive data",
      type: "number",
   },
   {
      label: "rcon",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Issue an rcon command.",
      type: "identifier",
   },
   {
      label: "rcon_address",
      value: "0",
      flags: ["norecord", "release", "server_cant_query"],
      detail: "Address of remote server if sending unconnected rcon commands (format x.x.x.x:p)",
      type: "number",
   },
   {
      label: "rcon_connected_clients_allow",
      value: "true",
      flags: ["rep", "release"],
      detail: "Allow clients to use rcon commands on server.",
      type: "boolean",
   },
   {
      label: "rcon_password",
      value: "0",
      flags: ["norecord", "release", "server_cant_query"],
      detail: "remote console password.",
      type: "number",
   },
   {
      label: "rebuy",
      value: "cmd",
      flags: ["cl", "clientcmd_can_execute"],
      detail: "Attempt to repurchase items with the order listed in cl_rebuy",
      type: "identifier",
   },
   {
      label: "recast_mark_overhang",
      value: "true",
      flags: ["rep", "cheat"],
      detail: "Enable/disable overhang detection",
      type: "boolean",
   },
   {
      label: "recast_partitioning",
      value: "0",
      flags: ["rep", "cheat"],
      detail: "0 = watershed, 1 = monotone, 2 = layers",
      type: "number",
   },
   {
      label: "record",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Record a demo.",
      type: "identifier",
   },
   {
      label: "refresh_ui_audio_state",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Restores audio DSP state for the UI.",
      type: "identifier",
   },
   {
      label: "regenerate_weapon_skins",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "reloadgame",
      value: "cmd",
      flags: ["cheat", "vconsole_set_focus"],
      detail: "Reload the most recent saved game.",
      type: "identifier",
   },
   {
      label: "remove_weapon",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Remove a weapon held by the player.  Arguments: <weapon subclass name>",
      type: "identifier",
   },
   {
      label: "repeat_last_console_command",
      value: "cmd",
      flags: ["release"],
      detail: "Repeat last console command.",
      type: "identifier",
   },
   {
      label: "replay_death",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "start hltv replay of last death",
      type: "identifier",
   },
   {
      label: "replay_debug",
      value: "0",
      flags: ["rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "replay_start",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Start GOTV replay: replay_start <delay> [<player name or index>]",
      type: "identifier",
   },
   {
      label: "replay_stop",
      value: "cmd",
      flags: ["sv"],
      detail: "stop hltv replay",
      type: "identifier",
   },
   {
      label: "report_cliententitysim",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "List all clientside simulations and time - will report and turn itself off.",
      type: "boolean",
   },
   {
      label: "report_clientthinklist",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "List all clientside entities thinking and time - will report and turn itself off.",
      type: "boolean",
   },
   {
      label: "reset_gameconvars",
      value: "cmd",
      flags: ["cheat"],
      detail: "Reset game convars to default values",
      type: "identifier",
   },
   {
      label: "respawn_player",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Respawns the player from death!",
      type: "identifier",
   },
   {
      label: "restart",
      value: "cmd",
      flags: ["cheat", "vconsole_set_focus"],
      detail: "Poor man's restart: reload the current map from disk.",
      type: "identifier",
   },
   {
      label: "rr_followup_maxdist",
      value: "1800",
      flags: ["sv", "cheat"],
      detail: "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance.",
      type: "number",
   },
   {
      label: "rr_forceconcept",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "fire a response concept directly at a given character. USAGE: rr_forceconcept <target> <concept> 'criteria1:value1,criteria2:value2,...' criteria values are optional.",
      type: "identifier",
   },
   {
      label: "rr_reloadresponsesystems",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Reload all response system scripts.",
      type: "identifier",
   },
   {
      label: "rr_thenany_score_slop",
      value: "0",
      flags: ["sv", "a", "cheat"],
      detail: "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered.",
      type: "number",
   },
   {
      label: "run_perftest",
      value: "cmd",
      flags: ["cheat", "norecord"],
      detail: "Execute perftest.cfg",
      type: "identifier",
   },
   {
      label: "safezonex",
      value: "1",
      flags: ["cl", "a"],
      detail: "The percentage of the screen width that is considered safe from overscan. Cannot result in a width less than the height.",
      type: "number",
   },
   {
      label: "safezoney",
      value: "1",
      flags: ["cl", "a"],
      detail: "The percentage of the screen height that is considered safe from overscan",
      type: "number",
   },
   {
      label: "save_animgraph_recording",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Saves all active animgraph recordings to disk",
      type: "identifier",
   },
   {
      label: "save_maxarray_spew",
      value: "10",
      flags: ["sv", "release"],
      detail: "Max number of array entries to spew when using SaveRestoreIO spewing.",
      type: "number",
   },
   {
      label: "say",
      value: "cmd",
      flags: ["sv"],
      detail: "Display player message",
      type: "identifier",
   },
   {
      label: "say_team",
      value: "cmd",
      flags: ["sv"],
      detail: "Display player message to team",
      type: "identifier",
   },
   {
      label: "sc_check_world",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_disable_culling_boxes",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_disable_procedural_layer_rendering",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_disable_shadow_fastpath",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_disable_shadow_materials",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_disable_spotlight_shadows",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_disable_world_materials",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_disableThreading",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_dump_lists",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_dumpworld",
      value: "cmd",
      flags: ["cheat"],
      detail: "Dump a list of the objects in a sceneworld (Usage: sc_dumpworld <world_index>)",
      type: "identifier",
   },
   {
      label: "sc_dumpworld3d",
      value: "cmd",
      flags: ["cheat"],
      detail: "Dump the objects in a sceneworld into a 3d geoview buffer (Usage: sc_dumpworld3d <world_index>)",
      type: "identifier",
   },
   {
      label: "sc_extended_stats",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_force_lod_level",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "sc_force_materials_batchable",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_force_translation_in_projection",
      value: "false",
      flags: ["cheat"],
      detail: "If enabled, the camera's translation will be included in the projection matrix.",
      type: "boolean",
   },
   {
      label: "sc_listworlds",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all the active sceneworlds",
      type: "identifier",
   },
   {
      label: "sc_lod_distance_scale_override",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "sc_log_submits",
      value: "false",
      flags: ["cheat"],
      detail: "Log out display list submits from scenesystem",
      type: "boolean",
   },
   {
      label: "sc_only_render_opaque",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_only_render_shadowcasters",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_override_shadow_fade_max_dist",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "sc_override_shadow_fade_min_dist",
      value: "-1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "sc_reject_all_objects",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sc_setclassflags",
      value: "cmd",
      flags: ["cheat"],
      detail: "Low level command to set the flags byte associated with an object class. sc_SetClassFlags <classname> <value>",
      type: "identifier",
   },
   {
      label: "sc_showclasses",
      value: "cmd",
      flags: ["cheat"],
      detail: "List the object class names known by scenesystem",
      type: "identifier",
   },
   {
      label: "sc_skip_traversal",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "scene_playvcd",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Play the given VCD as an instanced scripted scene.",
      type: "identifier",
   },
   {
      label: "screenmessage_show",
      value: "-1",
      flags: ["cheat"],
      detail: "Enable display of console messages on screen. 1 = Enabled, 0 = Disabled, -1 = Enabled if vgui is not present",
      type: "number",
   },
   {
      label: "script_add_debug_filter",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Add a filter to the game debug overlay",
      type: "identifier",
   },
   {
      label: "script_add_watch",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Add a watch to the game debug overlay",
      type: "identifier",
   },
   {
      label: "script_add_watch_pattern",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Add a watch to the game debug overlay",
      type: "identifier",
   },
   {
      label: "script_attach_debugger",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Connect the vscript VM to the script debugger",
      type: "identifier",
   },
   {
      label: "script_clear_watches",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Clear all watches from the game debug overlay",
      type: "identifier",
   },
   {
      label: "script_debug",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Toggle the in-game script debug features",
      type: "identifier",
   },
   {
      label: "script_dump_all",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Dump the state of the VM to the console",
      type: "identifier",
   },
   {
      label: "script_find",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Find a key in the VM",
      type: "identifier",
   },
   {
      label: "script_help",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Output help for script functions",
      type: "identifier",
   },
   {
      label: "script_reload",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Reload scripts",
      type: "identifier",
   },
   {
      label: "script_reload_code",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Execute a vscript file, replacing existing functions with the functions in the run script",
      type: "identifier",
   },
   {
      label: "script_reload_entity_code",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
      type: "identifier",
   },
   {
      label: "script_remove_debug_filter",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Remove a filter from the game debug overlay",
      type: "identifier",
   },
   {
      label: "script_remove_watch",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Remove a watch from the game debug overlay",
      type: "identifier",
   },
   {
      label: "script_remove_watch_pattern",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Remove a watch from the game debug overlay",
      type: "identifier",
   },
   {
      label: "script_resurrect_unreachable",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Use the garbage collector to track down reference cycles",
      type: "identifier",
   },
   {
      label: "script_trace_disable",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Turn off a particular trace output by file or function name",
      type: "identifier",
   },
   {
      label: "script_trace_disable_all",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Turn off all trace output",
      type: "identifier",
   },
   {
      label: "script_trace_disable_key",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Turn off a particular trace output by table/instance",
      type: "identifier",
   },
   {
      label: "script_trace_enable",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Turn on a particular trace output by file or function name",
      type: "identifier",
   },
   {
      label: "script_trace_enable_all",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Turn on all trace output",
      type: "identifier",
   },
   {
      label: "script_trace_enable_key",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Turn on a particular trace output by table/instance",
      type: "identifier",
   },
   {
      label: "sdr",
      value: "cmd",
      flags: ["release"],
      detail: "An old command that has been renamed to 'net_option'",
      type: "identifier",
   },
   {
      label: "sensitivity",
      value: "2.5",
      flags: ["cl", "a", "per_user"],
      detail: "Mouse sensitivity.",
      type: "number",
   },
   {
      label: "server_snd_cast",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
      type: "identifier",
   },
   {
      label: "servercfgfile",
      value: "server.cfg",
      flags: ["sv", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "setang",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).",
      type: "identifier",
   },
   {
      label: "setang_exact",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).",
      type: "identifier",
   },
   {
      label: "setinfo",
      value: "cmd",
      flags: ["clientcmd_can_execute"],
      detail: "Adds a new user info value",
      type: "identifier",
   },
   {
      label: "setmodel",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Changes's player's model",
      type: "identifier",
   },
   {
      label: "setpause",
      value: "cmd",
      flags: ["release"],
      detail: "Set the pause state of the server.",
      type: "identifier",
   },
   {
      label: "setpos",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Move player to specified origin (must have sv_cheats).",
      type: "identifier",
   },
   {
      label: "setpos_exact",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Move player to an exact specified origin (must have sv_cheats).",
      type: "identifier",
   },
   {
      label: "setpos_player",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Move specified player to specified origin (must have sv_cheats).",
      type: "identifier",
   },
   {
      label: "shake",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Shake the screen.",
      type: "identifier",
   },
   {
      label: "shake_stop",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Stops all active screen shakes.",
      type: "identifier",
   },
   {
      label: "shake_testpunch",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Test a punch-style screen shake.",
      type: "identifier",
   },
   {
      label: "shatterglass_break",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "shatterglass_cleanup",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "shatterglass_cleanup_max",
      value: "150",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "shatterglass_debug",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "shatterglass_distort",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "shatterglass_edge_uv_scale",
      value: "0.05",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "shatterglass_hit_tolerance",
      value: "2",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "shatterglass_restore",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "shatterglass_shard_lifetime",
      value: "15",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "shatterglass_subdiv_size",
      value: "1.5",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "shatterglass_voronoi_size",
      value: "15",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "show_loadout_toggle",
      value: "cmd",
      flags: ["cl", "clientcmd_can_execute"],
      detail: "Toggles loadout display",
      type: "identifier",
   },
   {
      label: "show_visibility_boxes",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Enable or Disable debug display of visibility boxes",
      type: "boolean",
   },
   {
      label: "showconsole",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Show the console.",
      type: "identifier",
   },
   {
      label: "showtriggers",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Enable or Disable showing trigger entities",
      type: "identifier",
   },
   {
      label: "showtriggers_toggle",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Displays the movement bounding box for the triggers in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "silence_dsp",
      value: "false",
      flags: ["cheat"],
      detail: "When on, silences all DSP mixes.",
      type: "boolean",
   },
   {
      label: "sk_autoaim_mode",
      value: "1",
      flags: ["sv", "cl", "a", "rep"],
      detail: "",
      type: "number",
   },
   {
      label: "skel_constraints_enable",
      value: "true",
      flags: ["rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "skeleton_instance_scaleset_enable",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "skeleton_instance_smear_boneflags",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent.",
      type: "boolean",
   },
   {
      label: "skill",
      value: "1",
      flags: ["sv", "cl", "a", "rep", "per_user"],
      detail: "Game skill level.",
      type: "number",
   },
   {
      label: "slot0",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot1",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot10",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot11",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot12",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot13",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot2",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot3",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot4",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot5",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot6",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot7",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot8",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "slot9",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "",
      type: "identifier",
   },
   {
      label: "snd_arrangement_start",
      value: "cmd",
      flags: ["cheat"],
      detail: "Starts the specified arrangement.",
      type: "identifier",
   },
   {
      label: "snd_autodetect_latency",
      value: "true",
      flags: ["a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_break_on_start_soundevent",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Use to debug break on any soundevent that is started matching this name",
      type: "number",
   },
   {
      label: "snd_cast",
      value: "cmd",
      flags: ["cheat"],
      detail:
         "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically if cl_snd_cast_retrigger is set. The sound event will clear previous snd_cast events if cl_snd_cast_clear is set. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
      type: "identifier",
   },
   {
      label: "snd_compare_soundevents",
      value: "cmd",
      flags: ["cheat"],
      detail: "Compare the compiled and loaded contents of 2 soundevents.",
      type: "identifier",
   },
   {
      label: "snd_deathcamera_volume",
      value: "0.16",
      flags: ["cl", "a", "release"],
      detail: "Volume of Deathcam Timers",
      type: "number",
   },
   {
      label: "snd_disable_mixer_duck",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_disable_mixer_solo",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_dsp_distance_max",
      value: "2000",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_dsp_distance_min",
      value: "20",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_duckerattacktime",
      value: "0.5",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_duckerreleasetime",
      value: "2.5",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_duckerthreshold",
      value: "0.15",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_ducktovolume",
      value: "0.55",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_envelope_rate",
      value: "0.9",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_filter",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_foliage_db_loss",
      value: "4",
      flags: ["sv", "cheat"],
      detail: "foliage dB loss per 1200 units",
      type: "number",
   },
   {
      label: "snd_gain",
      value: "1",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_gain_max",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_gain_min",
      value: "0.01",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_gamevoicevolume",
      value: "1",
      flags: ["a"],
      detail: "Game v.o. volume",
      type: "number",
   },
   {
      label: "snd_gamevolume",
      value: "1",
      flags: ["a"],
      detail: "Game volume",
      type: "number",
   },
   {
      label: "snd_get_physics_surface_properties",
      value: "cmd",
      flags: ["cheat"],
      detail: "Get physics surface properties for all the materials.",
      type: "identifier",
   },
   {
      label: "snd_headphone_eq",
      value: "0",
      flags: ["cl", "a", "clientcmd_can_execute"],
      detail: "Select Headphone EQ Preset",
      type: "number",
   },
   {
      label: "snd_list",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_list_deferred_soundevents",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all current deferred load soundevents",
      type: "identifier",
   },
   {
      label: "snd_list_soundevents",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all available soundevents",
      type: "identifier",
   },
   {
      label: "snd_list_soundevents_by_stack",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all available soundevents using specified stack name",
      type: "identifier",
   },
   {
      label: "snd_mainmenu_music_break_time_max",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Maximum amount of time to pause between playing main menu music",
      type: "number",
   },
   {
      label: "snd_mainmenu_music_break_time_min",
      value: "0",
      flags: ["cl", "cheat"],
      detail: "Minimum amount of time to pause between playing main menu music",
      type: "number",
   },
   {
      label: "snd_mapobjective_volume",
      value: "0.04",
      flags: ["cl", "a", "release"],
      detail: "Volume of Map Objective Music",
      type: "number",
   },
   {
      label: "snd_menumusic_volume",
      value: "0.04",
      flags: ["cl", "a", "release"],
      detail: "Volume of Menu / Non-gameplay music",
      type: "number",
   },
   {
      label: "snd_mixahead",
      value: "0.001",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_mixer_master_dsp",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_mixer_master_level",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_musicvolume",
      value: "1",
      flags: ["a"],
      detail: "Music volume",
      type: "number",
   },
   {
      label: "snd_mute_losefocus",
      value: "true",
      flags: ["a"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_mute_mvp_music_live_players",
      value: "false",
      flags: ["cl", "a", "release"],
      detail: "If set, MVP music is muted if players from both teams are still alive.",
      type: "boolean",
   },
   {
      label: "snd_mvp_volume",
      value: "0.16",
      flags: ["cl", "a", "release"],
      detail: "Volume of MVP Music",
      type: "number",
   },
   {
      label: "snd_new_visualize",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Displays soundevent name played at it's 3d position",
      type: "boolean",
   },
   {
      label: "snd_occlusion_bounces",
      value: "1",
      flags: ["rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_occlusion_debug",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_occlusion_min_wall_thickness",
      value: "4",
      flags: ["rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_occlusion_rays",
      value: "4",
      flags: ["rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_op_test_convar",
      value: "720",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_opvar_set_point_debug",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_print_activetracks",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all active tracks",
      type: "identifier",
   },
   {
      label: "snd_print_arrangements",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all available sequence arrangments",
      type: "identifier",
   },
   {
      label: "snd_print_samplers",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all available samplers",
      type: "identifier",
   },
   {
      label: "snd_print_sequences",
      value: "cmd",
      flags: ["cheat"],
      detail: "List all available midi sequences",
      type: "identifier",
   },
   {
      label: "snd_rear_stereo_scale",
      value: "1",
      flags: ["rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_refdb",
      value: "60",
      flags: ["cheat"],
      detail: "Reference dB at snd_refdist",
      type: "number",
   },
   {
      label: "snd_refdist",
      value: "36",
      flags: ["cheat"],
      detail: "Reference distance for snd_refdb",
      type: "number",
   },
   {
      label: "snd_remove_all_soundevents",
      value: "cmd",
      flags: ["cheat"],
      detail: "Remove all soundevents",
      type: "identifier",
   },
   {
      label: "snd_remove_soundevent",
      value: "cmd",
      flags: ["cheat"],
      detail: "Remove the specified soundevent",
      type: "identifier",
   },
   {
      label: "snd_report_verbose_error",
      value: "false",
      flags: ["cheat"],
      detail: "If set to 1, report more error found when playing sounds.",
      type: "boolean",
   },
   {
      label: "snd_roundaction_volume",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "Volume of Move Action Music",
      type: "number",
   },
   {
      label: "snd_roundend_volume",
      value: "0.16",
      flags: ["cl", "a", "release"],
      detail: "Volume of Won/Lost Music",
      type: "number",
   },
   {
      label: "snd_roundstart_volume",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "Volume of Round Start Music",
      type: "number",
   },
   {
      label: "snd_samplers_play_note",
      value: "cmd",
      flags: ["cheat"],
      detail: "Play a note from a specified sampler",
      type: "identifier",
   },
   {
      label: "snd_samplers_stop_note",
      value: "cmd",
      flags: ["cheat"],
      detail: "Stop a note from a specified sampler",
      type: "identifier",
   },
   {
      label: "snd_sequence_set_track_bpm",
      value: "cmd",
      flags: ["cheat"],
      detail: "Sets the tempo of the specified track",
      type: "identifier",
   },
   {
      label: "snd_sequence_set_track_transpose",
      value: "cmd",
      flags: ["cheat"],
      detail: "Sets the transposition of the specified track",
      type: "identifier",
   },
   {
      label: "snd_sequence_stop_all_tracks",
      value: "cmd",
      flags: ["cheat"],
      detail: "Stops all currently playing sequences",
      type: "identifier",
   },
   {
      label: "snd_sequence_stop_track",
      value: "cmd",
      flags: ["cheat"],
      detail: "Stops the specified track",
      type: "identifier",
   },
   {
      label: "snd_sequencer_show_bpm",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sequencer_show_events",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sequencer_show_quantize_queue",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_set_physics_surface_properties",
      value: "cmd",
      flags: ["cheat"],
      detail: "Set physics surface properties for materials. Usage: <heuristic #> <commit>",
      type: "identifier",
   },
   {
      label: "snd_setmixer",
      value: "cmd",
      flags: ["cheat"],
      detail: "Set named Mixgroup of current mixer to mix vol, mute, solo.",
      type: "identifier",
   },
   {
      label: "snd_setmixlayer",
      value: "cmd",
      flags: ["cheat"],
      detail: "Set named Mixgroup of named mix layer to mix vol, mute, solo.",
      type: "identifier",
   },
   {
      label: "snd_showclassname",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_showstart",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_sos_block_global_stack",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_block_stop_global_stack",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_calc_angle_debug",
      value: "false",
      flags: ["rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_flush_operators",
      value: "cmd",
      flags: ["cheat"],
      detail: "Flush and re-parse the sound operator system",
      type: "identifier",
   },
   {
      label: "snd_sos_get_operator_field_info",
      value: "cmd",
      flags: ["cheat"],
      detail: "Currently gets info for a single operator field",
      type: "identifier",
   },
   {
      label: "snd_sos_ingame_debug",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_list_operator_updates",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_opvar_debug",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_pause_soundevent",
      value: "cmd",
      flags: ["cheat"],
      detail: "Pause the specified soundevent in the list",
      type: "identifier",
   },
   {
      label: "snd_sos_pause_system",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_print_class_sizes",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints the sizes of relevant sos classes.",
      type: "identifier",
   },
   {
      label: "snd_sos_print_field_name_strings",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints a list of currently cached field name strings",
      type: "identifier",
   },
   {
      label: "snd_sos_print_field_references",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_print_full_field_info",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_print_groups",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints the current state of the groups system",
      type: "identifier",
   },
   {
      label: "snd_sos_print_operator_stack",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints a master list of currently exposed variables",
      type: "identifier",
   },
   {
      label: "snd_sos_print_operator_stack_operator",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints an operator from a stack",
      type: "identifier",
   },
   {
      label: "snd_sos_print_operator_stacks",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints a list of currently available stacks",
      type: "identifier",
   },
   {
      label: "snd_sos_print_operators",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints a list of currently available operators",
      type: "identifier",
   },
   {
      label: "snd_sos_print_stack_exec_list",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints the current stack execution list",
      type: "identifier",
   },
   {
      label: "snd_sos_print_strings",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints a list of currently cached strings",
      type: "identifier",
   },
   {
      label: "snd_sos_print_tool_properties",
      value: "cmd",
      flags: ["cheat"],
      detail: "Prints the current state of tool properties.",
      type: "identifier",
   },
   {
      label: "snd_sos_resolve_execute_operator",
      value: "cmd",
      flags: ["cheat"],
      detail: "Resolve the inputs and execute one specified operator from a specified stack",
      type: "identifier",
   },
   {
      label: "snd_sos_set_operator_field",
      value: "cmd",
      flags: ["cheat"],
      detail: "Currently sets a single float operator field",
      type: "identifier",
   },
   {
      label: "snd_sos_set_operator_field_by_guid",
      value: "cmd",
      flags: ["cheat"],
      detail: "Currently sets a single float operator field",
      type: "identifier",
   },
   {
      label: "snd_sos_show_block_debug",
      value: "false",
      flags: ["cheat"],
      detail: "Spew data about the list of block entries.",
      type: "boolean",
   },
   {
      label: "snd_sos_show_operator_event_and_stack",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_operator_event_filter",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_sos_show_operator_field_filter",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_sos_show_operator_init",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_operator_not_executing",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_operator_operator_filter",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_sos_show_operator_pause_entry",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_operator_shutdown",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_operator_stop_entry",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_operator_updates",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_opvar_updates",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_opvar_updates_filter",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_sos_show_queuetotrack",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_soundevent_param_overwrite",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_show_soundevent_start",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sos_soundevent_filter",
      value: "0",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_sos_soundevent_profile",
      value: "cmd",
      flags: ["cheat"],
      detail: "Dump a record of current soundevents and profile data",
      type: "identifier",
   },
   {
      label: "snd_sos_start_soundevent",
      value: "cmd",
      flags: ["cheat"],
      detail: "Starts a specified soundevent",
      type: "identifier",
   },
   {
      label: "snd_sos_start_soundevent_at_pos",
      value: "cmd",
      flags: ["cheat"],
      detail: "Starts a specified soundevent at the given position",
      type: "identifier",
   },
   {
      label: "snd_sos_stop_all_soundevents",
      value: "cmd",
      flags: ["cheat"],
      detail: "Stops all soundevents currently on the execution list",
      type: "identifier",
   },
   {
      label: "snd_sos_stop_soundevent_guid",
      value: "cmd",
      flags: ["cheat"],
      detail: "Stops a specified soundevent",
      type: "identifier",
   },
   {
      label: "snd_sos_stop_soundevent_index",
      value: "cmd",
      flags: ["cheat"],
      detail: "Stops a specified soundevent",
      type: "identifier",
   },
   {
      label: "snd_sos_test_soundmessage",
      value: "cmd",
      flags: ["cheat"],
      detail: "test",
      type: "identifier",
   },
   {
      label: "snd_sos_unpause_soundevent",
      value: "cmd",
      flags: ["cheat"],
      detail: "UnPause the first soundevent in the list",
      type: "identifier",
   },
   {
      label: "snd_sound_areas_debug",
      value: "false",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "snd_sound_areas_debug_interval",
      value: "0.2",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_soundevent_clear_deferred",
      value: "cmd",
      flags: ["cheat"],
      detail: "Clear the list of deferred soundevents for loading.",
      type: "identifier",
   },
   {
      label: "snd_soundmixer_set_trigger_factor",
      value: "cmd",
      flags: ["cheat"],
      detail: "Set named mix layer / mix group, trigger amount.",
      type: "identifier",
   },
   {
      label: "snd_soundmixer_setmixlayer_amount",
      value: "cmd",
      flags: ["cheat"],
      detail: "Set named mix layer mix amount.",
      type: "identifier",
   },
   {
      label: "snd_spatialize_lerp",
      value: "0",
      flags: ["a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_steamaudio_enable_pathing",
      value: "true",
      flags: ["cheat"],
      detail: "This variable is checked by soundstack to globally enabling pathing for audio processing.",
      type: "boolean",
   },
   {
      label: "snd_steamaudio_enable_perspective_correction",
      value: "true",
      flags: ["a", "release"],
      detail: "Enable perspective correction for 3D audio.",
      type: "boolean",
   },
   {
      label: "snd_steamaudio_enable_reverb",
      value: "0",
      flags: ["release"],
      detail: "Enable Steam Audio Reverb processor.",
      type: "number",
   },
   {
      label: "snd_steamaudio_enable_spatial_blend_fix",
      value: "cmd",
      flags: ["cheat"],
      detail: "Toggles the speculative fix for low-frequency issues when using spatial blend.",
      type: "identifier",
   },
   {
      label: "snd_steamaudio_export_scene",
      value: "cmd",
      flags: ["cheat"],
      detail: "Exports scene currently used by Steam Audio as a phononscene file.",
      type: "identifier",
   },
   {
      label: "snd_steamaudio_halton_sequence",
      value: "cmd",
      flags: ["cheat"],
      detail: "Generate Halton Sequence for a given order and number of samples.",
      type: "identifier",
   },
   {
      label: "snd_steamaudio_ir_duration",
      value: "2",
      flags: ["cheat"],
      detail: "The time delay between a sound being emitted and the last audible reflection in Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_load_pathing_data",
      value: "true",
      flags: ["cheat"],
      detail: "If set, baked pathing data is loaded. Steam Audio Hammer entities can successfully use pathing in this case.",
      type: "boolean",
   },
   {
      label: "snd_steamaudio_load_reverb_data",
      value: "true",
      flags: ["cheat"],
      detail: "If set, baked reverb data is loaded. Reset it to zero during an format changes of baked data until all data is updated.",
      type: "boolean",
   },
   {
      label: "snd_steamaudio_max_convolution_sources",
      value: "4",
      flags: ["cheat"],
      detail: "The maximum number of simultaneous sources that can be modeled by Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_max_occlusion_samples",
      value: "64",
      flags: ["cheat"],
      detail: "The maximum number of rays that can be traced for volumetric occlusion by Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_num_bounces",
      value: "128",
      flags: ["cheat"],
      detail: "The maximum number of times any ray can bounce when using Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_num_diffuse_samples",
      value: "2048",
      flags: ["cheat"],
      detail: "The number of directions considered for ray bounce by Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_num_rays",
      value: "65536",
      flags: ["cheat"],
      detail: "The number of rays to trace for reflection modeling by Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_num_threads",
      value: "2",
      flags: ["cheat"],
      detail: "Sets the number of threads used for realtime reflection by Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_pathing_order",
      value: "1",
      flags: ["cheat"],
      detail: "The amount of directional detail in the simulated by Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_pathing_order_rendering",
      value: "1",
      flags: ["cheat"],
      detail: "The amount of directional detail in the rendered audio by Steam Audio.",
      type: "number",
   },
   {
      label: "snd_steamaudio_reverb_level_db",
      value: "-3",
      flags: ["release"],
      detail: "Adjust overall volume (dB) of the output from Steam Audio Reverb processor.",
      type: "number",
   },
   {
      label: "snd_steamaudio_source_pathing_debug",
      value: "false",
      flags: ["a"],
      detail: "Enable path visualization for steam_audio_source operator.",
      type: "boolean",
   },
   {
      label: "snd_tensecondwarning_volume",
      value: "0.04",
      flags: ["cl", "a", "release"],
      detail: "Volume of Ten Second Warnings",
      type: "number",
   },
   {
      label: "snd_toolvolume",
      value: "1",
      flags: ["a"],
      detail: "Volume of sounds in tools (e.g. Hammer, SFM)",
      type: "number",
   },
   {
      label: "snd_use_baked_occlusion",
      value: "0",
      flags: ["rep", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "snd_vmidi_flush",
      value: "cmd",
      flags: ["cheat"],
      detail: "Purge and reload all vmidi data and files.",
      type: "identifier",
   },
   {
      label: "snd_vmix_override_mix_decay_time",
      value: "-1",
      flags: ["cheat"],
      detail: "If set > 0, overrides how long the decay time is on all mix graphs (in seconds).",
      type: "number",
   },
   {
      label: "snd_vmix_show_input_updates",
      value: "false",
      flags: ["cheat"],
      detail: "If set to 1, show all incoming updates to vmix inputs.",
      type: "boolean",
   },
   {
      label: "snd_voipvolume",
      value: "1",
      flags: ["a"],
      detail: "Voice volume",
      type: "number",
   },
   {
      label: "sound_device_override",
      value: "0",
      flags: ["a", "release"],
      detail: "ID of the sound device to use",
      type: "number",
   },
   {
      label: "soundinfo",
      value: "cmd",
      flags: ["release"],
      detail: "Describe the current sound device with an active voice list.",
      type: "identifier",
   },
   {
      label: "soundscape_debug",
      value: "false",
      flags: ["sv", "cheat"],
      detail:
         "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.",
      type: "boolean",
   },
   {
      label: "soundscape_dumpclient",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Dumps the client's soundscape data.",
      type: "identifier",
   },
   {
      label: "soundscape_fadetime",
      value: "3",
      flags: ["cl", "cheat"],
      detail: "Time to crossfade sound effects between soundscapes",
      type: "number",
   },
   {
      label: "soundscape_radius_debug",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Prints current volume of radius sounds",
      type: "boolean",
   },
   {
      label: "spawn_group_activate",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Activate specified spawngroup.",
      type: "identifier",
   },
   {
      label: "spawn_group_list",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "List all spawn groups",
      type: "identifier",
   },
   {
      label: "spawn_group_load",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Load named spawn group.",
      type: "identifier",
   },
   {
      label: "spawn_group_unload",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Unload named spawn group.",
      type: "identifier",
   },
   {
      label: "speaker_config",
      value: "-1",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "spec_autodirector",
      value: "false",
      flags: ["cl", "clientcmd_can_execute"],
      detail: "Auto-director chooses best view modes while spectating",
      type: "boolean",
   },
   {
      label: "spec_centerchasecam",
      value: "false",
      flags: ["cl", "a"],
      detail: "Looks at the target player's center, instead of his eye position, in chase came mode",
      type: "boolean",
   },
   {
      label: "spec_freeze_deathanim_time",
      value: "0.8",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam.",
      type: "number",
   },
   {
      label: "spec_freeze_time",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Time spend frozen in observer freeze cam.",
      type: "number",
   },
   {
      label: "spec_freeze_time_lock",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Time players are prevented from skipping the freeze cam",
      type: "number",
   },
   {
      label: "spec_freeze_traveltime",
      value: "0.3",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Time taken to zoom in to frame a target in observer freeze cam.",
      type: "number",
   },
   {
      label: "spec_glow_decay_time",
      value: "2",
      flags: ["cl", "release"],
      detail: "Time to decay glow from 1.0 to spec_glow_silent_factor after spec_glow_full_time.",
      type: "number",
   },
   {
      label: "spec_glow_full_time",
      value: "1",
      flags: ["cl", "release"],
      detail: "Noisy players stay at full brightness for this long.",
      type: "number",
   },
   {
      label: "spec_glow_silent_factor",
      value: "0.4",
      flags: ["cl", "release"],
      detail: "Lurking player xray glow scaling.",
      type: "number",
   },
   {
      label: "spec_glow_spike_factor",
      value: "1.2",
      flags: ["cl", "release"],
      detail: "Noisy player xray glow scaling (pop when noise is made).  Make >1 to add a 'spike' to noise-making players",
      type: "number",
   },
   {
      label: "spec_glow_spike_time",
      value: "0",
      flags: ["cl", "release"],
      detail: "Time for noisy player glow 'spike' to show that they made noise very recently.",
      type: "number",
   },
   {
      label: "spec_hide_players",
      value: "false",
      flags: ["cl", "release", "clientcmd_can_execute"],
      detail: "Toggle the visibility of scoreboard players.",
      type: "boolean",
   },
   {
      label: "spec_pos",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "dump position and angles to the console",
      type: "identifier",
   },
   {
      label: "spec_replay_autostart",
      value: "true",
      flags: ["cl", "a"],
      detail: "Auto-start Killer Replay when available",
      type: "boolean",
   },
   {
      label: "spec_replay_bot",
      value: "false",
      flags: ["sv", "release"],
      detail: "Enable Spectator Hltv Replay when killed by bot",
      type: "boolean",
   },
   {
      label: "spec_replay_enable",
      value: "0",
      flags: ["rep", "release"],
      detail: "Enable Killer Replay, requires hltv server running (0:off, 1:default, 2:force)",
      type: "number",
   },
   {
      label: "spec_replay_leadup_time",
      value: "5.3438",
      flags: ["rep", "release"],
      detail: "Replay time in seconds before the highlighted event",
      type: "number",
   },
   {
      label: "spec_replay_message_time",
      value: "9.5",
      flags: ["rep", "release"],
      detail:
         "How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time",
      type: "number",
   },
   {
      label: "spec_replay_on_death",
      value: "false",
      flags: ["rep", "release"],
      detail:
         "When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players",
      type: "boolean",
   },
   {
      label: "spec_replay_rate_base",
      value: "1",
      flags: ["rep", "release"],
      detail: "Base time scale of Killer Replay.Experimental.",
      type: "number",
   },
   {
      label: "spec_replay_rate_limit",
      value: "3",
      flags: ["rep", "release"],
      detail: "Minimum allowable pause between replay requests in seconds",
      type: "number",
   },
   {
      label: "spec_replay_round_delay",
      value: "0",
      flags: ["sv", "release"],
      detail:
         "Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second)",
      type: "number",
   },
   {
      label: "spec_replay_winddown_time",
      value: "2",
      flags: ["sv", "release"],
      detail: "The trailing time, in seconds, of replay past the event, including fade-out",
      type: "number",
   },
   {
      label: "spec_show_xray",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "If set to 1, you can see player outlines and name IDs through walls - who you can see depends on your team and mode",
      type: "number",
   },
   {
      label: "spec_usenumberkeys_nobinds",
      value: "true",
      flags: ["cl", "a"],
      detail: "If set to 1, map voting and spectator view use the raw number keys instead of the weapon binds (slot1, slot2, etc).",
      type: "boolean",
   },
   {
      label: "spec_xray_dropped_defusekits",
      value: "false",
      flags: ["cl", "release"],
      detail: "Whether to X-ray dropped defuse kits.",
      type: "boolean",
   },
   {
      label: "spec_xray_dropped_unoccluded",
      value: "false",
      flags: ["cl", "release"],
      detail: "Whether to always X-ray dropped c4 and defuse kits.",
      type: "boolean",
   },
   {
      label: "splitscreen_mode",
      value: "0",
      flags: ["a"],
      detail: "",
      type: "number",
   },
   {
      label: "+spray_menu",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "-spray_menu",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "startdemos",
      value: "cmd",
      flags: ["release"],
      detail: "Play demos in demo sequence.",
      type: "identifier",
   },
   {
      label: "status",
      value: "cmd",
      flags: ["release"],
      detail: "Print connection status",
      type: "identifier",
   },
   {
      label: "status_json",
      value: "cmd",
      flags: ["release"],
      detail: "Print status in JSON format",
      type: "identifier",
   },
   {
      label: "steam_controller_haptics",
      value: "true",
      flags: ["cl", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "stop",
      value: "cmd",
      flags: ["release"],
      detail: "Finish recording demo.",
      type: "identifier",
   },
   {
      label: "stopdemos",
      value: "cmd",
      flags: ["release"],
      detail: "Stop looping demos (current demo will complete).",
      type: "identifier",
   },
   {
      label: "stopsound",
      value: "cmd",
      flags: ["cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "stopsoundscape",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Stops all soundscape processing and fades current looping sounds",
      type: "identifier",
   },
   {
      label: "subclass_change",
      value: "cmd",
      flags: ["sv", "cheat", "vconsole_fuzzy"],
      detail:
         "Changes the subclass of the given entity.  Arguments:    <new_subclass> {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      type: "identifier",
   },
   {
      label: "subclass_create",
      value: "cmd",
      flags: ["sv", "cheat", "vconsole_fuzzy"],
      detail: "Creates an entity of the given subclass where the player is looking.",
      type: "identifier",
   },
   {
      label: "surfaceprop",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Reports the surface properties at the cursor",
      type: "identifier",
   },
   {
      label: "sv_accelerate",
      value: "5.5",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_accelerate_debug_speed",
      value: "false",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_accelerate_use_weapon_speed",
      value: "true",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_air_max_horizontal_parachute_speed",
      value: "240",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_air_max_wishspeed",
      value: "30",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_air_pushaway_dist",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_airaccelerate",
      value: "12",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_airaccelerate_parachute",
      value: "2.6",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_airaccelerate_rappel",
      value: "2.2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_allchat",
      value: "true",
      flags: ["sv", "nf", "release"],
      detail: "Players can receive all other players' text chat, no death restrictions",
      type: "boolean",
   },
   {
      label: "sv_allow_votes",
      value: "true",
      flags: ["sv", "release"],
      detail: "Allow voting?",
      type: "boolean",
   },
   {
      label: "sv_alltalk",
      value: "false",
      flags: ["sv", "nf", "release"],
      detail: "Players can hear all other players' voice communication, no team restrictions",
      type: "boolean",
   },
   {
      label: "sv_alternateticks",
      value: "false",
      flags: ["sp", "release"],
      detail: "If set, server only simulates entities on even numbered ticks.",
      type: "boolean",
   },
   {
      label: "sv_always_play_damage_headshot_feedback",
      value: "true",
      flags: ["sv", "release"],
      detail: "If true, we always play damage headshot feedback, even through smokes and objects.",
      type: "boolean",
   },
   {
      label: "sv_auto_adjust_bot_difficulty",
      value: "true",
      flags: ["sv", "release"],
      detail: "Adjust the difficulty of bots each round based on contribution score.",
      type: "boolean",
   },
   {
      label: "sv_auto_full_alltalk_during_warmup_half_end",
      value: "false",
      flags: ["sv", "release"],
      detail: "When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match",
      type: "boolean",
   },
   {
      label: "sv_autobunnyhopping",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Players automatically re-jump while holding jump button",
      type: "boolean",
   },
   {
      label: "sv_autobuyammo",
      value: "false",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Enable automatic ammo purchase when inside buy zones during buy periods",
      type: "boolean",
   },
   {
      label: "sv_autoexec_mapname_cfg",
      value: "false",
      flags: ["sv", "release"],
      detail: "Execute a mapname cfg file on the server automatically in custom game modes that require it.",
      type: "boolean",
   },
   {
      label: "sv_banid_enabled",
      value: "true",
      flags: ["release"],
      detail: "Whether server supports banid command",
      type: "boolean",
   },
   {
      label: "sv_bot_buy_decoy_weight",
      value: "1",
      flags: ["sv", "release"],
      detail: "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      type: "number",
   },
   {
      label: "sv_bot_buy_flash_weight",
      value: "1",
      flags: ["sv", "release"],
      detail: "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      type: "number",
   },
   {
      label: "sv_bot_buy_grenade_chance",
      value: "33",
      flags: ["sv", "release"],
      detail: "Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)",
      type: "number",
   },
   {
      label: "sv_bot_buy_hegrenade_weight",
      value: "6",
      flags: ["sv", "release"],
      detail: "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      type: "number",
   },
   {
      label: "sv_bot_buy_molotov_weight",
      value: "1",
      flags: ["sv", "release"],
      detail: "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      type: "number",
   },
   {
      label: "sv_bot_buy_smoke_weight",
      value: "1",
      flags: ["sv", "release"],
      detail: "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      type: "number",
   },
   {
      label: "sv_bots_get_easier_each_win",
      value: "0",
      flags: ["sv", "release"],
      detail:
         "If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time.",
      type: "number",
   },
   {
      label: "sv_bots_get_harder_after_each_wave",
      value: "0",
      flags: ["sv", "release"],
      detail:
         "If > 0, some # of bots will raise thier difficulty each time CTs beat a Guardian wave. The argument defines how many will raise their difficulty each time",
      type: "number",
   },
   {
      label: "sv_bounce",
      value: "0",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Bounce multiplier for when physically simulated objects collide with other objects.",
      type: "number",
   },
   {
      label: "sv_buy_status_override",
      value: "-1",
      flags: ["sv", "rep", "release"],
      detail: "Override for buy status map info. 0 = everyone can buy, 1 = ct only, 2 = t only 3 = nobody",
      type: "number",
   },
   {
      label: "sv_chat_proximity",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_cheats",
      value: "false",
      flags: ["nf", "rep", "release"],
      detail: "Allow cheats on server",
      type: "boolean",
   },
   {
      label: "sv_clockcorrection_msecs",
      value: "30",
      flags: ["sv", "release"],
      detail: "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount",
      type: "number",
   },
   {
      label: "sv_cluster",
      value: "0",
      flags: ["release"],
      detail: "Data center cluster this server lives in.",
      type: "number",
   },
   {
      label: "sv_competitive_minspec",
      value: "true",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages.",
      type: "boolean",
   },
   {
      label: "sv_cs_player_speed_has_hostage",
      value: "200",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_damage_print_enable",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "0: no damage print in console. 1: damage print in console on death. 2: damage print in console only at next round restart.",
      type: "number",
   },
   {
      label: "sv_deadtalk",
      value: "true",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Dead players can speak (voice, text) to the living",
      type: "boolean",
   },
   {
      label: "sv_debug_overlays_bandwidth",
      value: "65536",
      flags: ["release"],
      detail: "Broadcast server debug overlays traffic",
      type: "number",
   },
   {
      label: "sv_debug_overlays_broadcast",
      value: "false",
      flags: ["nf", "cheat", "release"],
      detail: "Broadcast server debug overlays",
      type: "boolean",
   },
   {
      label: "sv_disable_immunity_alpha",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If set, clients won't slam the player model render settings each frame for immunity [mod authors use this]",
      type: "boolean",
   },
   {
      label: "sv_disable_observer_interpolation",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Disallow interpolating between observer targets on this server.",
      type: "boolean",
   },
   {
      label: "sv_disable_radar",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "0: regular radar; 1: always disabled; 2: disabled in warmup",
      type: "number",
   },
   {
      label: "sv_disable_teamselect_menu",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Disable teamselect menu on clients",
      type: "boolean",
   },
   {
      label: "sv_disconnected_player_data_hold_time",
      value: "60",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Duration, in seconds, to hold onto the data of disconnected players, for scoreboard display.",
      type: "number",
   },
   {
      label: "sv_distance_guaranteed_damage_feedback",
      value: "1070",
      flags: ["sv", "release"],
      detail: "Attacks made within this radius are guaranteed to generate damage feedback sounds.",
      type: "number",
   },
   {
      label: "sv_dz_cash_bundle_size",
      value: "50",
      flags: ["sv", "rep", "release"],
      detail: "Size of a cash bundle",
      type: "number",
   },
   {
      label: "sv_dz_cash_mega_bundle_size",
      value: "13",
      flags: ["sv", "rep", "release"],
      detail: "Size of a mega cash bundle",
      type: "number",
   },
   {
      label: "sv_dz_contractkill_reward",
      value: "10",
      flags: ["sv", "rep", "release"],
      detail: "Cash bundles to award for a successful contract kill",
      type: "number",
   },
   {
      label: "sv_dz_hostage_rescue_reward",
      value: "18",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of cash bundles to award for rescuing a hostage",
      type: "number",
   },
   {
      label: "sv_dz_squad_wipe_reward",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Number of cash bundles to award for eliminating a squad",
      type: "number",
   },
   {
      label: "sv_enable_alternate_baselines",
      value: "1",
      flags: ["release"],
      detail: "Allow alternate baseline system, set to 2 for debugging spew.",
      type: "number",
   },
   {
      label: "sv_enable_delta_packing",
      value: "true",
      flags: ["release"],
      detail:
         "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.",
      type: "boolean",
   },
   {
      label: "sv_enablebunnyhopping",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Allow player speed to exceed maximum running speed",
      type: "boolean",
   },
   {
      label: "sv_ent_showonlyhitbox",
      value: "-1",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_ents_write_alarm",
      value: "0",
      flags: ["release"],
      detail: "Print callstack every time CNetworkGameServerBase::WriteEntityUpdate takes more than this amount of milliseconds",
      type: "number",
   },
   {
      label: "sv_extract_ammo_from_dropped_weapons",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_fade_player_visibility_farz",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_falldamage_scale",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_falldamage_to_below_player_multiplier",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Scale damage when distributed across two players",
      type: "number",
   },
   {
      label: "sv_falldamage_to_below_player_ratio",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Landing on a another player's head gives them this ratio of the damage.",
      type: "number",
   },
   {
      label: "sv_friction",
      value: "5.2",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "World friction.",
      type: "number",
   },
   {
      label: "sv_full_alltalk",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Any player (including Spectator team) can speak to any other player",
      type: "boolean",
   },
   {
      label: "sv_game_mode_flags",
      value: "0",
      flags: ["sv", "release"],
      detail: "Dedicated server game mode flags to run",
      type: "number",
   },
   {
      label: "sv_gameinstructor_disable",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Force all clients to disable their game instructors.",
      type: "boolean",
   },
   {
      label: "sv_gameinstructor_enable",
      value: "false",
      flags: ["cl", "rep", "release"],
      detail: "Force all clients to enable their game instructors.",
      type: "boolean",
   },
   {
      label: "sv_gravity",
      value: "800",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "World gravity.",
      type: "number",
   },
   {
      label: "sv_grenade_trajectory_prac_pipreview",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Shows grenade trajectory practice picture-in-picture preview.",
      type: "boolean",
   },
   {
      label: "sv_grenade_trajectory_prac_trailtime",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Shows grenade trajectory practice visualization for this number of seconds.",
      type: "number",
   },
   {
      label: "sv_grenade_trajectory_time_spectator",
      value: "4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Length of time grenade trajectory remains visible as a spectator.",
      type: "number",
   },
   {
      label: "sv_guardian_extra_equipment_ct",
      value: "0",
      flags: ["sv", "release"],
      detail: "Extra starting equipment for CT players in guardian modes",
      type: "number",
   },
   {
      label: "sv_guardian_extra_equipment_t",
      value: "0",
      flags: ["sv", "release"],
      detail: "Extra starting equipment for Terrorist players in guardian modes",
      type: "number",
   },
   {
      label: "sv_guardian_health_refresh_per_wave",
      value: "50",
      flags: ["sv", "release"],
      detail: "Health given to survivors per wave in guardian mode.",
      type: "number",
   },
   {
      label: "sv_guardian_heavy_all",
      value: "false",
      flags: ["sv", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_guardian_heavy_count",
      value: "0",
      flags: ["sv", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_guardian_max_wave_for_heavy",
      value: "0",
      flags: ["sv", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_guardian_min_wave_for_heavy",
      value: "0",
      flags: ["sv", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_guardian_refresh_ammo_for_items_on_waves",
      value: "0",
      flags: ["sv", "release"],
      detail: "List of additional weapons to refill ammo on waves.",
      type: "number",
   },
   {
      label: "sv_guardian_reset_c4_every_wave",
      value: "false",
      flags: ["sv", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_guardian_respawn_health",
      value: "50",
      flags: ["sv", "release"],
      detail: "Starting health of guardian players when respawned.",
      type: "number",
   },
   {
      label: "sv_guardian_spawn_health_ct",
      value: "100",
      flags: ["sv", "release"],
      detail: "Starting health in guardian modes.",
      type: "number",
   },
   {
      label: "sv_guardian_spawn_health_t",
      value: "100",
      flags: ["sv", "release"],
      detail: "Starting health in guardian modes.",
      type: "number",
   },
   {
      label: "sv_guardian_starting_equipment_humans",
      value: "0",
      flags: ["sv", "release"],
      detail: "Extra starting equipment for human players in guardian modes",
      type: "number",
   },
   {
      label: "sv_health_approach_enabled",
      value: "true",
      flags: ["sv", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_health_approach_speed",
      value: "10",
      flags: ["sv", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_hegrenade_damage_multiplier",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_hegrenade_radius_multiplier",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_hibernate_postgame_delay",
      value: "5",
      flags: ["release"],
      detail: "# of seconds to wait after final client leaves before hibernating.",
      type: "number",
   },
   {
      label: "sv_hibernate_when_empty",
      value: "true",
      flags: ["release"],
      detail: "Puts the server into extremely low CPU usage mode when no clients connected",
      type: "boolean",
   },
   {
      label: "sv_hide_roundtime_until_seconds",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_highlight_distance",
      value: "500",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_highlight_duration",
      value: "3.5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_holiday_mode",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "0 = OFF, 1 = Halloween, 2 = Winter",
      type: "number",
   },
   {
      label: "sv_hoststate_quit_syscall",
      value: "false",
      flags: ["release"],
      detail: "When enabled, game server will quit immediately via syscall instead of running host states shutdown sequence",
      type: "boolean",
   },
   {
      label: "sv_human_autojoin_team",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Force human players on to a team. 0 = Disabled; 1 = Spectators; 2 = Ts; 3 = CTs.",
      type: "number",
   },
   {
      label: "sv_ignoregrenaderadio",
      value: "false",
      flags: ["sv", "release"],
      detail: "Turn off Fire in the hole messages",
      type: "boolean",
   },
   {
      label: "sv_infinite_ammo",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat", "release"],
      detail: "Player's active weapon will never run out of ammo",
      type: "number",
   },
   {
      label: "sv_invites_only_mainmenu",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If turned on, will ignore all invites when user is playing a match",
      type: "boolean",
   },
   {
      label: "sv_jump_impulse",
      value: "301.993",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Initial upward velocity for player jumps; sqrt(2*gravity*height).",
      type: "number",
   },
   {
      label: "sv_jump_spam_penalty_time",
      value: "0.015625",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "For subtick jumps, if this much time has elapsed since the last time the user has pressed the jump key, pretend they hadn't. Lowering this makes bunnyhopping easier.",
      type: "number",
   },
   {
      label: "sv_kick_ban_duration",
      value: "15",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "How long should a kick ban from the server should last (in minutes)",
      type: "number",
   },
   {
      label: "sv_kick_players_with_cooldown",
      value: "1",
      flags: ["sv", "rep", "release"],
      detail:
         "(0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown)",
      type: "number",
   },
   {
      label: "sv_knife_attack_extend_from_player_aabb",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_ladder_scale_speed",
      value: "0.78",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Scale top speed on ladders",
      type: "number",
   },
   {
      label: "sv_ladder_slack_z_mult",
      value: "0.026",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Difference in Z increases toward the middle of the slack ladder.",
      type: "number",
   },
   {
      label: "sv_lagcompensationforcerestore",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Don't test validity of a lag comp restore, just do it.",
      type: "boolean",
   },
   {
      label: "sv_lan",
      value: "false",
      flags: ["release"],
      detail: "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )",
      type: "boolean",
   },
   {
      label: "sv_lightquery_debug",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_load_forced_client_names_file",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Loads a file containing SteamID64 names for clients",
      type: "identifier",
   },
   {
      label: "sv_load_random_client_names_file",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Loads a file containing random name words for clients",
      type: "identifier",
   },
   {
      label: "sv_log_http_record_before_any_listeners",
      value: "false",
      flags: ["sv", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_log_onefile",
      value: "false",
      flags: ["a", "release"],
      detail: "Log server information to only one file.",
      type: "boolean",
   },
   {
      label: "sv_logbans",
      value: "false",
      flags: ["a", "release"],
      detail: "Log server bans in the server logs.",
      type: "boolean",
   },
   {
      label: "sv_logblocks",
      value: "false",
      flags: ["release"],
      detail: "If true when log when a query is blocked (can cause very large log files)",
      type: "boolean",
   },
   {
      label: "sv_logecho",
      value: "true",
      flags: ["a", "release"],
      detail: "Echo log information to the console.",
      type: "boolean",
   },
   {
      label: "sv_logfile",
      value: "false",
      flags: ["a", "release"],
      detail: "Log server information in the log file.",
      type: "boolean",
   },
   {
      label: "sv_logflush",
      value: "false",
      flags: ["a", "release"],
      detail: "Flush the log file to disk on each write (slow).",
      type: "boolean",
   },
   {
      label: "sv_logsdir",
      value: "logs",
      flags: ["a", "release"],
      detail: "Folder in the game directory where server logs will be stored.",
      type: "identifier",
   },
   {
      label: "sv_mapvetopickvote_maps",
      value: "de_anubis,de_inferno,de_mirage,de_vertigo,de_overpass,de_nuke,de_ancient",
      flags: ["sv", "release"],
      detail: "Which maps are used for map veto pick sequence",
      type: "identifier",
   },
   {
      label: "sv_mapvetopickvote_phase_duration",
      value: "[1:5][2:15][3:20][4:10][5:10][6:5]",
      flags: ["sv", "release"],
      detail: "How many seconds each phase lasts",
      type: "identifier",
   },
   {
      label: "sv_mapvetopickvote_rnd",
      value: "false",
      flags: ["sv", "release"],
      detail: "When enabled will shuffle veto pick maps list order every time",
      type: "boolean",
   },
   {
      label: "sv_matchend_drops_enabled",
      value: "true",
      flags: ["sv", "release"],
      detail: "Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented",
      type: "boolean",
   },
   {
      label: "sv_matchpause_auto_5v5",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team.",
      type: "boolean",
   },
   {
      label: "sv_max_allowed_net_graph",
      value: "1",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Determines max allowed net_graph value for clients.",
      type: "number",
   },
   {
      label: "sv_max_deathmatch_respawns_per_tick",
      value: "0",
      flags: ["sv", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_max_queries_sec",
      value: "3",
      flags: ["release"],
      detail: "Maximum queries per second to respond to from a single IP address.",
      type: "number",
   },
   {
      label: "sv_max_queries_sec_global",
      value: "60",
      flags: ["release"],
      detail: "Maximum queries per second to respond to from anywhere.",
      type: "number",
   },
   {
      label: "sv_max_queries_window",
      value: "30",
      flags: ["release"],
      detail: "Window over which to average queries per second averages.",
      type: "number",
   },
   {
      label: "sv_maxrate",
      value: "0",
      flags: ["rep", "release"],
      detail: "Max bandwidth rate allowed on server, 0 == unlimited",
      type: "number",
   },
   {
      label: "sv_maxspeed",
      value: "320",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_maxunlag",
      value: "0.2",
      flags: ["sv", "release"],
      detail: "Maximum lag compensation in seconds",
      type: "number",
   },
   {
      label: "sv_maxvelocity",
      value: "3500",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Maximum speed any ballistically moving object is allowed to attain per axis.",
      type: "number",
   },
   {
      label: "sv_memlimit",
      value: "0",
      flags: ["cheat", "release"],
      detail: "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.",
      type: "number",
   },
   {
      label: "sv_merge_changes_after_tick_with_calcdelta",
      value: "1",
      flags: ["release"],
      detail:
         "This fixes bugs where pure calcdelta is used due to recipient changing but it doesn't pick up a field change where the value was changed back to same value as the from snapshot even though the destination fields change list does note the change. Set to 2 to spew any changes merged in by this fix.",
      type: "number",
   },
   {
      label: "sv_metaduplication",
      value: "cmd",
      flags: ["cheat"],
      detail: "Check serializer meta for duplication, add verbose to command for full spew",
      type: "identifier",
   },
   {
      label: "sv_min_jump_landing_sound",
      value: "260",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_minrate",
      value: "98304",
      flags: ["rep", "release"],
      detail: "Min bandwidth rate allowed on server, 0 == unlimited",
      type: "number",
   },
   {
      label: "sv_networkvar_perfieldtracking",
      value: "true",
      flags: ["release"],
      detail: "Track individual field offset changes, rather than a single dirty flag for the whole entity.",
      type: "boolean",
   },
   {
      label: "sv_networkvar_validate",
      value: "false",
      flags: ["release"],
      detail: "Validate each StateChanged against known offsets.",
      type: "boolean",
   },
   {
      label: "sv_noclipaccelerate",
      value: "5",
      flags: ["sv", "cl", "a", "nf", "rep"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_noclipduringpause",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.).",
      type: "boolean",
   },
   {
      label: "sv_noclipfriction",
      value: "4",
      flags: ["sv", "cl", "a", "nf", "rep"],
      detail: "Friction during noclip move.",
      type: "number",
   },
   {
      label: "sv_noclipspeed",
      value: "1200",
      flags: ["sv", "cl", "a", "nf", "rep"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_outofammo_indicator",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_packstats",
      value: "cmd",
      flags: ["release"],
      detail: "Show entity packing stats, pass 'clear' as argument to reset counts.",
      type: "identifier",
   },
   {
      label: "sv_parallel_packentities",
      value: "2",
      flags: ["release"],
      detail: "Set to 1 to use threaded snapshot sending on listen servers, 2 for dedicated servers.",
      type: "number",
   },
   {
      label: "sv_parallel_sendsnapshot",
      value: "2",
      flags: ["release"],
      detail:
         "0: run all send jobs on main thread; 1: send jobs run asynchronously (except on dedicated server); 2: send jobs asynchronously; 3: send jobs run in parallel but block to not overlap the next tick; 4: main server clients' send jobs run in parallel, then HLTV server jobs; this approximately matches pre-async profile for a single HLTV server configuration",
      type: "number",
   },
   {
      label: "sv_party_mode",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Party!!",
      type: "boolean",
   },
   {
      label: "sv_password",
      value: "0",
      flags: ["prot", "nf", "norecord", "release"],
      detail: "Server password for entry into multiplayer games",
      type: "number",
   },
   {
      label: "sv_pausable",
      value: "0",
      flags: ["release"],
      detail: "Is the server pausable.",
      type: "number",
   },
   {
      label: "sv_pause_on_console_open",
      value: "false",
      flags: ["a"],
      detail: "1 = Pause the game when pressing ~ to open the console. CTRL+~ opens the console without pause.",
      type: "boolean",
   },
   {
      label: "sv_phys_debug_callback_entities",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Print all entities that get touch callbacks. Each entity is printed only once.",
      type: "boolean",
   },
   {
      label: "sv_phys_enabled",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Enable all physics simulation",
      type: "boolean",
   },
   {
      label: "sv_phys_sleep_enable",
      value: "true",
      flags: ["sv", "cheat"],
      detail: "Enable sleeping for dynamic physics bodies.",
      type: "boolean",
   },
   {
      label: "sv_phys_stop_at_collision",
      value: "0",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_playerradio_use_allowlist",
      value: "true",
      flags: ["sv", "release"],
      detail: "playerradio commands may only use responses from an allow list of commands.",
      type: "boolean",
   },
   {
      label: "sv_prime_accounts_only",
      value: "false",
      flags: ["sv", "release"],
      detail: "When this setting is enabled only prime users can connect to this game server.",
      type: "boolean",
   },
   {
      label: "sv_pure",
      value: "cmd",
      flags: ["release"],
      detail: "Show user data.",
      type: "identifier",
   },
   {
      label: "sv_pure_kick_clients",
      value: "true",
      flags: ["release"],
      detail: "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.",
      type: "boolean",
   },
   {
      label: "sv_pure_trace",
      value: "0",
      flags: ["release"],
      detail: "If set to 1, the server will print a message whenever a client is verifying a CRC for a file.",
      type: "number",
   },
   {
      label: "sv_pushaway_hostage_force",
      value: "20000",
      flags: ["sv", "rep", "cheat"],
      detail: "How hard the hostage is pushed away from physics objects (falls off with inverse square of distance).",
      type: "number",
   },
   {
      label: "sv_pushaway_max_hostage_force",
      value: "1000",
      flags: ["sv", "rep", "cheat"],
      detail: "Maximum of how hard the hostage is pushed away from physics objects.",
      type: "number",
   },
   {
      label: "sv_pvs_max_distance",
      value: "0",
      flags: ["rep", "release"],
      detail: "if set, adds a maximum range to PVS/PAS checks",
      type: "number",
   },
   {
      label: "sv_radio_throttle_window",
      value: "10",
      flags: ["sv", "release"],
      detail: "The number of seconds before radio command tokens refresh.",
      type: "number",
   },
   {
      label: "sv_ragdoll_lru_debug",
      value: "false",
      flags: ["sv", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_record_item_time_data",
      value: "false",
      flags: ["sv", "release"],
      detail: "Turn on recording of per player item time data into the server log.",
      type: "boolean",
   },
   {
      label: "sv_regeneration_force_on",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "Cheat to test regenerative health systems",
      type: "boolean",
   },
   {
      label: "sv_region",
      value: "-1",
      flags: ["release"],
      detail: "The region of the world to report this server in.",
      type: "number",
   },
   {
      label: "sv_rethrow_last_grenade",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Emit the last grenade thrown on the server.",
      type: "identifier",
   },
   {
      label: "sv_search_key",
      value: "0",
      flags: ["release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_search_team_key",
      value: "public",
      flags: ["release"],
      detail: "When initiating team search, set this key to match with known opponents team",
      type: "identifier",
   },
   {
      label: "sv_server_graphic1",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "A 360x60 (<16kb) image file in /csgo/ that will be displayed to spectators.",
      type: "number",
   },
   {
      label: "sv_server_graphic2",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "A 220x45 (<16kb) image file in /csgo/ that will be displayed to spectators.",
      type: "number",
   },
   {
      label: "sv_server_verify_blood_on_player",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_shield_bash_damage_to_nonplayer",
      value: "30",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_shield_bash_damage_to_players",
      value: "90",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_shield_explosive_damage_cap",
      value: "99",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_shield_explosive_damage_crouch_bonus",
      value: "10",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_shield_explosive_damage_mindist",
      value: "30",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_shield_explosive_damage_mult",
      value: "4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_shield_explosive_damage_scale",
      value: "0.5",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_shield_hitpoints",
      value: "850",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_show_move_collisions",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Enable this to visualize collisions between player and geometry.",
      type: "boolean",
   },
   {
      label: "sv_show_ragdoll_playernames",
      value: "false",
      flags: ["cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_show_team_equipment_force_on",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Force on if not prohibited",
      type: "boolean",
   },
   {
      label: "sv_show_team_equipment_prohibit",
      value: "false",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Determines whether +cl_show_team_equipment is prohibited.",
      type: "boolean",
   },
   {
      label: "sv_show_teammate_death_notification",
      value: "false",
      flags: ["sv", "release"],
      detail: "Show chat notification upon teammate death",
      type: "boolean",
   },
   {
      label: "sv_show_voip_indicator_for_enemies",
      value: "false",
      flags: ["sv", "rep", "release"],
      detail: "Makes it so the voip icon is shown over enemies as well as allies when they are talking",
      type: "boolean",
   },
   {
      label: "sv_showbullethits",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "1=show hits and near misses, 2=show hits only",
      type: "number",
   },
   {
      label: "sv_showhitregistration",
      value: "0",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Display lag_compensated hitboxes. 0 = off, 1 = server only, 2 = client only, 3 = both server and client",
      type: "number",
   },
   {
      label: "sv_showimpacts",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)",
      type: "number",
   },
   {
      label: "sv_showimpacts_penetration",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Shows extra data when bullets penetrate. (use sv_showimpacts_time to increase time shown)",
      type: "number",
   },
   {
      label: "sv_showimpacts_time",
      value: "4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Duration bullet impact indicators remain before disappearing",
      type: "number",
   },
   {
      label: "sv_shutdown",
      value: "cmd",
      flags: ["release"],
      detail: "Sets the server to shutdown when all games have completed",
      type: "identifier",
   },
   {
      label: "sv_skel_constraints_enable",
      value: "false",
      flags: ["rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_skirmish_id",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Dedicated server skirmish id to run",
      type: "number",
   },
   {
      label: "sv_skyname",
      value: "sky_urb01",
      flags: ["sv", "cl", "a", "rep"],
      detail: "Current name of the skybox texture",
      type: "identifier",
   },
   {
      label: "sv_snapshot_unlimited",
      value: "false",
      flags: ["rep", "release"],
      detail:
         "For debugging, don't throw away old snapshots so that if you break in debugger (on remote client or server) it won't require an uncompressed update to resume.  You may run out of memory of course...",
      type: "boolean",
   },
   {
      label: "sv_soundscape_printdebuginfo",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "print soundscapes",
      type: "identifier",
   },
   {
      label: "sv_spawn_afk_bomb_drop_time",
      value: "15",
      flags: ["sv", "rep", "release"],
      detail: "Players that have never moved since they spawned will drop the bomb after this amount of time.",
      type: "number",
   },
   {
      label: "sv_spec_hear",
      value: "1",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team; 3: self only; 4: nobody",
      type: "number",
   },
   {
      label: "sv_spec_use_tournament_content_standards",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_specaccelerate",
      value: "5",
      flags: ["sv", "cl", "a", "nf", "rep"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_specnoclip",
      value: "true",
      flags: ["sv", "cl", "a", "nf", "rep"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_specspeed",
      value: "1200",
      flags: ["sv", "cl", "a", "nf", "rep"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_spewmeta",
      value: "cmd",
      flags: ["cheat"],
      detail: "Spew serializer meta",
      type: "identifier",
   },
   {
      label: "sv_staminajumpcost",
      value: "0.08",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Stamina penalty for jumping",
      type: "number",
   },
   {
      label: "sv_staminalandcost",
      value: "0.05",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Stamina penalty for landing",
      type: "number",
   },
   {
      label: "sv_staminamax",
      value: "80",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Maximum stamina penalty",
      type: "number",
   },
   {
      label: "sv_staminarecoveryrate",
      value: "60",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Rate at which stamina recovers (units/sec)",
      type: "number",
   },
   {
      label: "sv_steamgroup",
      value: "0",
      flags: ["nf", "release"],
      detail: "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.",
      type: "number",
   },
   {
      label: "sv_steamgroup_exclusive",
      value: "false",
      flags: ["release"],
      detail:
         "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.",
      type: "boolean",
   },
   {
      label: "sv_stopspeed",
      value: "80",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Minimum stopping speed when on ground.",
      type: "number",
   },
   {
      label: "sv_stressbots",
      value: "false",
      flags: ["release"],
      detail: "If set to 1, the server calculates data and fills packets to bots. Used for perf testing.",
      type: "boolean",
   },
   {
      label: "sv_tags",
      value: "0",
      flags: ["nf", "release"],
      detail: "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.",
      type: "number",
   },
   {
      label: "sv_talk_after_dying_time",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "The number of seconds a player can continue talking after dying as if they were still alive",
      type: "number",
   },
   {
      label: "sv_talk_enemy_dead",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Dead players can hear all dead enemy communication (voice, chat)",
      type: "boolean",
   },
   {
      label: "sv_talk_enemy_living",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Living players can hear all living enemy communication (voice, chat)",
      type: "boolean",
   },
   {
      label: "sv_teamid_overhead",
      value: "true",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Shows teamID over player's heads.  0 = off, 1 = on",
      type: "boolean",
   },
   {
      label: "sv_teamid_overhead_always_prohibit",
      value: "false",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "Determines whether cl_teamid_overhead_always is prohibited.",
      type: "boolean",
   },
   {
      label: "sv_teamid_overhead_maxdist",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If >0, server will override cl_teamid_overhead_maxdist",
      type: "number",
   },
   {
      label: "sv_teamid_overhead_maxdist_spec",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If >0, server will override cl_teamid_overhead_maxdist_spec",
      type: "number",
   },
   {
      label: "sv_timebetweenducks",
      value: "0.4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Minimum time before recognizing consecutive duck key",
      type: "number",
   },
   {
      label: "sv_turning_inaccuracy_angle_min",
      value: "4",
      flags: ["sv", "cl", "rep", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_turning_inaccuracy_decay",
      value: "0.8",
      flags: ["sv", "cl", "rep", "cheat", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_turning_inaccuracy_enabled",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_unlockedchapters",
      value: "1",
      flags: ["a"],
      detail: "Highest unlocked game chapter.",
      type: "number",
   },
   {
      label: "sv_update_animgraph_movement_in_finish",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "Whether we should update animgraph movement in FinishMove.",
      type: "boolean",
   },
   {
      label: "sv_usercmd_custom_random_seed",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "When enabled server will populate an additional random seed independent of the client",
      type: "boolean",
   },
   {
      label: "sv_usercmd_queue_spew_threshold",
      value: "10",
      flags: ["sv", "release"],
      detail: "Spew warning if command queue has grown above this many backlogged commands.",
      type: "number",
   },
   {
      label: "sv_versus_screen_scene_id",
      value: "0",
      flags: ["sv", "release"],
      detail: "Determines which scene is used for the versus screen.",
      type: "number",
   },
   {
      label: "sv_visiblemaxplayers",
      value: "-1",
      flags: ["release"],
      detail: "Overrides the max players reported to prospective clients",
      type: "number",
   },
   {
      label: "sv_voice_proximity",
      value: "-1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_voicecodec",
      value: "vaudio_speex",
      flags: ["release"],
      detail: "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.",
      type: "identifier",
   },
   {
      label: "sv_voiceenable",
      value: "true",
      flags: ["a", "nf", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "sv_vote_allow_in_warmup",
      value: "false",
      flags: ["sv", "release"],
      detail: "Allow voting during warmup?",
      type: "boolean",
   },
   {
      label: "sv_vote_allow_spectators",
      value: "false",
      flags: ["sv", "release"],
      detail: "Allow spectators to initiate votes?",
      type: "boolean",
   },
   {
      label: "sv_vote_command_delay",
      value: "2",
      flags: ["sv", "release"],
      detail: "How long after a vote passes until the action happens",
      type: "number",
   },
   {
      label: "sv_vote_count_spectator_votes",
      value: "false",
      flags: ["sv", "release"],
      detail: "Allow spectators to vote on issues?",
      type: "boolean",
   },
   {
      label: "sv_vote_creation_timer",
      value: "120",
      flags: ["sv", "release"],
      detail: "How often someone can individually call a vote.",
      type: "number",
   },
   {
      label: "sv_vote_disallow_kick_on_match_point",
      value: "false",
      flags: ["sv", "release"],
      detail: "Disallow vote kicking on the match point round.",
      type: "boolean",
   },
   {
      label: "sv_vote_failure_timer",
      value: "300",
      flags: ["sv", "release"],
      detail: "A vote that fails cannot be re-submitted for this long",
      type: "number",
   },
   {
      label: "sv_vote_issue_kick_allowed",
      value: "true",
      flags: ["sv", "nf", "rep", "release"],
      detail: "Can people hold votes to kick players from the server?",
      type: "boolean",
   },
   {
      label: "sv_vote_issue_loadbackup_allowed",
      value: "true",
      flags: ["sv", "nf", "rep", "release"],
      detail: "Can people hold votes to load match from backup?",
      type: "boolean",
   },
   {
      label: "sv_vote_issue_loadbackup_spec_authoritative",
      value: "false",
      flags: ["sv", "release"],
      detail: "When enabled, admins load match from backup without players vote",
      type: "boolean",
   },
   {
      label: "sv_vote_issue_loadbackup_spec_only",
      value: "false",
      flags: ["sv", "nf", "rep", "release"],
      detail: "When enabled, only admins load match from backup",
      type: "boolean",
   },
   {
      label: "sv_vote_issue_loadbackup_spec_safe",
      value: "true",
      flags: ["sv", "release"],
      detail: "When enabled, admins load match from backup in safe time of the round only",
      type: "boolean",
   },
   {
      label: "sv_vote_issue_pause_match_spec_only",
      value: "false",
      flags: ["sv", "nf", "rep", "release"],
      detail: "When enabled, only admins start technical pause",
      type: "boolean",
   },
   {
      label: "sv_vote_issue_restart_game_allowed",
      value: "false",
      flags: ["sv", "release"],
      detail: "Can people hold votes to restart the game?",
      type: "boolean",
   },
   {
      label: "sv_vote_kick_ban_duration",
      value: "15",
      flags: ["sv", "nf", "rep", "release"],
      detail: "How long should a kick vote ban someone from the server? (in minutes)",
      type: "number",
   },
   {
      label: "sv_vote_quorum_ratio",
      value: "0.501",
      flags: ["sv", "release"],
      detail: "The minimum ratio of players needed to vote on an issue to resolve it.",
      type: "number",
   },
   {
      label: "sv_vote_timer_duration",
      value: "15",
      flags: ["sv", "release"],
      detail: "How long to allow voting on an issue",
      type: "number",
   },
   {
      label: "sv_vote_to_changelevel_before_match_point",
      value: "false",
      flags: ["sv", "rep", "release"],
      detail: "Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed)",
      type: "boolean",
   },
   {
      label: "sv_warmup_to_freezetime_delay",
      value: "4",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Delay between end of warmup and start of match.",
      type: "number",
   },
   {
      label: "sv_watchtransmit",
      value: "-2",
      flags: ["sv", "release"],
      detail: "Watch NetworkStateChanged info for this entity index.",
      type: "number",
   },
   {
      label: "sv_water_slow_amount",
      value: "0.9",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_wateraccelerate",
      value: "10",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_waterfriction",
      value: "1",
      flags: ["sv", "cl", "nf", "rep", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_weapon_require_use_grace_period",
      value: "1",
      flags: ["sv", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "sv_weapon_swap_difficulty_near_hi_pri",
      value: "2",
      flags: ["sv", "cl", "rep", "release"],
      detail:
         "0 = Cone searches easily reach past high priority items to swap weapons. 1 = Cone searches are narrowed and require that the weapon is strictly closer. 2 = cone searches are disabled near high priority items",
      type: "number",
   },
   {
      label: "sv_workshop_allow_other_maps",
      value: "true",
      flags: ["sv", "release"],
      detail:
         "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection.",
      type: "boolean",
   },
   {
      label: "sys_info",
      value: "cmd",
      flags: ["release"],
      detail: "Print system information to the console",
      type: "identifier",
   },
   {
      label: "sys_minidumpspewlines",
      value: "2000",
      flags: ["release"],
      detail: "Lines of crash dump console spew to keep.",
      type: "number",
   },
   {
      label: "teammenu",
      value: "cmd",
      flags: ["cl", "server_can_execute"],
      detail: "Show team selection window",
      type: "identifier",
   },
   {
      label: "telemetry_message",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Place a message in the telemetry timeline",
      type: "identifier",
   },
   {
      label: "telemetry_toggle_timespan",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Starts/stops a timespan with an ever increasing name.",
      type: "identifier",
   },
   {
      label: "Test_CreateEntity",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "test_dispatcheffect",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail:
         "Test a clientside dispatch effect.  Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>  Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>",
      type: "identifier",
   },
   {
      label: "Test_EHandle",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "test_entity_blocker",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "Test command that drops an entity blocker out in front of the player.",
      type: "identifier",
   },
   {
      label: "Test_ExitProcess",
      value: "cmd",
      flags: ["cheat"],
      detail: "Test_ExitProcess <exit code> - immediately kill the process.",
      type: "identifier",
   },
   {
      label: "test_list_entities",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "test-list entities",
      type: "identifier",
   },
   {
      label: "Test_RandomPlayerPosition",
      value: "cmd",
      flags: ["sv", "cheat"],
      detail: "",
      type: "identifier",
   },
   {
      label: "think_limit",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Maximum think time in milliseconds, warning is printed if this is exceeded.",
      type: "number",
   },
   {
      label: "thirdperson",
      value: "cmd",
      flags: ["cl", "cheat", "execute_per_tick"],
      detail: "Switch to thirdperson camera.",
      type: "identifier",
   },
   {
      label: "thirdperson_lockcamera",
      value: "false",
      flags: ["cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "thirdperson_mayamode",
      value: "cmd",
      flags: ["cl", "cheat"],
      detail: "Switch to thirdperson Maya-like camera controls.",
      type: "identifier",
   },
   {
      label: "timedemo",
      value: "cmd",
      flags: ["release"],
      detail: "Play a demo and report performance info.",
      type: "identifier",
   },
   {
      label: "timedemoquit",
      value: "cmd",
      flags: ["release"],
      detail: "Play a demo, report performance info, and then exit",
      type: "identifier",
   },
   {
      label: "timeleft",
      value: "cmd",
      flags: ["sv"],
      detail: "prints the time remaining in the match",
      type: "identifier",
   },
   {
      label: "timeout_ct_start",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "timeout_terrorist_start",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "toggle",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Toggles specified convar value on and off.",
      type: "identifier",
   },
   {
      label: "toggleconsole",
      value: "cmd",
      flags: ["norecord", "release"],
      detail: "Show/hide the console.",
      type: "identifier",
   },
   {
      label: "trusted_launch",
      value: "0",
      flags: ["cl", "a"],
      detail: "Trusted launch status",
      type: "number",
   },
   {
      label: "tv_advertise_watchable",
      value: "false",
      flags: ["prot", "nf", "norecord", "release"],
      detail: "GOTV advertises the match as watchable via game UI, clients watching via UI will not need to type password",
      type: "boolean",
   },
   {
      label: "tv_allow_autorecording_index",
      value: "-1",
      flags: ["sv", "release"],
      detail: "When >=0 restricts autorecording only to the specified TV index",
      type: "number",
   },
   {
      label: "tv_allow_camera_man_steamid",
      value: "0",
      flags: ["sv", "release"],
      detail: "Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man.",
      type: "number",
   },
   {
      label: "tv_allow_camera_man_steamid2",
      value: "0",
      flags: ["sv", "release"],
      detail: "Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man.",
      type: "number",
   },
   {
      label: "tv_allow_static_shots",
      value: "true",
      flags: ["sv", "release"],
      detail: "Auto director uses fixed level cameras for shots",
      type: "boolean",
   },
   {
      label: "tv_autorecord",
      value: "false",
      flags: ["release"],
      detail: "Automatically records all games as SourceTV demos.",
      type: "boolean",
   },
   {
      label: "tv_autoretry",
      value: "true",
      flags: ["release"],
      detail: "Relay proxies retry connection after network timeout",
      type: "boolean",
   },
   {
      label: "tv_broadcast",
      value: "false",
      flags: ["release"],
      detail: "Automatically broadcasts all games as GOTV demos through Steam.",
      type: "boolean",
   },
   {
      label: "tv_broadcast1",
      value: "false",
      flags: ["release"],
      detail: "Automatically broadcasts all games as GOTV[1] demos through Steam.",
      type: "boolean",
   },
   {
      label: "tv_broadcast_keyframe_interval",
      value: "3",
      flags: ["release"],
      detail: "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast relay server",
      type: "number",
   },
   {
      label: "tv_broadcast_keyframe_interval1",
      value: "3",
      flags: ["release"],
      detail: "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast1 relay server",
      type: "number",
   },
   {
      label: "tv_broadcast_max_requests",
      value: "20",
      flags: ["release"],
      detail:
         "Max number of broadcast http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped.",
      type: "number",
   },
   {
      label: "tv_broadcast_max_requests1",
      value: "20",
      flags: ["release"],
      detail:
         "Max number of broadcast1 http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped.",
      type: "number",
   },
   {
      label: "tv_broadcast_startup_resend_interval",
      value: "10",
      flags: ["release"],
      detail:
         "The interval, in seconds, of re-sending startup data to the broadcast relay server (useful in case relay crashes, restarts or startup data http request fails)",
      type: "number",
   },
   {
      label: "tv_broadcast_status",
      value: "cmd",
      flags: ["release"],
      detail: "Print out broadcast status",
      type: "identifier",
   },
   {
      label: "tv_broadcast_url",
      value: "http",
      flags: ["//localhost"],
      detail: "8080 : release                          : URL of the broadcast relay",
      type: "identifier",
   },
   {
      label: "tv_broadcast_url1",
      value: "http",
      flags: ["//localhost"],
      detail: "8080 : release                          : URL of the broadcast relay1",
      type: "identifier",
   },
   {
      label: "tv_chatgroupsize",
      value: "0",
      flags: ["release"],
      detail: "Set the default chat group size",
      type: "number",
   },
   {
      label: "tv_chattimelimit",
      value: "0.2",
      flags: ["release"],
      detail: "Limits spectators to chat only every n seconds",
      type: "number",
   },
   {
      label: "tv_clients",
      value: "cmd",
      flags: ["release"],
      detail: "Shows list of connected SourceTV clients.",
      type: "identifier",
   },
   {
      label: "tv_debug",
      value: "0",
      flags: ["release"],
      detail: "SourceTV debug info.",
      type: "number",
   },
   {
      label: "tv_delay",
      value: "105",
      flags: ["sv", "release"],
      detail: "SourceTV broadcast delay in seconds",
      type: "number",
   },
   {
      label: "tv_delaymapchange",
      value: "true",
      flags: ["sv", "release"],
      detail: "Delays map change until broadcast is complete",
      type: "boolean",
   },
   {
      label: "tv_deltacache",
      value: "2",
      flags: ["release"],
      detail: "Enable delta entity bit stream cache",
      type: "number",
   },
   {
      label: "tv_dispatchmode",
      value: "1",
      flags: ["release"],
      detail: "Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always",
      type: "number",
   },
   {
      label: "tv_enable",
      value: "false",
      flags: ["nf", "release"],
      detail: "Activates SourceTV on server.",
      type: "boolean",
   },
   {
      label: "tv_enable1",
      value: "false",
      flags: ["nf", "release"],
      detail: "Activates SourceTV[1] on server.",
      type: "boolean",
   },
   {
      label: "tv_enable_delta_frames",
      value: "true",
      flags: ["release"],
      detail:
         "Indicates whether or not the tv should use delta frames for storage of intermediate frames. This takes more CPU but significantly less memory.",
      type: "boolean",
   },
   {
      label: "tv_enable_dynamic",
      value: "false",
      flags: ["nf", "release"],
      detail: "When enabled, changes in tv_enable convars cause immediate startup or shutdown of hltv server",
      type: "boolean",
   },
   {
      label: "tv_listen_voice_indices",
      value: "0",
      flags: ["cl", "user"],
      detail: "Bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none",
      type: "number",
   },
   {
      label: "tv_listen_voice_indices_h",
      value: "0",
      flags: ["cl", "user"],
      detail: "High 32 bits of bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none",
      type: "number",
   },
   {
      label: "tv_maxclients",
      value: "128",
      flags: ["release"],
      detail: "Maximum client number on SourceTV server.",
      type: "number",
   },
   {
      label: "tv_maxclients_relayreserved",
      value: "0",
      flags: ["release"],
      detail: "This number of relay client connections are reserved for SourceTV relays.",
      type: "number",
   },
   {
      label: "tv_maxrate",
      value: "0",
      flags: ["release"],
      detail: "Max SourceTV spectator bandwidth rate allowed, 0 == unlimited",
      type: "number",
   },
   {
      label: "tv_mem",
      value: "cmd",
      flags: ["release"],
      detail:
         "hltv memory statistics. Use with 'ent 10' (dump entity 10 memory usage) or 'top 8' (dump top 8 memory users) or 'class' CWorld (dump CWorld class)",
      type: "identifier",
   },
   {
      label: "tv_name",
      value: "SourceTV",
      flags: ["release"],
      detail: "SourceTV host name",
      type: "identifier",
   },
   {
      label: "tv_nochat",
      value: "false",
      flags: ["a", "user"],
      detail: "Don't receive chat messages from other SourceTV spectators",
      type: "boolean",
   },
   {
      label: "tv_overridemaster",
      value: "false",
      flags: ["release"],
      detail: "Overrides the SourceTV master root address.",
      type: "boolean",
   },
   {
      label: "tv_password",
      value: "0",
      flags: ["prot", "nf", "norecord", "release"],
      detail: "SourceTV password for all clients",
      type: "number",
   },
   {
      label: "tv_playcast_delay_prediction",
      value: "true",
      flags: ["release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "tv_playcast_delay_resync",
      value: "0",
      flags: ["release"],
      detail:
         "To alleviate intermittent network connectivity problems, this is the number of seconds to wait before actually re-syncing the stream after failure",
      type: "number",
   },
   {
      label: "tv_playcast_retry_timeout",
      value: "12",
      flags: ["release"],
      detail: "In case of intermittent network problems, how long should playcast retry fragment retrieval before resorting to resync",
      type: "number",
   },
   {
      label: "tv_port",
      value: "27020",
      flags: ["release"],
      detail: "Host SourceTV[0] port",
      type: "number",
   },
   {
      label: "tv_port1",
      value: "27021",
      flags: ["release"],
      detail: "Host SourceTV[1] port",
      type: "number",
   },
   {
      label: "tv_record",
      value: "cmd",
      flags: ["release"],
      detail: "Starts SourceTV demo recording.",
      type: "identifier",
   },
   {
      label: "tv_record_immediate",
      value: "1",
      flags: ["release"],
      detail: "tv_record starting the moment tv_record was executed, not tv_delay earlier",
      type: "number",
   },
   {
      label: "tv_relay",
      value: "cmd",
      flags: ["release"],
      detail: "Connect to SourceTV server and relay broadcast.",
      type: "identifier",
   },
   {
      label: "tv_relaypassword",
      value: "0",
      flags: ["prot", "nf", "norecord", "release"],
      detail: "SourceTV password for relay proxies",
      type: "number",
   },
   {
      label: "tv_relayradio",
      value: "false",
      flags: ["sv", "release"],
      detail: "Relay team radio commands to TV: 0=off, 1=on",
      type: "boolean",
   },
   {
      label: "tv_relayvoice",
      value: "true",
      flags: ["release"],
      detail: "Relay voice data: 0=off, 1=on",
      type: "boolean",
   },
   {
      label: "tv_retry",
      value: "cmd",
      flags: ["release"],
      detail: "Reconnects the SourceTV relay proxy.",
      type: "identifier",
   },
   {
      label: "tv_show_allchat",
      value: "true",
      flags: ["sv", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "tv_spectator_port_offset",
      value: "0",
      flags: ["cl", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "tv_status",
      value: "cmd",
      flags: ["release"],
      detail: "Show SourceTV server status.",
      type: "identifier",
   },
   {
      label: "tv_stop",
      value: "cmd",
      flags: ["release"],
      detail: "Stops the SourceTV broadcast.",
      type: "identifier",
   },
   {
      label: "tv_stoprecord",
      value: "cmd",
      flags: ["release"],
      detail: "Stops SourceTV demo recording.",
      type: "identifier",
   },
   {
      label: "tv_time_remaining",
      value: "cmd",
      flags: ["sv", "release"],
      detail: "Print remaining tv broadcast time",
      type: "identifier",
   },
   {
      label: "tv_timeout",
      value: "20",
      flags: ["release"],
      detail: "SourceTV connection timeout in seconds.",
      type: "number",
   },
   {
      label: "tv_title",
      value: "SourceTV",
      flags: ["release"],
      detail: "Set title for SourceTV spectator UI",
      type: "identifier",
   },
   {
      label: "tv_transmitall",
      value: "false",
      flags: ["rep", "release"],
      detail: "Transmit all entities (not only director view)",
      type: "boolean",
   },
   {
      label: "ui_deepstats_radio_heat_figurine",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_deepstats_radio_heat_tab",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_deepstats_radio_heat_team",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_deepstats_toplevel_mode",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_inventorysettings_recently_acknowledged",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_lobby_draft_enabled",
      value: "false",
      flags: ["cl", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "ui_mainmenu_bkgnd_movie_1016BB11",
      value: "de_inferno",
      flags: ["cl", "a", "release"],
      detail: "Main menu background movie",
      type: "identifier",
   },
   {
      label: "ui_nearbylobbies_filter3",
      value: "competitive",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_news_last_read_link",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_party_msg_sound_enabled",
      value: "true",
      flags: ["cl", "release"],
      detail: "When enabled, lobby messages will play a short sound",
      type: "boolean",
   },
   {
      label: "ui_playsettings_custom_preset",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_directchallengekey",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_listen_casual",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_listen_competitive",
      value: "16",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_listen_cooperative",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_listen_deathmatch",
      value: "32",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_listen_scrimcomp2v2",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_listen_skirmish",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_listen_survival",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_official_casual",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_official_competitive",
      value: "16",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_official_cooperative",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_official_deathmatch",
      value: "32",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_official_scrimcomp2v2",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_official_skirmish",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_flags_official_survival",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_maps_listen_casual",
      value: "mg_de_nuke",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_maps_listen_competitive",
      value: "mg_de_dust2",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_maps_listen_deathmatch",
      value: "mg_de_dust2",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_maps_listen_scrimcomp2v2",
      value: "mg_de_inferno",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_maps_listen_skirmish",
      value: "mg_skirmish_armsrace",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_maps_official_casual",
      value: "mg_casualdelta",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_maps_official_deathmatch",
      value: "mg_dust247",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_maps_workshop",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_mode_listen",
      value: "casual",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_mode_official_v20",
      value: "casual",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_playsettings_survival_solo",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_playsettings_warmup_map_name",
      value: "de_mirage",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_popup_weaponupdate_version",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_setting_advertiseforhire_auto",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "Whether users will automatically advertise for invites (0: off; 1: last; 2: auto)",
      type: "number",
   },
   {
      label: "ui_setting_advertiseforhire_auto_last",
      value: "/competitive",
      flags: ["cl", "a", "release"],
      detail: "Which game mode users last used to advertise for invites",
      type: "identifier",
   },
   {
      label: "ui_show_subscription_alert",
      value: "0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_show_unlock_competitive_alert",
      value: "1",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "number",
   },
   {
      label: "ui_steam_overlay_notification_position",
      value: "topright",
      flags: ["cl", "a"],
      detail: "Steam overlay notification position",
      type: "identifier",
   },
   {
      label: "ui_steam_overlay_notification_position_horz",
      value: "0",
      flags: ["cl", "a"],
      detail: "Steam overlay notification position horizontal offset",
      type: "number",
   },
   {
      label: "ui_steam_overlay_notification_position_vert",
      value: "0",
      flags: ["cl", "a"],
      detail: "Steam overlay notification position vertical offset",
      type: "number",
   },
   {
      label: "ui_vanitysetting_loadoutslot_ct",
      value: "secondary0",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_vanitysetting_loadoutslot_t",
      value: "secondary3",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "ui_vanitysetting_team",
      value: "ct",
      flags: ["cl", "a", "release"],
      detail: "",
      type: "identifier",
   },
   {
      label: "unbind",
      value: "cmd",
      flags: ["release"],
      detail: "Unbind a key.",
      type: "identifier",
   },
   {
      label: "unbindall",
      value: "cmd",
      flags: ["release"],
      detail: "Unbind all keys.",
      type: "identifier",
   },
   {
      label: "unpause",
      value: "cmd",
      flags: ["release"],
      detail: "Clear the pause state of the server.",
      type: "identifier",
   },
   {
      label: "vconsole_rcon_server_details",
      value: "0",
      flags: ["norecord", "release", "server_cant_query"],
      detail: "when non-empty allows for easy vconsole connection to the dedicated server.",
      type: "number",
   },
   {
      label: "view_punch_decay",
      value: "18",
      flags: ["sv", "cl", "rep", "cheat", "release"],
      detail: "Decay factor exponent for view punch",
      type: "number",
   },
   {
      label: "viewmodel_always_on",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "Force the view model to draw, even when in 3rd person",
      type: "boolean",
   },
   {
      label: "viewmodel_fov",
      value: "60",
      flags: ["cl", "a"],
      detail: "Viewmodel FOV",
      type: "number",
   },
   {
      label: "viewmodel_offset_randomize",
      value: "false",
      flags: ["cl", "cheat"],
      detail: "randomly change viewmodel offsets to visualize range",
      type: "boolean",
   },
   {
      label: "viewmodel_offset_x",
      value: "1",
      flags: ["cl", "a"],
      detail: "viewmodel_offset_x",
      type: "number",
   },
   {
      label: "viewmodel_offset_y",
      value: "1",
      flags: ["cl", "a"],
      detail: "viewmodel_offset_y",
      type: "number",
   },
   {
      label: "viewmodel_offset_z",
      value: "-1",
      flags: ["cl", "a"],
      detail: "viewmodel_offset_z",
      type: "number",
   },
   {
      label: "viewmodel_presetpos",
      value: "1",
      flags: ["cl", "a"],
      detail: "1:'Desktop', 2:'Couch', 3:'Classic'",
      type: "number",
   },
   {
      label: "violence_ablood",
      value: "true",
      flags: ["a"],
      detail: "Draw alien blood",
      type: "boolean",
   },
   {
      label: "violence_agibs",
      value: "true",
      flags: ["a"],
      detail: "Show alien gib entities",
      type: "boolean",
   },
   {
      label: "violence_hblood",
      value: "true",
      flags: ["a"],
      detail: "Draw human blood",
      type: "boolean",
   },
   {
      label: "violence_hgibs",
      value: "true",
      flags: ["a"],
      detail: "Show human gib entities",
      type: "boolean",
   },
   {
      label: "vis_force",
      value: "false",
      flags: ["sv", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "vismon_poll_frequency",
      value: "0.5",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "vismon_trace_limit",
      value: "12",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "vmix_input",
      value: "cmd",
      flags: ["cheat"],
      detail: "Set an input mix value",
      type: "identifier",
   },
   {
      label: "vmix_output",
      value: "cmd",
      flags: ["cheat"],
      detail: "Dump main graph control output values",
      type: "identifier",
   },
   {
      label: "voice_always_sample_mic",
      value: "false",
      flags: ["a"],
      detail: "For systems experiencing a hang/stall when using voice chat.",
      type: "boolean",
   },
   {
      label: "voice_loopback",
      value: "false",
      flags: ["user"],
      detail: "",
      type: "boolean",
   },
   {
      label: "voice_modenable",
      value: "true",
      flags: ["cl", "a", "release", "clientcmd_can_execute"],
      detail: "Enable/disable voice in this mod.",
      type: "boolean",
   },
   {
      label: "voice_modenable_toggle",
      value: "cmd",
      flags: ["cl", "release"],
      detail: "Toggle the voice_modenable convar.",
      type: "identifier",
   },
   {
      label: "voice_player_speaking_delay_threshold",
      value: "0.5",
      flags: ["sv", "cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "voice_test_log_send",
      value: "false",
      flags: ["release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "voice_threshold",
      value: "4000",
      flags: ["cl", "a"],
      detail: "",
      type: "number",
   },
   {
      label: "voice_vox",
      value: "0",
      flags: ["cl", "a", "per_user"],
      detail: "Voice chat uses a vox-style always on",
      type: "number",
   },
   {
      label: "volume",
      value: "0.134001",
      flags: ["a"],
      detail: "Sound volume",
      type: "number",
   },
   {
      label: "volume_fog_clipmap_update",
      value: "1",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "volume_fog_clipmaps_enabled",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "volume_fog_disable",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "volume_fog_dither_scale",
      value: "3",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "volume_fog_enable_jitter",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "volume_fog_enable_stereo",
      value: "true",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "volume_fog_enlarge_frusta",
      value: "2",
      flags: ["cheat"],
      detail: "",
      type: "number",
   },
   {
      label: "volume_fog_show_volumes",
      value: "false",
      flags: ["cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "vphys2_friction_factor",
      value: "1",
      flags: ["cheat"],
      detail: "Change global friction factor",
      type: "number",
   },
   {
      label: "vphys2_restitution_factor",
      value: "1",
      flags: ["cheat"],
      detail: "Change global restitution factor",
      type: "number",
   },
   {
      label: "weapon_accuracy_forcespread",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Force spread to the specified value.",
      type: "number",
   },
   {
      label: "weapon_accuracy_nospread",
      value: "false",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Disable weapon inaccuracy spread",
      type: "boolean",
   },
   {
      label: "weapon_accuracy_reset_on_deploy",
      value: "false",
      flags: ["sv", "cl", "rep", "cheat", "release"],
      detail: "On deploy, forcibly reset weapon accuracy to zero.",
      type: "boolean",
   },
   {
      label: "weapon_accuracy_shotgun_spread_patterns",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "",
      type: "boolean",
   },
   {
      label: "weapon_air_spread_scale",
      value: "1",
      flags: ["sv", "cl", "rep", "release"],
      detail: "Scale factor for jumping inaccuracy, set to 0 to make jumping accuracy equal to standing",
      type: "number",
   },
   {
      label: "weapon_auto_cleanup_time",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near.",
      type: "number",
   },
   {
      label: "weapon_debug_spread_gap",
      value: "0.67",
      flags: ["cl", "cheat", "per_user"],
      detail: "",
      type: "number",
   },
   {
      label: "weapon_debug_spread_show",
      value: "0",
      flags: ["cl", "cheat", "per_user"],
      detail: "Enables display of weapon accuracy; 1: show accuracy box, 3: show accuracy with dynamic crosshair",
      type: "number",
   },
   {
      label: "weapon_max_before_cleanup",
      value: "0",
      flags: ["sv", "cl", "rep", "release"],
      detail: "If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world.",
      type: "number",
   },
   {
      label: "weapon_near_empty_sound",
      value: "true",
      flags: ["sv", "cl", "rep", "cheat"],
      detail: "",
      type: "boolean",
   },
   {
      label: "weapon_reticle_knife_show",
      value: "true",
      flags: ["sv", "cl", "rep", "release"],
      detail: "When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife.",
      type: "boolean",
   },
   {
      label: "weapon_sound_falloff_multiplier",
      value: "1",
      flags: ["sv", "cl", "rep", "cheat", "release"],
      detail: "Scaling for falloff of weapon firing sounds",
      type: "number",
   },
   {
      label: "writekeybindings",
      value: "cmd",
      flags: ["release"],
      detail: "Saves current key bindings to disk.",
      type: "identifier",
   },
   {
      label: "N/A",
      value: "N/A",
      flags: ["N/A"],
      detail: "N/A",
      type: "identifier",
   },
   {
      label: "N/A",
      value: "N/A",
      flags: ["N/A"],
      detail: "N/A",
      type: "identifier",
   },
   {
      label: "zoom_sensitivity_ratio",
      value: "1",
      flags: ["cl", "a", "per_user"],
      detail: "Additional mouse sensitivity scale factor applied when FOV is zoomed in.",
      type: "number",
   },
];

export const flags = [
   { label: "norecord", detail: "" },
   { label: "release", detail: "" },
   { label: "a", detail: "" },
   { label: "sv", detail: "" },
   { label: "cheat", detail: "" },
   { label: "cl", detail: "" },
   { label: "rep", detail: "" },
   { label: "clientcmd_can_execute", detail: "" },
   { label: "nf", detail: "" },
   { label: "server_can_execute", detail: "" },
   { label: "user", detail: "" },
   { label: "per_user", detail: "" },
   { label: "vconsole_fuzzy", detail: "" },
   { label: "disconnected", detail: "" },
   { label: "demo", detail: "" },
   { label: "execute_per_tick", detail: "" },
   { label: "nolog", detail: "" },
   { label: "vconsole_set_focus", detail: "" },
   { label: "server_cant_query", detail: "" },
   { label: "sp", detail: "" },
   { label: "prot", detail: "" },
   { label: "//localhost", detail: "" },
];
